{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Portal\\\\soc-portal\\\\src\\\\pages\\\\Shifts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/Shifts.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst shiftTimeMapping = {\n  Night: {\n    start: \"00:00\",\n    end: \"08:00\"\n  },\n  Morning: {\n    start: \"08:00\",\n    end: \"16:00\"\n  },\n  Evening: {\n    start: \"16:00\",\n    end: \"24:00\"\n  }\n};\nconst Shifts = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  const [cabStatusList, setCabStatusList] = useState([]);\n  const [shifts, setShifts] = useState([]);\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const [commentsMap, setCommentsMap] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\n  const [newShiftType, setNewShiftType] = useState(\"Night\");\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const [analysts, setAnalysts] = useState([]);\n  const [cabOpted, setCabOpted] = useState(false);\n  const [editShiftType, setEditShiftType] = useState(\"Night\");\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\n  const isMountedRef = useRef(true);\n  useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (!user) {\n      setIsModalOpen(false);\n      setIsAddModalOpen(false);\n    }\n  }, [user]);\n  const fetchShifts = () => {\n    fetch(\"http://192.168.29.194:5000/api/shifts\").then(res => res.json()).then(data => {\n      if (isMountedRef.current) setShifts(data);\n    }).catch(err => {\n      if (isMountedRef.current) console.error(\"Failed to fetch shifts:\", err);\n    });\n  };\n  useEffect(() => {\n    fetchShifts();\n    fetch(\"http://192.168.29.194:5000/api/analysts\").then(res => res.json()).then(data => {\n      if (isMountedRef.current) setAnalysts(data);\n    }).catch(err => {\n      if (isMountedRef.current) console.error(\"Failed to fetch analysts:\", err);\n    });\n  }, []);\n  const handleEmployeeToggle = username => {\n    setSelectedEmployees(prev => prev.includes(username) ? prev.filter(u => u !== username) : [...prev, username]);\n  };\n  const isUserInShift = () => {\n    return cabStatusList.some(emp => emp.username === (user === null || user === void 0 ? void 0 : user.username));\n  };\n  const handleCabToggle = async () => {\n    const newCabOpted = !cabOpted;\n    setCabOpted(newCabOpted);\n    try {\n      await fetch(`http://192.168.29.194:5000/api/update_cab_status`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id,\n          employee_id: user.id,\n          cab_facility: newCabOpted ? \"Yes\" : \"No\"\n        })\n      });\n      setCabStatusList(prevList => prevList.map(emp => emp.username === user.username ? {\n        ...emp,\n        cab_facility: newCabOpted ? \"Yes\" : \"No\"\n      } : emp));\n    } catch (err) {\n      if (isMountedRef.current) console.error(\"Failed to update cab status:\", err);\n    }\n  };\n  const handleEventClick = async info => {\n    const shift = info.event;\n    if (!isMountedRef.current) return;\n    setSelectedShift(shift);\n    setComment(commentsMap[shift.id] || \"\");\n    if (isAdmin) {\n      const date = shift.start.toISOString().slice(0, 10);\n      let shiftType = \"Morning\";\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\n      const firstEmp = shift.title.split(\" - \")[0];\n      const matchedEmp = analysts.find(emp => emp.username === firstEmp);\n      setEditShiftType(shiftType);\n      setEditShiftDate(date);\n      setEditEmployeeId((matchedEmp === null || matchedEmp === void 0 ? void 0 : matchedEmp.id) || \"\");\n    }\n    try {\n      const response = await fetch(`http://192.168.29.194:5000/api/shifts/${shift.id}/cab-status`);\n      if (!response.ok) throw new Error(\"Failed to fetch cab status\");\n      const data = await response.json();\n      if (isMountedRef.current) {\n        setCabStatusList(data);\n        if (!isAdmin && data.length > 0) {\n          const currentUser = data.find(emp => emp.username === user.username);\n          setCabOpted((currentUser === null || currentUser === void 0 ? void 0 : currentUser.cab_facility) === \"Yes\");\n        }\n      }\n    } catch (error) {\n      if (isMountedRef.current) {\n        console.error(\"Error fetching cab status:\", error);\n        setCabStatusList([]);\n      }\n    }\n    if (isMountedRef.current) setIsModalOpen(true);\n  };\n  const isWithinShift = () => {\n    if (!selectedShift) return false;\n    const now = new Date();\n    const start = new Date(selectedShift.start);\n    const end = new Date(selectedShift.end);\n    return now >= start && now <= end;\n  };\n  const handleSave = () => {\n    if (selectedShift) {\n      setCommentsMap(prev => ({\n        ...prev,\n        [selectedShift.id]: comment\n      }));\n    }\n    setIsModalOpen(false);\n  };\n  const handleAddShift = async () => {\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\n      alert(\"Please fill all fields.\");\n      return;\n    }\n    const {\n      start,\n      end\n    } = shiftTimeMapping[newShiftType];\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\n    if (end === \"00:00\") {\n      endDateTime.setDate(endDateTime.getDate() + 1);\n    }\n    const selectedEmployeeObjects = analysts.filter(emp => selectedEmployees.includes(emp.username));\n    try {\n      for (let emp of selectedEmployeeObjects) {\n        const response = await fetch(\"http://192.168.29.194:5000/api/create_shift\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: newShiftDate,\n            shift_type: newShiftType.toLowerCase(),\n            employee_ids: [emp.id]\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          alert(\"Error: \" + data.error);\n          return;\n        }\n      }\n      fetchShifts();\n      alert(\"Shift(s) created successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to create shift.\");\n    }\n    setIsAddModalOpen(false);\n    setSelectedEmployees([]);\n  };\n  const handleEditShift = async () => {\n    try {\n      var _analysts$find;\n      const shiftId = selectedShift.id;\n      const {\n        start,\n        end\n      } = shiftTimeMapping[editShiftType];\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\n      if (end === \"00:00\") {\n        endDateTime.setDate(endDateTime.getDate() + 1);\n      }\n      const selectedUsername = ((_analysts$find = analysts.find(emp => emp.id === editEmployeeId)) === null || _analysts$find === void 0 ? void 0 : _analysts$find.username) || \"\";\n      const isDuplicate = shifts.some(shift => {\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\n        const sameEmployee = shift.title.includes(selectedUsername);\n        const differentShift = String(shift.id) !== String(shiftId);\n        return differentShift && sameStart && sameEnd && sameEmployee;\n      });\n      if (isDuplicate) {\n        alert(\"Another shift already exists in that slot!\");\n        return;\n      }\n      const response = await fetch(\"http://192.168.29.194:5000/api/edit_shift\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: shiftId,\n          date: editShiftDate,\n          shift_type: editShiftType.toLowerCase(),\n          employee_id: editEmployeeId\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      fetchShifts();\n      setIsModalOpen(false);\n      alert(\"Shift updated successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to edit shift.\");\n    }\n  };\n  const handleDeleteShift = async () => {\n    try {\n      const response = await fetch(\"http://192.168.29.194:5000/api/delete_shift\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      fetchShifts();\n      setIsModalOpen(false);\n      alert(\"Shift deleted successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to delete shift.\");\n    }\n  };\n  const slotLabelContent = arg => {\n    if (arg.date.getHours() === 0) return \"Night\";\n    if (arg.date.getHours() === 8) return \"Morning\";\n    if (arg.date.getHours() === 16) return \"Evening\";\n    return \"\";\n  };\n  const slotLaneContent = arg => {\n    const hour = arg.date.getHours();\n    if (hour !== 0 && hour !== 8 && hour !== 16) {\n      return {\n        display: \"none\"\n      };\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shifts-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shifts-calendar\",\n      children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsAddModalOpen(true),\n        className: \"add-shift-btn\",\n        children: \"Create Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        eventDidMount: info => {\n          const shiftType = info.event.extendedProps.shift_type;\n          const shiftColors = {\n            morning: \"#514c00\",\n            // green\n            evening: \"#51002e\",\n            // yellow\n            night: \"#003751\" // blue\n          };\n          const color = shiftColors[shiftType === null || shiftType === void 0 ? void 0 : shiftType.toLowerCase()] || \"#6c757d\";\n\n          // Apply background/border/text colors\n          info.el.style.backgroundColor = color;\n          info.el.style.borderColor = color;\n          info.el.style.color = \"#fff\";\n        },\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        slotDuration: \"08:00:00\",\n        slotLabelInterval: {\n          hours: 8\n        },\n        allDaySlot: false,\n        slotMinTime: \"00:00:00\",\n        slotMaxTime: \"24:00:00\",\n        events: shifts,\n        eventClick: handleEventClick,\n        slotLabelContent: slotLabelContent,\n        slotEventOverlap: false,\n        slotLaneContent: slotLaneContent,\n        headerToolbar: {\n          left: \"prev,next,today\",\n          center: \"title\",\n          right: \"timeGridDay,timeGridWeek,dayGridMonth\"\n        },\n        height: \"auto\",\n        eventOverlap: false,\n        dayMaxEventRows: true,\n        dayMaxEvents: true,\n        displayEventTime: false,\n        eventOrder: \"title\",\n        eventContent: arg => {\n          const titleParts = arg.event.title.split(\" - \");\n          const shiftTitle = titleParts[0];\n          const employeesRaw = titleParts[1] || \"\";\n          const employeeList = employeesRaw.split(\",\").map((name, index) => `<div>${index + 1}. ${name.trim()}</div>`).join(\"\");\n          return {\n            html: `<div style=\"padding: 2px;\">\n                <strong>${shiftTitle}</strong>\n                <div style=\"margin-top: 4px;\">${employeeList}</div>\n             </div>`\n          };\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shift Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 3\n      }, this), selectedShift && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Shift:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 13\n              }, this), \" \", selectedShift.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 13\n              }, this), \" \", new Date(selectedShift.start).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 13\n              }, this), \" \", new Date(selectedShift.end).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cab-status-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Cab Facility Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: cabStatusList.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"No cab data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 17\n                }, this) : cabStatusList.map(emp => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [emp.username, \" \\u2013 \", emp.cab_facility === 'Yes' ? 'Yes' : 'No']\n                }, emp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 11\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Edit Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editShiftDate,\n                onChange: e => setEditShiftDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Shift Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editShiftType,\n                onChange: e => setEditShiftType(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Morning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Evening\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Night\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Employee:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editEmployeeId,\n                onChange: e => setEditEmployeeId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 17\n                }, this), analysts.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: emp.id,\n                  children: emp.username\n                }, emp.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 19\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Comments / Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"10\",\n              value: comment,\n              onChange: e => setComment(e.target.value),\n              disabled: !isWithinShift(),\n              placeholder: isWithinShift() ? \"Add or edit your notes here...\" : \"Editing is disabled outside shift time.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !isWithinShift(),\n            className: \"modal-btn save-btn\",\n            children: \"Save Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 9\n          }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-wrapper-35\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"cabSwitch\",\n              className: \"switch\",\n              checked: cabOpted,\n              onChange: handleCabToggle,\n              disabled: !isUserInShift()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cabSwitch\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"switch-x-text\",\n                children: \"Cab is\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"switch-x-toggletext\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"switch-x-unchecked\",\n                  children: \"Not Opted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"switch-x-checked\",\n                  children: \"Opted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 11\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditShift,\n              className: \"modal-btn edit-btn\",\n              children: \"Update Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteShift,\n              className: \"modal-btn delete-btn\",\n              children: \"Delete Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            className: \"modal-btn cancel-btn\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAddModalOpen,\n      onRequestClose: () => setIsAddModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newShiftDate,\n        onChange: e => setNewShiftDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Shift Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newShiftType,\n        onChange: e => setNewShiftType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Morning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Evening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Night\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Employees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-checkboxes\",\n        children: analysts.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employee-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `emp-${emp.id}`,\n            checked: selectedEmployees.includes(emp.username),\n            onChange: () => handleEmployeeToggle(emp.username)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `emp-${emp.id}`,\n            children: emp.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShift,\n          className: \"modal-btn save-btn\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddModalOpen(false),\n          className: \"modal-btn cancel-btn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(Shifts, \"kwubBfOecql32upNqHcnXs9EiO0=\", false, function () {\n  return [useAuth];\n});\n_c = Shifts;\nexport default Shifts;\nvar _c;\n$RefreshReg$(_c, \"Shifts\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","shiftTimeMapping","Night","start","end","Morning","Evening","Shifts","_s","user","isAdmin","role","cabStatusList","setCabStatusList","shifts","setShifts","selectedShift","setSelectedShift","comment","setComment","commentsMap","setCommentsMap","isModalOpen","setIsModalOpen","isAddModalOpen","setIsAddModalOpen","newShiftDate","setNewShiftDate","newShiftType","setNewShiftType","selectedEmployees","setSelectedEmployees","analysts","setAnalysts","cabOpted","setCabOpted","editShiftType","setEditShiftType","editShiftDate","setEditShiftDate","editEmployeeId","setEditEmployeeId","isMountedRef","current","fetchShifts","fetch","then","res","json","data","catch","err","console","error","handleEmployeeToggle","username","prev","includes","filter","u","isUserInShift","some","emp","handleCabToggle","newCabOpted","method","headers","body","JSON","stringify","shift_id","id","employee_id","cab_facility","prevList","map","handleEventClick","info","shift","event","date","toISOString","slice","shiftType","title","firstEmp","split","matchedEmp","find","response","ok","Error","length","currentUser","isWithinShift","now","Date","handleSave","handleAddShift","alert","startDateTime","endDateTime","setDate","getDate","selectedEmployeeObjects","shift_type","toLowerCase","employee_ids","handleEditShift","_analysts$find","shiftId","selectedUsername","isDuplicate","sameStart","getTime","sameEnd","sameEmployee","differentShift","String","result","handleDeleteShift","slotLabelContent","arg","getHours","slotLaneContent","hour","display","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","eventDidMount","extendedProps","shiftColors","morning","evening","night","color","el","style","backgroundColor","borderColor","plugins","initialView","slotDuration","slotLabelInterval","hours","allDaySlot","slotMinTime","slotMaxTime","events","eventClick","slotEventOverlap","headerToolbar","left","center","right","height","eventOverlap","dayMaxEventRows","dayMaxEvents","displayEventTime","eventOrder","eventContent","titleParts","shiftTitle","employeesRaw","employeeList","name","index","trim","join","html","isOpen","onRequestClose","overlayClassName","toLocaleString","type","value","onChange","e","target","rows","disabled","placeholder","checked","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Portal/soc-portal/src/pages/Shifts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport Modal from \"react-modal\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/Shifts.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst shiftTimeMapping = {\r\n  Night: { start: \"00:00\", end: \"08:00\" },\r\n  Morning: { start: \"08:00\", end: \"16:00\" },\r\n  Evening: { start: \"16:00\", end: \"24:00\" },\r\n};\r\n\r\nconst Shifts = () => {\r\n  const { user } = useAuth();\r\n  const isAdmin = user?.role === \"admin\";\r\n  const [cabStatusList, setCabStatusList] = useState([]);\r\n  const [shifts, setShifts] = useState([]);\r\n  const [selectedShift, setSelectedShift] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\r\n  const [newShiftType, setNewShiftType] = useState(\"Night\");\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n  const [analysts, setAnalysts] = useState([]);\r\n  const [cabOpted, setCabOpted] = useState(false);\r\n  const [editShiftType, setEditShiftType] = useState(\"Night\");\r\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\r\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\r\n\r\n  const isMountedRef = useRef(true);\r\n  useEffect(() => {\r\n    isMountedRef.current = true;\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setIsModalOpen(false);\r\n      setIsAddModalOpen(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchShifts = () => {\r\n    fetch(\"http://192.168.29.194:5000/api/shifts\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (isMountedRef.current) setShifts(data);\r\n      })\r\n      .catch((err) => {\r\n        if (isMountedRef.current) console.error(\"Failed to fetch shifts:\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShifts();\r\n    fetch(\"http://192.168.29.194:5000/api/analysts\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (isMountedRef.current) setAnalysts(data);\r\n      })\r\n      .catch((err) => {\r\n        if (isMountedRef.current) console.error(\"Failed to fetch analysts:\", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleEmployeeToggle = (username) => {\r\n    setSelectedEmployees((prev) =>\r\n      prev.includes(username) ? prev.filter((u) => u !== username) : [...prev, username]\r\n    );\r\n  };\r\n\r\n  const isUserInShift = () => {\r\n    return cabStatusList.some((emp) => emp.username === user?.username);\r\n  };\r\n\r\n  const handleCabToggle = async () => {\r\n    const newCabOpted = !cabOpted;\r\n    setCabOpted(newCabOpted);\r\n    try {\r\n      await fetch(`http://192.168.29.194:5000/api/update_cab_status`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: selectedShift.id,\r\n          employee_id: user.id,\r\n          cab_facility: newCabOpted ? \"Yes\" : \"No\",\r\n        }),\r\n      });\r\n      setCabStatusList(prevList =>\r\n        prevList.map(emp =>\r\n          emp.username === user.username\r\n            ? { ...emp, cab_facility: newCabOpted ? \"Yes\" : \"No\" }\r\n            : emp\r\n        )\r\n      );\r\n    } catch (err) {\r\n      if (isMountedRef.current) console.error(\"Failed to update cab status:\", err);\r\n    }\r\n  };\r\n\r\n  const handleEventClick = async (info) => {\r\n    const shift = info.event;\r\n    if (!isMountedRef.current) return;\r\n\r\n    setSelectedShift(shift);\r\n    setComment(commentsMap[shift.id] || \"\");\r\n\r\n    if (isAdmin) {\r\n      const date = shift.start.toISOString().slice(0, 10);\r\n      let shiftType = \"Morning\";\r\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";\r\n      else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";\r\n      else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\r\n\r\n      const firstEmp = shift.title.split(\" - \")[0];\r\n      const matchedEmp = analysts.find((emp) => emp.username === firstEmp);\r\n\r\n      setEditShiftType(shiftType);\r\n      setEditShiftDate(date);\r\n      setEditEmployeeId(matchedEmp?.id || \"\");\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://192.168.29.194:5000/api/shifts/${shift.id}/cab-status`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch cab status\");\r\n      const data = await response.json();\r\n      if (isMountedRef.current) {\r\n        setCabStatusList(data);\r\n        if (!isAdmin && data.length > 0) {\r\n          const currentUser = data.find((emp) => emp.username === user.username);\r\n          setCabOpted(currentUser?.cab_facility === \"Yes\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (isMountedRef.current) {\r\n        console.error(\"Error fetching cab status:\", error);\r\n        setCabStatusList([]);\r\n      }\r\n    }\r\n\r\n    if (isMountedRef.current) setIsModalOpen(true);\r\n  };\r\n\r\n  const isWithinShift = () => {\r\n    if (!selectedShift) return false;\r\n    const now = new Date();\r\n    const start = new Date(selectedShift.start);\r\n    const end = new Date(selectedShift.end);\r\n    return now >= start && now <= end;\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedShift) {\r\n      setCommentsMap((prev) => ({\r\n        ...prev,\r\n        [selectedShift.id]: comment,\r\n      }));\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleAddShift = async () => {\r\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\r\n      alert(\"Please fill all fields.\");\r\n      return;\r\n    }\r\n\r\n    const { start, end } = shiftTimeMapping[newShiftType];\r\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\r\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\r\n    if (end === \"00:00\") {\r\n      endDateTime.setDate(endDateTime.getDate() + 1);\r\n    }\r\n\r\n    const selectedEmployeeObjects = analysts.filter((emp) =>\r\n      selectedEmployees.includes(emp.username)\r\n    );\r\n\r\n    try {\r\n      for (let emp of selectedEmployeeObjects) {\r\n        const response = await fetch(\r\n          \"http://192.168.29.194:5000/api/create_shift\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              date: newShiftDate,\r\n              shift_type: newShiftType.toLowerCase(),\r\n              employee_ids: [emp.id],\r\n            }),\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          alert(\"Error: \" + data.error);\r\n          return;\r\n        }\r\n      }\r\n\r\n      fetchShifts();\r\n      alert(\"Shift(s) created successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to create shift.\");\r\n    }\r\n\r\n    setIsAddModalOpen(false);\r\n    setSelectedEmployees([]);\r\n  };\r\n\r\n  const handleEditShift = async () => {\r\n    try {\r\n      const shiftId = selectedShift.id;\r\n\r\n      const { start, end } = shiftTimeMapping[editShiftType];\r\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\r\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\r\n      if (end === \"00:00\") {\r\n        endDateTime.setDate(endDateTime.getDate() + 1);\r\n      }\r\n\r\n      const selectedUsername =\r\n        analysts.find((emp) => emp.id === editEmployeeId)?.username || \"\";\r\n\r\n      const isDuplicate = shifts.some((shift) => {\r\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\r\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\r\n        const sameEmployee = shift.title.includes(selectedUsername);\r\n        const differentShift = String(shift.id) !== String(shiftId);\r\n        return differentShift && sameStart && sameEnd && sameEmployee;\r\n      });\r\n\r\n      if (isDuplicate) {\r\n        alert(\"Another shift already exists in that slot!\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\"http://192.168.29.194:5000/api/edit_shift\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: shiftId,\r\n          date: editShiftDate,\r\n          shift_type: editShiftType.toLowerCase(),\r\n          employee_id: editEmployeeId,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n      fetchShifts();\r\n      setIsModalOpen(false);\r\n      alert(\"Shift updated successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to edit shift.\");\r\n    }\r\n  };\r\n  const handleDeleteShift = async () => {\r\n    try {\r\n      const response = await fetch(\"http://192.168.29.194:5000/api/delete_shift\", {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ shift_id: selectedShift.id }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n      fetchShifts();\r\n      setIsModalOpen(false);\r\n      alert(\"Shift deleted successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to delete shift.\");\r\n    }\r\n  };\r\n\r\n  const slotLabelContent = (arg) => {\r\n    if (arg.date.getHours() === 0) return \"Night\";\r\n    if (arg.date.getHours() === 8) return \"Morning\";\r\n    if (arg.date.getHours() === 16) return \"Evening\";\r\n    return \"\";\r\n  };\r\n\r\n  const slotLaneContent = (arg) => {\r\n    const hour = arg.date.getHours();\r\n    if (hour !== 0 && hour !== 8 && hour !== 16) {\r\n      return { display: \"none\" };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"shifts-wrapper\">\r\n      <div className=\"shifts-calendar\">\r\n        {isAdmin && (\r\n          <button\r\n            onClick={() => setIsAddModalOpen(true)}\r\n            className=\"add-shift-btn\"\r\n          >\r\n            Create Shift\r\n          </button>\r\n        )}\r\n        <FullCalendar\r\n          eventDidMount={(info) => {\r\n            const shiftType = info.event.extendedProps.shift_type;\r\n\r\n            const shiftColors = {\r\n              morning: \"#514c00\", // green\r\n              evening: \"#51002e\", // yellow\r\n              night: \"#003751\",   // blue\r\n            };\r\n\r\n            const color = shiftColors[shiftType?.toLowerCase()] || \"#6c757d\";\r\n\r\n            // Apply background/border/text colors\r\n            info.el.style.backgroundColor = color;\r\n            info.el.style.borderColor = color;\r\n            info.el.style.color = \"#fff\";\r\n          }}\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          initialView=\"timeGridWeek\"\r\n          slotDuration=\"08:00:00\"\r\n          slotLabelInterval={{ hours: 8 }}\r\n          allDaySlot={false}\r\n          slotMinTime=\"00:00:00\"\r\n          slotMaxTime=\"24:00:00\"\r\n          events={shifts}\r\n          eventClick={handleEventClick}\r\n          slotLabelContent={slotLabelContent}\r\n          slotEventOverlap={false}\r\n          slotLaneContent={slotLaneContent}\r\n          headerToolbar={{\r\n            left: \"prev,next,today\",\r\n            center: \"title\",\r\n            right: \"timeGridDay,timeGridWeek,dayGridMonth\",\r\n          }}\r\n          height=\"auto\"\r\n          eventOverlap={false}\r\n          dayMaxEventRows={true}\r\n          dayMaxEvents={true}\r\n          displayEventTime={false}\r\n          eventOrder={\"title\"}\r\n          eventContent={(arg) => {\r\n            const titleParts = arg.event.title.split(\" - \");\r\n            const shiftTitle = titleParts[0];\r\n            const employeesRaw = titleParts[1] || \"\";\r\n            const employeeList = employeesRaw\r\n              .split(\",\")\r\n              .map((name, index) => `<div>${index + 1}. ${name.trim()}</div>`)\r\n              .join(\"\");\r\n\r\n            return {\r\n              html: `<div style=\"padding: 2px;\">\r\n                <strong>${shiftTitle}</strong>\r\n                <div style=\"margin-top: 4px;\">${employeeList}</div>\r\n             </div>`,\r\n            };\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <Modal\r\n  isOpen={isModalOpen}\r\n  onRequestClose={() => setIsModalOpen(false)}\r\n  className=\"modal\"\r\n  overlayClassName=\"overlay\"\r\n>\r\n  <h2>Shift Details</h2>\r\n  {selectedShift && (\r\n    <>\r\n      <div className=\"modal-content\">\r\n        {/* Left Section */}\r\n        <div className=\"left-section\">\r\n          <p>\r\n            <strong>Shift:</strong> {selectedShift.title}\r\n          </p>\r\n          <p>\r\n            <strong>Start:</strong>{\" \"}\r\n            {new Date(selectedShift.start).toLocaleString()}\r\n          </p>\r\n          <p>\r\n            <strong>End:</strong> {new Date(selectedShift.end).toLocaleString()}\r\n          </p>\r\n\r\n          <div className=\"cab-status-list\">\r\n            <h3>Cab Facility Status</h3>\r\n            <ul>\r\n              {cabStatusList.length === 0 ? (\r\n                <li>No cab data available</li>\r\n              ) : (\r\n                cabStatusList.map(emp => (\r\n                  <li key={emp.id}>\r\n                    {emp.username} – {emp.cab_facility === 'Yes' ? 'Yes' : 'No'}\r\n                  </li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n\r\n          {isAdmin && (\r\n            <>\r\n              <h3>Edit Shift</h3>\r\n              <label>Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                value={editShiftDate}\r\n                onChange={(e) => setEditShiftDate(e.target.value)}\r\n              />\r\n\r\n              <label>Shift Type:</label>\r\n              <select\r\n                value={editShiftType}\r\n                onChange={(e) => setEditShiftType(e.target.value)}\r\n              >\r\n                <option>Morning</option>\r\n                <option>Evening</option>\r\n                <option>Night</option>\r\n              </select>\r\n\r\n              <label>Employee:</label>\r\n              <select\r\n                value={editEmployeeId}\r\n                onChange={(e) => setEditEmployeeId(e.target.value)}\r\n              >\r\n                <option value=\"\">Select employee</option>\r\n                {analysts.map((emp) => (\r\n                  <option key={emp.id} value={emp.id}>\r\n                    {emp.username}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Right Section */}\r\n        <div className=\"right-section\">\r\n          <label>Comments / Notes:</label>\r\n          <textarea\r\n            rows=\"10\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            disabled={!isWithinShift()}\r\n            placeholder={\r\n              isWithinShift()\r\n                ? \"Add or edit your notes here...\"\r\n                : \"Editing is disabled outside shift time.\"\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bottom Buttons */}\r\n      <div className=\"modal-buttons\">\r\n        <button\r\n          onClick={handleSave}\r\n          disabled={!isWithinShift()}\r\n          className=\"modal-btn save-btn\"\r\n        >\r\n          Save Comments\r\n        </button>\r\n\r\n        {!isAdmin && (\r\n          <div className=\"checkbox-wrapper-35\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"cabSwitch\"\r\n              className=\"switch\"\r\n              checked={cabOpted}\r\n              onChange={handleCabToggle}\r\n              disabled={!isUserInShift()}\r\n            />\r\n            <label htmlFor=\"cabSwitch\">\r\n              <span className=\"switch-x-text\">Cab is</span>\r\n              <span className=\"switch-x-toggletext\">\r\n                <span className=\"switch-x-unchecked\">Not Opted</span>\r\n                <span className=\"switch-x-checked\">Opted</span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n        )}\r\n\r\n        {isAdmin && (\r\n          <>\r\n            <button\r\n              onClick={handleEditShift}\r\n              className=\"modal-btn edit-btn\"\r\n            >\r\n              Update Shift\r\n            </button>\r\n            <button\r\n              onClick={handleDeleteShift}\r\n              className=\"modal-btn delete-btn\"\r\n            >\r\n              Delete Shift\r\n            </button>\r\n          </>\r\n        )}\r\n        <button\r\n          onClick={() => setIsModalOpen(false)}\r\n          className=\"modal-btn cancel-btn\"\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </>\r\n  )}\r\n</Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onRequestClose={() => setIsAddModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Create New Shift</h2>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={newShiftDate}\r\n          onChange={(e) => setNewShiftDate(e.target.value)}\r\n        />\r\n\r\n        <label>Shift Type:</label>\r\n        <select\r\n          value={newShiftType}\r\n          onChange={(e) => setNewShiftType(e.target.value)}\r\n        >\r\n          <option>Morning</option>\r\n          <option>Evening</option>\r\n          <option>Night</option>\r\n        </select>\r\n\r\n        <label>Select Employees:</label>\r\n        <div className=\"employees-checkboxes\">\r\n          {analysts.map((emp) => (\r\n            <div key={emp.id} className=\"employee-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`emp-${emp.id}`}\r\n                checked={selectedEmployees.includes(emp.username)}\r\n                onChange={() => handleEmployeeToggle(emp.username)}\r\n              />\r\n              <label htmlFor={`emp-${emp.id}`}>{emp.username}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={handleAddShift}\r\n            className=\"modal-btn save-btn\"\r\n          >\r\n            Create\r\n          </button>\r\n          <button\r\n            onClick={() => setIsAddModalOpen(false)}\r\n            className=\"modal-btn cancel-btn\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shifts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}