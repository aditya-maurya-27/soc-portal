{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Portal\\\\soc-portal\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"../styles/HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const App = {\n      canvas: null,\n      ctx: null,\n      width: 0,\n      height: 0,\n      particles: [],\n      deathCount: 0,\n      stepCount: 0,\n      drawnInLastFrame: 0,\n      animationFrame: null,\n      mouseX: null,\n      mouseY: null,\n      mouseRadius: 200,\n      pressure: 1,\n      setup: function () {\n        const canvas = canvasRef.current;\n        const container = canvas.parentElement;\n        this.width = container.clientWidth;\n        this.height = container.clientHeight;\n        canvas.width = this.width;\n        canvas.height = this.height;\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n        this.dataToImageRatio = 1;\n        this.ctx.imageSmoothingEnabled = false;\n        this.xC = this.width / 2;\n        this.yC = this.height / 2;\n\n        // Your custom parameters\n        this.lifespan = 1000;\n        this.popPerBirth = 5;\n        this.maxPop = 500;\n        this.birthFreq = 3;\n        this.gridSize = 8;\n        this.gridSteps = Math.floor(1000 / this.gridSize);\n        this.grid = [];\n\n        // Build grid with your settings\n        let i = 0;\n        const gridArea = 1000;\n        const gridRadius = gridArea / 2;\n        for (let xx = -gridRadius; xx < gridRadius; xx += this.gridSize) {\n          for (let yy = -gridRadius; yy < gridRadius; yy += this.gridSize) {\n            const r = Math.sqrt(xx * xx + yy * yy);\n            const r0 = 100;\n            let field;\n            if (r < r0) field = 255 / r0 * r;else field = 255 - Math.min(255, (r - r0) / 2);\n            this.grid.push({\n              x: xx,\n              y: yy,\n              busyAge: 0,\n              spotIndex: i,\n              isEdge: xx === -gridRadius || xx >= gridRadius - this.gridSize || yy === -gridRadius || yy >= gridRadius - this.gridSize,\n              field: field\n            });\n            i++;\n          }\n        }\n        this.gridMaxIndex = i;\n\n        // Interactive setup\n        canvas.addEventListener('mousemove', e => {\n          const rect = canvas.getBoundingClientRect();\n          this.mouseX = e.clientX - rect.left;\n          this.mouseY = e.clientY - rect.top;\n          this.pressure = e.buttons === 1 ? 2 : 1;\n        });\n        canvas.addEventListener('mouseout', () => {\n          this.mouseX = null;\n        });\n        canvas.addEventListener('click', e => {\n          if (!this.mouseX || !this.mouseY) return;\n          const fieldX = (this.mouseX - this.xC) / (1.6 * this.dataToImageRatio);\n          const fieldY = (this.mouseY - this.yC) / (1.6 * this.dataToImageRatio);\n          for (let i = 0; i < 20; i++) {\n            this.birthAt(fieldX, fieldY);\n          }\n        });\n        this.initDraw();\n        const animate = () => {\n          this.evolve();\n          this.animationFrame = requestAnimationFrame(animate);\n        };\n        animate();\n        this.handleResize = this.handleResize.bind(this);\n        window.addEventListener('resize', this.handleResize);\n      },\n      birthAt: function (x, y) {\n        const particle = {\n          hue: 260 + Math.sin(Date.now() * 0.001) * 20,\n          // Your color wave\n          sat: 100,\n          // Your saturation\n          lum: 50,\n          // Your brightness\n          x: x,\n          y: y,\n          xLast: x,\n          yLast: y,\n          xSpeed: (Math.random() - 0.5) * 10,\n          ySpeed: (Math.random() - 0.5) * 10,\n          age: 0,\n          ageSinceStuck: 0,\n          attractor: {\n            oldIndex: Math.floor(Math.random() * this.gridMaxIndex),\n            gridSpotIndex: Math.floor(Math.random() * this.gridMaxIndex)\n          },\n          name: 'explosion-' + Date.now() + '-' + Math.random()\n        };\n        this.particles.push(particle);\n      },\n      handleResize: function () {\n        const container = canvasRef.current.parentElement;\n        this.width = container.clientWidth;\n        this.height = container.clientHeight;\n        canvasRef.current.width = this.width;\n        canvasRef.current.height = this.height;\n        this.xC = this.width / 2;\n        this.yC = this.height / 2;\n      },\n      evolve: function () {\n        this.stepCount++;\n        this.grid.forEach(function (e) {\n          if (e.busyAge > 0) e.busyAge++;\n        });\n        if (this.stepCount % this.birthFreq === 0 && this.particles.length + this.popPerBirth < this.maxPop) {\n          this.birth();\n        }\n        this.move();\n        this.draw();\n      },\n      birth: function () {\n        const gridSpotIndex = Math.floor(Math.random() * this.gridMaxIndex);\n        const gridSpot = this.grid[gridSpotIndex];\n        const particle = {\n          hue: 260 + Math.sin(Date.now() * 0.001) * 20,\n          // Your color wave\n          sat: 100,\n          // Your saturation\n          lum: 50,\n          // Your brightness\n          x: gridSpot.x,\n          y: gridSpot.y,\n          xLast: gridSpot.x,\n          yLast: gridSpot.y,\n          xSpeed: 0,\n          ySpeed: 0,\n          age: 0,\n          ageSinceStuck: 0,\n          attractor: {\n            oldIndex: gridSpotIndex,\n            gridSpotIndex: gridSpotIndex\n          },\n          name: 'seed-' + Math.ceil(10000000 * Math.random())\n        };\n        this.particles.push(particle);\n      },\n      kill: function (particleName) {\n        this.particles = this.particles.filter(seed => seed.name !== particleName);\n        this.deathCount++;\n      },\n      move: function () {\n        for (let i = 0; i < this.particles.length; i++) {\n          const p = this.particles[i];\n          p.xLast = p.x;\n          p.yLast = p.y;\n          let index = p.attractor.gridSpotIndex;\n          let gridSpot = this.grid[index];\n\n          // Mouse interaction\n          if (this.mouseX && this.mouseY) {\n            const mouseFieldX = (this.mouseX - this.xC) / (1.6 * this.dataToImageRatio);\n            const mouseFieldY = (this.mouseY - this.yC) / (1.6 * this.dataToImageRatio);\n            const dx = p.x - mouseFieldX;\n            const dy = p.y - mouseFieldY;\n            const dist = Math.sqrt(dx * dx + dy * dy);\n            if (dist < this.mouseRadius) {\n              const force = dist < this.mouseRadius / 3 ? -30 * (1 - dist / (this.mouseRadius / 3)) * this.pressure : 5 * (1 - dist / this.mouseRadius) * this.pressure;\n              p.xSpeed += force * dx / dist;\n              p.ySpeed += force * dy / dist;\n            }\n          }\n\n          // Original movement logic\n          if (Math.random() < 0.5) {\n            if (!gridSpot.isEdge) {\n              const topIndex = index - 1;\n              const bottomIndex = index + 1;\n              const leftIndex = index - this.gridSteps;\n              const rightIndex = index + this.gridSteps;\n              const neighbors = [];\n              if (gridSpot.isEdge !== 'top') neighbors.push(this.grid[topIndex]);\n              if (gridSpot.isEdge !== 'bottom') neighbors.push(this.grid[bottomIndex]);\n              if (gridSpot.isEdge !== 'left') neighbors.push(this.grid[leftIndex]);\n              if (gridSpot.isEdge !== 'right') neighbors.push(this.grid[rightIndex]);\n              if (neighbors.length > 0) {\n                const chaos = 30;\n                const maxFieldSpot = neighbors.reduce((max, spot) => spot.field + chaos * Math.random() > max.field + chaos * Math.random() ? spot : max);\n                if (maxFieldSpot.busyAge === 0 || maxFieldSpot.busyAge > 15) {\n                  p.ageSinceStuck = 0;\n                  p.attractor.oldIndex = index;\n                  p.attractor.gridSpotIndex = maxFieldSpot.spotIndex;\n                  gridSpot = maxFieldSpot;\n                  gridSpot.busyAge = 1;\n                } else {\n                  p.ageSinceStuck++;\n                }\n              } else {\n                p.ageSinceStuck++;\n              }\n              if (p.ageSinceStuck === 10) this.kill(p.name);\n            } else {\n              p.ageSinceStuck++;\n            }\n          }\n\n          // Your physics with spring and viscosity\n          const k = 8,\n            visc = 0.4;\n          const dx = p.x - gridSpot.x;\n          const dy = p.y - gridSpot.y;\n          const xAcc = -k * dx;\n          const yAcc = -k * dy;\n          p.xSpeed += xAcc;\n          p.ySpeed += yAcc;\n          p.xSpeed *= visc;\n          p.ySpeed *= visc;\n          p.x += 0.1 * p.xSpeed;\n          p.y += 0.1 * p.ySpeed;\n          p.age++;\n          if (p.age > this.lifespan) {\n            this.kill(p.name);\n          }\n        }\n      },\n      initDraw: function () {\n        this.ctx.beginPath();\n        this.ctx.rect(0, 0, this.width, this.height);\n        this.ctx.fillStyle = 'black';\n        this.ctx.fill();\n        this.ctx.closePath();\n      },\n      draw: function () {\n        this.drawnInLastFrame = 0;\n        if (!this.particles.length) return false;\n\n        // Your trail effect\n        this.ctx.beginPath();\n        this.ctx.rect(0, 0, this.width, this.height);\n        this.ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n        this.ctx.fill();\n        this.ctx.closePath();\n        for (let i = 0; i < this.particles.length; i++) {\n          const p = this.particles[i];\n          const h = p.hue + this.stepCount / 30; // Your hue animation\n          const s = p.sat;\n          const l = p.lum;\n          const last = this.dataXYtoCanvasXY(p.xLast, p.yLast);\n          const now = this.dataXYtoCanvasXY(p.x, p.y);\n          const attracSpot = this.grid[p.attractor.gridSpotIndex];\n          const attracXY = this.dataXYtoCanvasXY(attracSpot.x, attracSpot.y);\n          const oldAttracSpot = this.grid[p.attractor.oldIndex];\n          const oldAttracXY = this.dataXYtoCanvasXY(oldAttracSpot.x, oldAttracSpot.y);\n\n          // Your worm trail\n          this.ctx.beginPath();\n          this.ctx.strokeStyle = `hsla(${h}, ${s}%, ${l}%, 1)`;\n          this.ctx.moveTo(last.x, last.y);\n          this.ctx.lineTo(now.x, now.y);\n          this.ctx.lineWidth = 1.5 * this.dataToImageRatio;\n          this.ctx.stroke();\n          this.ctx.closePath();\n\n          // Your worm head\n          this.ctx.beginPath();\n          this.ctx.strokeStyle = `hsla(${h}, ${s}%, ${l}%, 0.5)`;\n          this.ctx.moveTo(oldAttracXY.x, oldAttracXY.y);\n          this.ctx.lineTo(attracXY.x, attracXY.y);\n          this.ctx.arc(attracXY.x, attracXY.y, 1.5 * this.dataToImageRatio, 0, 2 * Math.PI);\n          this.ctx.stroke();\n          this.ctx.closePath();\n          this.drawnInLastFrame++;\n        }\n      },\n      dataXYtoCanvasXY: function (x, y) {\n        const zoom = 1.6; // Your zoom factor\n        const xx = this.xC + x * zoom * this.dataToImageRatio;\n        const yy = this.yC + y * zoom * this.dataToImageRatio;\n        return {\n          x: xx,\n          y: yy\n        };\n      }\n    };\n    App.setup();\n    return () => {\n      window.removeEventListener('resize', App.handleResize);\n      if (App.animationFrame) {\n        cancelAnimationFrame(App.animationFrame);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"effect-area\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"particle-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","HomePage","_s","canvasRef","App","canvas","ctx","width","height","particles","deathCount","stepCount","drawnInLastFrame","animationFrame","mouseX","mouseY","mouseRadius","pressure","setup","current","container","parentElement","clientWidth","clientHeight","getContext","dataToImageRatio","imageSmoothingEnabled","xC","yC","lifespan","popPerBirth","maxPop","birthFreq","gridSize","gridSteps","Math","floor","grid","i","gridArea","gridRadius","xx","yy","r","sqrt","r0","field","min","push","x","y","busyAge","spotIndex","isEdge","gridMaxIndex","addEventListener","e","rect","getBoundingClientRect","clientX","left","clientY","top","buttons","fieldX","fieldY","birthAt","initDraw","animate","evolve","requestAnimationFrame","handleResize","bind","window","particle","hue","sin","Date","now","sat","lum","xLast","yLast","xSpeed","random","ySpeed","age","ageSinceStuck","attractor","oldIndex","gridSpotIndex","name","forEach","length","birth","move","draw","gridSpot","ceil","kill","particleName","filter","seed","p","index","mouseFieldX","mouseFieldY","dx","dy","dist","force","topIndex","bottomIndex","leftIndex","rightIndex","neighbors","chaos","maxFieldSpot","reduce","max","spot","k","visc","xAcc","yAcc","beginPath","fillStyle","fill","closePath","h","s","l","last","dataXYtoCanvasXY","attracSpot","attracXY","oldAttracSpot","oldAttracXY","strokeStyle","moveTo","lineTo","lineWidth","stroke","arc","PI","zoom","removeEventListener","cancelAnimationFrame","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Portal/soc-portal/src/pages/HomePage.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"../styles/HomePage.css\";\r\n\r\nfunction HomePage() {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const App = {\r\n      canvas: null,\r\n      ctx: null,\r\n      width: 0,\r\n      height: 0,\r\n      particles: [],\r\n      deathCount: 0,\r\n      stepCount: 0,\r\n      drawnInLastFrame: 0,\r\n      animationFrame: null,\r\n      mouseX: null,\r\n      mouseY: null,\r\n      mouseRadius: 200,\r\n      pressure: 1,\r\n\r\n      setup: function() {\r\n        const canvas = canvasRef.current;\r\n        const container = canvas.parentElement;\r\n        \r\n        this.width = container.clientWidth;\r\n        this.height = container.clientHeight;\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        \r\n        this.canvas = canvas;\r\n        this.ctx = canvas.getContext(\"2d\");\r\n        this.dataToImageRatio = 1;\r\n        this.ctx.imageSmoothingEnabled = false;\r\n        this.xC = this.width / 2;\r\n        this.yC = this.height / 2;\r\n        \r\n        // Your custom parameters\r\n        this.lifespan = 1000;\r\n        this.popPerBirth = 5;\r\n        this.maxPop = 500;\r\n        this.birthFreq = 3;\r\n        this.gridSize = 8;\r\n        this.gridSteps = Math.floor(1000 / this.gridSize);\r\n        this.grid = [];\r\n        \r\n        // Build grid with your settings\r\n        let i = 0;\r\n        const gridArea = 1000;\r\n        const gridRadius = gridArea / 2;\r\n        for (let xx = -gridRadius; xx < gridRadius; xx += this.gridSize) {\r\n          for (let yy = -gridRadius; yy < gridRadius; yy += this.gridSize) {\r\n            const r = Math.sqrt(xx*xx + yy*yy);\r\n            const r0 = 100;\r\n            let field;\r\n            \r\n            if (r < r0) field = 255 / r0 * r;\r\n            else field = 255 - Math.min(255, (r - r0)/2);\r\n            \r\n            this.grid.push({\r\n              x: xx,\r\n              y: yy,\r\n              busyAge: 0,\r\n              spotIndex: i,\r\n              isEdge: (xx === -gridRadius || \r\n                      xx >= (gridRadius - this.gridSize) || \r\n                      yy === -gridRadius || \r\n                      yy >= (gridRadius - this.gridSize)),\r\n              field: field\r\n            });\r\n            i++;\r\n          }\r\n        }\r\n        this.gridMaxIndex = i;\r\n        \r\n        // Interactive setup\r\n        canvas.addEventListener('mousemove', (e) => {\r\n          const rect = canvas.getBoundingClientRect();\r\n          this.mouseX = e.clientX - rect.left;\r\n          this.mouseY = e.clientY - rect.top;\r\n          this.pressure = e.buttons === 1 ? 2 : 1;\r\n        });\r\n        \r\n        canvas.addEventListener('mouseout', () => {\r\n          this.mouseX = null;\r\n        });\r\n        \r\n        canvas.addEventListener('click', (e) => {\r\n          if (!this.mouseX || !this.mouseY) return;\r\n          const fieldX = (this.mouseX - this.xC) / (1.6 * this.dataToImageRatio);\r\n          const fieldY = (this.mouseY - this.yC) / (1.6 * this.dataToImageRatio);\r\n          \r\n          for (let i = 0; i < 20; i++) {\r\n            this.birthAt(fieldX, fieldY);\r\n          }\r\n        });\r\n        \r\n        this.initDraw();\r\n        \r\n        const animate = () => {\r\n          this.evolve();\r\n          this.animationFrame = requestAnimationFrame(animate);\r\n        };\r\n        animate();\r\n        \r\n        this.handleResize = this.handleResize.bind(this);\r\n        window.addEventListener('resize', this.handleResize);\r\n      },\r\n\r\n      birthAt: function(x, y) {\r\n        const particle = {\r\n          hue: 260 + Math.sin(Date.now()*0.001)*20, // Your color wave\r\n          sat: 100, // Your saturation\r\n          lum: 50,   // Your brightness\r\n          x: x, \r\n          y: y,\r\n          xLast: x, \r\n          yLast: y,\r\n          xSpeed: (Math.random() - 0.5) * 10,\r\n          ySpeed: (Math.random() - 0.5) * 10,\r\n          age: 0,\r\n          ageSinceStuck: 0,\r\n          attractor: {\r\n            oldIndex: Math.floor(Math.random() * this.gridMaxIndex),\r\n            gridSpotIndex: Math.floor(Math.random() * this.gridMaxIndex)\r\n          },\r\n          name: 'explosion-' + Date.now() + '-' + Math.random()\r\n        };\r\n        this.particles.push(particle);\r\n      },\r\n\r\n      handleResize: function() {\r\n        const container = canvasRef.current.parentElement;\r\n        this.width = container.clientWidth;\r\n        this.height = container.clientHeight;\r\n        canvasRef.current.width = this.width;\r\n        canvasRef.current.height = this.height;\r\n        this.xC = this.width / 2;\r\n        this.yC = this.height / 2;\r\n      },\r\n\r\n      evolve: function() {\r\n        this.stepCount++;\r\n        \r\n        this.grid.forEach(function(e) {\r\n          if (e.busyAge > 0) e.busyAge++;\r\n        });\r\n        \r\n        if (this.stepCount % this.birthFreq === 0 && \r\n            (this.particles.length + this.popPerBirth) < this.maxPop) {\r\n          this.birth();\r\n        }\r\n        this.move();\r\n        this.draw();\r\n      },\r\n\r\n      birth: function() {\r\n        const gridSpotIndex = Math.floor(Math.random() * this.gridMaxIndex);\r\n        const gridSpot = this.grid[gridSpotIndex];\r\n        \r\n        const particle = {\r\n          hue: 260 + Math.sin(Date.now()*0.001)*20, // Your color wave\r\n          sat: 100, // Your saturation\r\n          lum: 50,   // Your brightness\r\n          x: gridSpot.x, \r\n          y: gridSpot.y,\r\n          xLast: gridSpot.x, \r\n          yLast: gridSpot.y,\r\n          xSpeed: 0, \r\n          ySpeed: 0,\r\n          age: 0,\r\n          ageSinceStuck: 0,\r\n          attractor: {\r\n            oldIndex: gridSpotIndex,\r\n            gridSpotIndex: gridSpotIndex,\r\n          },\r\n          name: 'seed-' + Math.ceil(10000000 * Math.random())\r\n        };\r\n        this.particles.push(particle);\r\n      },\r\n\r\n      kill: function(particleName) {\r\n        this.particles = this.particles.filter(seed => seed.name !== particleName);\r\n        this.deathCount++;\r\n      },\r\n\r\n      move: function() {\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n          const p = this.particles[i];\r\n          p.xLast = p.x; \r\n          p.yLast = p.y;\r\n          \r\n          let index = p.attractor.gridSpotIndex;\r\n          let gridSpot = this.grid[index];\r\n          \r\n          // Mouse interaction\r\n          if (this.mouseX && this.mouseY) {\r\n            const mouseFieldX = (this.mouseX - this.xC) / (1.6 * this.dataToImageRatio);\r\n            const mouseFieldY = (this.mouseY - this.yC) / (1.6 * this.dataToImageRatio);\r\n            const dx = p.x - mouseFieldX;\r\n            const dy = p.y - mouseFieldY;\r\n            const dist = Math.sqrt(dx*dx + dy*dy);\r\n            \r\n            if (dist < this.mouseRadius) {\r\n              const force = (dist < this.mouseRadius/3) ? \r\n                            -30 * (1 - dist/(this.mouseRadius/3)) * this.pressure : \r\n                            5 * (1 - dist/this.mouseRadius) * this.pressure;\r\n              \r\n              p.xSpeed += force * dx/dist;\r\n              p.ySpeed += force * dy/dist;\r\n            }\r\n          }\r\n          \r\n          // Original movement logic\r\n          if (Math.random() < 0.5) {\r\n            if (!gridSpot.isEdge) {\r\n              const topIndex = index - 1;\r\n              const bottomIndex = index + 1;\r\n              const leftIndex = index - this.gridSteps;\r\n              const rightIndex = index + this.gridSteps;\r\n              \r\n              const neighbors = [];\r\n              if (gridSpot.isEdge !== 'top') neighbors.push(this.grid[topIndex]);\r\n              if (gridSpot.isEdge !== 'bottom') neighbors.push(this.grid[bottomIndex]);\r\n              if (gridSpot.isEdge !== 'left') neighbors.push(this.grid[leftIndex]);\r\n              if (gridSpot.isEdge !== 'right') neighbors.push(this.grid[rightIndex]);\r\n              \r\n              if (neighbors.length > 0) {\r\n                const chaos = 30;\r\n                const maxFieldSpot = neighbors.reduce((max, spot) => \r\n                  (spot.field + chaos * Math.random()) > \r\n                  (max.field + chaos * Math.random()) ? spot : max\r\n                );\r\n                \r\n                if (maxFieldSpot.busyAge === 0 || maxFieldSpot.busyAge > 15) {\r\n                  p.ageSinceStuck = 0;\r\n                  p.attractor.oldIndex = index;\r\n                  p.attractor.gridSpotIndex = maxFieldSpot.spotIndex;\r\n                  gridSpot = maxFieldSpot;\r\n                  gridSpot.busyAge = 1;\r\n                } else {\r\n                  p.ageSinceStuck++;\r\n                }\r\n              } else {\r\n                p.ageSinceStuck++;\r\n              }\r\n              \r\n              if (p.ageSinceStuck === 10) this.kill(p.name);\r\n            } else {\r\n              p.ageSinceStuck++;\r\n            }\r\n          }\r\n          \r\n          // Your physics with spring and viscosity\r\n          const k = 8, visc = 0.4;\r\n          const dx = p.x - gridSpot.x;\r\n          const dy = p.y - gridSpot.y;\r\n          \r\n          const xAcc = -k * dx;\r\n          const yAcc = -k * dy;\r\n          \r\n          p.xSpeed += xAcc; \r\n          p.ySpeed += yAcc;\r\n          p.xSpeed *= visc; \r\n          p.ySpeed *= visc;\r\n          \r\n          p.x += 0.1 * p.xSpeed; \r\n          p.y += 0.1 * p.ySpeed;\r\n          p.age++;\r\n          \r\n          if (p.age > this.lifespan) {\r\n            this.kill(p.name);\r\n          }\r\n        }\r\n      },\r\n\r\n      initDraw: function() {\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.width, this.height);\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.fill();\r\n        this.ctx.closePath();\r\n      },\r\n\r\n      draw: function() {\r\n        this.drawnInLastFrame = 0;\r\n        if (!this.particles.length) return false;\r\n        \r\n        // Your trail effect\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.width, this.height);\r\n        this.ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n        this.ctx.fill();\r\n        this.ctx.closePath();\r\n        \r\n        for (let i = 0; i < this.particles.length; i++) {\r\n          const p = this.particles[i];\r\n          const h = p.hue + this.stepCount/30; // Your hue animation\r\n          const s = p.sat;\r\n          const l = p.lum;\r\n          \r\n          const last = this.dataXYtoCanvasXY(p.xLast, p.yLast);\r\n          const now = this.dataXYtoCanvasXY(p.x, p.y);\r\n          const attracSpot = this.grid[p.attractor.gridSpotIndex];\r\n          const attracXY = this.dataXYtoCanvasXY(attracSpot.x, attracSpot.y);\r\n          const oldAttracSpot = this.grid[p.attractor.oldIndex];\r\n          const oldAttracXY = this.dataXYtoCanvasXY(oldAttracSpot.x, oldAttracSpot.y);\r\n          \r\n          // Your worm trail\r\n          this.ctx.beginPath();\r\n          this.ctx.strokeStyle = `hsla(${h}, ${s}%, ${l}%, 1)`;\r\n          this.ctx.moveTo(last.x, last.y);\r\n          this.ctx.lineTo(now.x, now.y);\r\n          this.ctx.lineWidth = 1.5 * this.dataToImageRatio;\r\n          this.ctx.stroke();\r\n          this.ctx.closePath();\r\n          \r\n          // Your worm head\r\n          this.ctx.beginPath();\r\n          this.ctx.strokeStyle = `hsla(${h}, ${s}%, ${l}%, 0.5)`;\r\n          this.ctx.moveTo(oldAttracXY.x, oldAttracXY.y);\r\n          this.ctx.lineTo(attracXY.x, attracXY.y);\r\n          this.ctx.arc(attracXY.x, attracXY.y, 1.5 * this.dataToImageRatio, 0, 2 * Math.PI);\r\n          this.ctx.stroke();\r\n          this.ctx.closePath();\r\n          \r\n          this.drawnInLastFrame++;\r\n        }\r\n      },\r\n\r\n      dataXYtoCanvasXY: function(x, y) {\r\n        const zoom = 1.6; // Your zoom factor\r\n        const xx = this.xC + x * zoom * this.dataToImageRatio;\r\n        const yy = this.yC + y * zoom * this.dataToImageRatio;\r\n        return {x: xx, y: yy};\r\n      }\r\n    };\r\n\r\n    App.setup();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', App.handleResize);\r\n      if (App.animationFrame) {\r\n        cancelAnimationFrame(App.animationFrame);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"effect-area\">\r\n        <canvas ref={canvasRef} className=\"particle-canvas\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}