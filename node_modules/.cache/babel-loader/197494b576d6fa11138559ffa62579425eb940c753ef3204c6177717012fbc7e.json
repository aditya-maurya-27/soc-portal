{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Portal\\\\soc-portal\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"../styles/HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const el = document.querySelector(\".package\");\n    const updateScale = () => {\n      const ratio = window.devicePixelRatio;\n      el.style.transform = `translate(-50%, -50%) scale(${1 / ratio})`;\n    };\n    updateScale();\n    window.addEventListener(\"resize\", updateScale);\n    return () => window.removeEventListener(\"resize\", updateScale);\n  }, []);\n  useEffect(() => {\n    const App = {\n      canvas: null,\n      ctx: null,\n      width: 0,\n      height: 0,\n      particles: [],\n      deathCount: 0,\n      stepCount: 0,\n      drawnInLastFrame: 0,\n      animationFrame: null,\n      setup: function () {\n        const canvas = canvasRef.current;\n        const container = canvas.parentElement;\n        this.width = container.clientWidth;\n        this.height = container.clientHeight;\n        canvas.width = this.width;\n        canvas.height = this.height;\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n        this.dataToImageRatio = 1;\n        this.ctx.imageSmoothingEnabled = false;\n        this.xC = this.width / 2;\n        this.yC = this.height / 2;\n        this.lifespan = 1000;\n        this.popPerBirth = 1;\n        this.maxPop = 300;\n        this.birthFreq = 5;\n        this.gridSize = 8;\n        this.gridSteps = Math.floor(1000 / this.gridSize);\n        this.grid = [];\n        let i = 0;\n        const gridArea = 1000;\n        const gridRadius = gridArea / 2;\n        for (let xx = -gridRadius; xx < gridRadius; xx += this.gridSize) {\n          for (let yy = -gridRadius; yy < gridRadius; yy += this.gridSize) {\n            const r = Math.sqrt(xx * xx + yy * yy);\n            const r0 = 110;\n            let field;\n            if (r < r0) field = 255 / r0 * r;else field = 255 - Math.min(255, (r - r0) / 5);\n            this.grid.push({\n              x: xx,\n              y: yy,\n              busyAge: 0,\n              spotIndex: i,\n              isEdge: xx === -gridRadius || xx >= gridRadius - this.gridSize || yy === -gridRadius || yy >= gridRadius - this.gridSize,\n              field: field\n            });\n            i++;\n          }\n        }\n        this.gridMaxIndex = i;\n        this.initDraw();\n        const animate = () => {\n          this.evolve();\n          this.animationFrame = requestAnimationFrame(animate);\n        };\n        animate();\n\n        // Interactivity: click to spawn\n        canvas.addEventListener(\"click\", e => {\n          const rect = canvas.getBoundingClientRect();\n          const x = e.clientX - rect.left;\n          const y = e.clientY - rect.top;\n          this.spawnAt(x, y);\n        });\n      },\n      spawnAt: function (canvasX, canvasY) {\n        const x = (canvasX - this.xC) / (1.6 * this.dataToImageRatio);\n        const y = (canvasY - this.yC) / (1.6 * this.dataToImageRatio);\n        let closestSpot = this.grid[0];\n        let minDist = Infinity;\n        this.grid.forEach(spot => {\n          const dist = Math.hypot(spot.x - x, spot.y - y);\n          if (dist < minDist) {\n            minDist = dist;\n            closestSpot = spot;\n          }\n        });\n        const particle = {\n          hue: 260 + Math.sin(Date.now()) * 5000,\n          sat: 100,\n          lum: 60,\n          x: closestSpot.x,\n          y: closestSpot.y,\n          xLast: closestSpot.x,\n          yLast: closestSpot.y,\n          xSpeed: 0,\n          ySpeed: 0,\n          age: 0,\n          ageSinceStuck: 0,\n          attractor: {\n            oldIndex: closestSpot.spotIndex,\n            gridSpotIndex: closestSpot.spotIndex\n          },\n          name: \"worm-\" + Math.ceil(10000000 * Math.random())\n        };\n        this.particles.push(particle);\n      },\n      evolve: function () {\n        this.stepCount++;\n        this.grid.forEach(e => {\n          if (e.busyAge > 0) e.busyAge++;\n        });\n        if (this.stepCount % this.birthFreq === 0 && this.particles.length + this.popPerBirth < this.maxPop) {\n          this.birth();\n        }\n        this.move();\n        this.draw();\n      },\n      birth: function () {\n        const angle = Math.random() * Math.PI * 6;\n        const radius = Math.sqrt(Math.random()) * 600;\n        const x = radius * Math.cos(angle);\n        const y = radius * Math.sin(angle);\n        let closestSpot = this.grid[0];\n        let minDist = Infinity;\n        this.grid.forEach(spot => {\n          const dist = Math.hypot(spot.x - x, spot.y - y);\n          if (dist < minDist) {\n            minDist = dist;\n            closestSpot = spot;\n          }\n        });\n        const particle = {\n          hue: 260 + Math.sin(Date.now()) * 5000,\n          sat: 100,\n          lum: 60,\n          x: closestSpot.x,\n          y: closestSpot.y,\n          xLast: closestSpot.x,\n          yLast: closestSpot.y,\n          xSpeed: 0,\n          ySpeed: 0,\n          age: 0,\n          ageSinceStuck: 0,\n          attractor: {\n            oldIndex: closestSpot.spotIndex,\n            gridSpotIndex: closestSpot.spotIndex\n          },\n          name: \"worm-\" + Math.ceil(10000000 * Math.random())\n        };\n        this.particles.push(particle);\n      },\n      move: function () {\n        for (let i = 0; i < this.particles.length; i++) {\n          const p = this.particles[i];\n          p.xLast = p.x;\n          p.yLast = p.y;\n          let index = p.attractor.gridSpotIndex;\n          let gridSpot = this.grid[index];\n          if (Math.random() < 0.35) {\n            if (!gridSpot.isEdge) {\n              const neighbors = [this.grid[index - 1], this.grid[index + 1], this.grid[index - this.gridSteps], this.grid[index + this.gridSteps]].filter(Boolean);\n              if (neighbors.length > 1) {\n                const chaos = 3.5;\n                const maxFieldSpot = neighbors.reduce((max, spot) => spot.field + chaos * Math.random() > max.field + chaos * Math.random() ? spot : max);\n                if (maxFieldSpot.busyAge === 0 || maxFieldSpot.busyAge > 15) {\n                  p.ageSinceStuck = 0;\n                  p.attractor.oldIndex = index;\n                  p.attractor.gridSpotIndex = maxFieldSpot.spotIndex;\n                  gridSpot = maxFieldSpot;\n                  gridSpot.busyAge = 1;\n                } else {\n                  p.ageSinceStuck++;\n                }\n              }\n              if (p.ageSinceStuck === 10) {\n                this.particles.splice(i, 1);\n                i--;\n                continue;\n              }\n            }\n          }\n          const k = 8,\n            visc = 0.4;\n          const dx = p.x - gridSpot.x;\n          const dy = p.y - gridSpot.y;\n          p.xSpeed += -k * dx;\n          p.ySpeed += -k * dy;\n          p.xSpeed *= visc;\n          p.ySpeed *= visc;\n          p.x += 0.1 * p.xSpeed;\n          p.y += 0.1 * p.ySpeed;\n          p.age++;\n          if (p.age > this.lifespan) {\n            this.particles.splice(i, 1);\n            i--;\n          }\n        }\n      },\n      draw: function () {\n        this.ctx.fillStyle = \"rgba(0, 0, 0, 0.02)\";\n        this.ctx.fillRect(0, 0, this.width, this.height);\n        for (const p of this.particles) {\n          const h = p.hue + this.stepCount / 200;\n          const last = this.dataXYtoCanvasXY(p.xLast, p.yLast);\n          const now = this.dataXYtoCanvasXY(p.x, p.y);\n          this.ctx.beginPath();\n          this.ctx.strokeStyle = `hsla(${h}, ${p.sat}%, ${p.lum}%, 1)`;\n          this.ctx.moveTo(last.x, last.y);\n          this.ctx.lineTo(now.x, now.y);\n          this.ctx.lineWidth = 1.5;\n          this.ctx.stroke();\n          const attracSpot = this.grid[p.attractor.gridSpotIndex];\n          const attracXY = this.dataXYtoCanvasXY(attracSpot.x, attracSpot.y);\n          const oldAttracXY = this.dataXYtoCanvasXY(this.grid[p.attractor.oldIndex].x, this.grid[p.attractor.oldIndex].y);\n          this.ctx.beginPath();\n          this.ctx.strokeStyle = `hsla(${h}, ${p.sat}%, ${p.lum}%, 0.5)`;\n          this.ctx.moveTo(oldAttracXY.x, oldAttracXY.y);\n          this.ctx.lineTo(attracXY.x, attracXY.y);\n          this.ctx.arc(attracXY.x, attracXY.y, 2.0, 0, Math.PI * 2);\n          this.ctx.stroke();\n        }\n      },\n      dataXYtoCanvasXY: function (x, y) {\n        const zoom = 1.6;\n        return {\n          x: this.xC + x * zoom * this.dataToImageRatio,\n          y: this.yC + y * zoom * this.dataToImageRatio\n        };\n      },\n      initDraw: function () {\n        this.ctx.fillStyle = \"\";\n        this.ctx.fillRect(0, 0, this.width, this.height);\n      }\n    };\n    App.setup();\n    return () => {\n      if (App.animationFrame) {\n        cancelAnimationFrame(App.animationFrame);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"effect-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"particle-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"package\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"package2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"banner\",\n            children: \"CYBER VIGILANCE CENTRE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"package-image-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"homepage-logo.png\",\n              alt: \"Company Logo\",\n              className: \"package-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"1O11hef6JMAr7xpSnL0aZ5Ib60Q=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","HomePage","_s","canvasRef","el","document","querySelector","updateScale","ratio","window","devicePixelRatio","style","transform","addEventListener","removeEventListener","App","canvas","ctx","width","height","particles","deathCount","stepCount","drawnInLastFrame","animationFrame","setup","current","container","parentElement","clientWidth","clientHeight","getContext","dataToImageRatio","imageSmoothingEnabled","xC","yC","lifespan","popPerBirth","maxPop","birthFreq","gridSize","gridSteps","Math","floor","grid","i","gridArea","gridRadius","xx","yy","r","sqrt","r0","field","min","push","x","y","busyAge","spotIndex","isEdge","gridMaxIndex","initDraw","animate","evolve","requestAnimationFrame","e","rect","getBoundingClientRect","clientX","left","clientY","top","spawnAt","canvasX","canvasY","closestSpot","minDist","Infinity","forEach","spot","dist","hypot","particle","hue","sin","Date","now","sat","lum","xLast","yLast","xSpeed","ySpeed","age","ageSinceStuck","attractor","oldIndex","gridSpotIndex","name","ceil","random","length","birth","move","draw","angle","PI","radius","cos","p","index","gridSpot","neighbors","filter","Boolean","chaos","maxFieldSpot","reduce","max","splice","k","visc","dx","dy","fillStyle","fillRect","h","last","dataXYtoCanvasXY","beginPath","strokeStyle","moveTo","lineTo","lineWidth","stroke","attracSpot","attracXY","oldAttracXY","arc","zoom","cancelAnimationFrame","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Portal/soc-portal/src/pages/HomePage.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"../styles/HomePage.css\";\r\n\r\nfunction HomePage() {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const el = document.querySelector(\".package\");\r\n\r\n    const updateScale = () => {\r\n      const ratio = window.devicePixelRatio;\r\n      el.style.transform = `translate(-50%, -50%) scale(${1 / ratio})`;\r\n    };\r\n\r\n    updateScale();\r\n    window.addEventListener(\"resize\", updateScale);\r\n    return () => window.removeEventListener(\"resize\", updateScale);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const App = {\r\n      canvas: null,\r\n      ctx: null,\r\n      width: 0,\r\n      height: 0,\r\n      particles: [],\r\n      deathCount: 0,\r\n      stepCount: 0,\r\n      drawnInLastFrame: 0,\r\n      animationFrame: null,\r\n\r\n      setup: function () {\r\n        const canvas = canvasRef.current;\r\n        const container = canvas.parentElement;\r\n\r\n        this.width = container.clientWidth;\r\n        this.height = container.clientHeight;\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n\r\n        this.canvas = canvas;\r\n        this.ctx = canvas.getContext(\"2d\");\r\n        this.dataToImageRatio = 1;\r\n        this.ctx.imageSmoothingEnabled = false;\r\n        this.xC = this.width / 2;\r\n        this.yC = this.height / 2;\r\n\r\n        this.lifespan = 1000;\r\n        this.popPerBirth = 1;\r\n        this.maxPop = 300;\r\n        this.birthFreq = 5;\r\n        this.gridSize = 8;\r\n        this.gridSteps = Math.floor(1000 / this.gridSize);\r\n        this.grid = [];\r\n\r\n        let i = 0;\r\n        const gridArea = 1000;\r\n        const gridRadius = gridArea / 2;\r\n        for (let xx = -gridRadius; xx < gridRadius; xx += this.gridSize) {\r\n          for (let yy = -gridRadius; yy < gridRadius; yy += this.gridSize) {\r\n            const r = Math.sqrt(xx * xx + yy * yy);\r\n            const r0 = 110;\r\n            let field;\r\n            if (r < r0) field = (255 / r0) * r;\r\n            else field = 255 - Math.min(255, (r - r0) / 5);\r\n            this.grid.push({\r\n              x: xx,\r\n              y: yy,\r\n              busyAge: 0,\r\n              spotIndex: i,\r\n              isEdge:\r\n                xx === -gridRadius ||\r\n                xx >= gridRadius - this.gridSize ||\r\n                yy === -gridRadius ||\r\n                yy >= gridRadius - this.gridSize,\r\n              field: field,\r\n            });\r\n            i++;\r\n          }\r\n        }\r\n        this.gridMaxIndex = i;\r\n\r\n        this.initDraw();\r\n\r\n        const animate = () => {\r\n          this.evolve();\r\n          this.animationFrame = requestAnimationFrame(animate);\r\n        };\r\n        animate();\r\n\r\n        // Interactivity: click to spawn\r\n        canvas.addEventListener(\"click\", (e) => {\r\n          const rect = canvas.getBoundingClientRect();\r\n          const x = e.clientX - rect.left;\r\n          const y = e.clientY - rect.top;\r\n          this.spawnAt(x, y);\r\n        });\r\n      },\r\n\r\n      spawnAt: function (canvasX, canvasY) {\r\n        const x = (canvasX - this.xC) / (1.6 * this.dataToImageRatio);\r\n        const y = (canvasY - this.yC) / (1.6 * this.dataToImageRatio);\r\n\r\n        let closestSpot = this.grid[0];\r\n        let minDist = Infinity;\r\n        this.grid.forEach((spot) => {\r\n          const dist = Math.hypot(spot.x - x, spot.y - y);\r\n          if (dist < minDist) {\r\n            minDist = dist;\r\n            closestSpot = spot;\r\n          }\r\n        });\r\n\r\n        const particle = {\r\n          hue: 260 + Math.sin(Date.now()) * 5000,\r\n          sat: 100,\r\n          lum: 60,\r\n          x: closestSpot.x,\r\n          y: closestSpot.y,\r\n          xLast: closestSpot.x,\r\n          yLast: closestSpot.y,\r\n          xSpeed: 0,\r\n          ySpeed: 0,\r\n          age: 0,\r\n          ageSinceStuck: 0,\r\n          attractor: {\r\n            oldIndex: closestSpot.spotIndex,\r\n            gridSpotIndex: closestSpot.spotIndex,\r\n          },\r\n          name: \"worm-\" + Math.ceil(10000000 * Math.random()),\r\n        };\r\n        this.particles.push(particle);\r\n      },\r\n\r\n      evolve: function () {\r\n        this.stepCount++;\r\n        this.grid.forEach((e) => {\r\n          if (e.busyAge > 0) e.busyAge++;\r\n        });\r\n\r\n        if (\r\n          this.stepCount % this.birthFreq === 0 &&\r\n          this.particles.length + this.popPerBirth < this.maxPop\r\n        ) {\r\n          this.birth();\r\n        }\r\n\r\n        this.move();\r\n        this.draw();\r\n      },\r\n\r\n      birth: function () {\r\n        const angle = Math.random() * Math.PI * 6;\r\n        const radius = Math.sqrt(Math.random()) * 600;\r\n        const x = radius * Math.cos(angle);\r\n        const y = radius * Math.sin(angle);\r\n\r\n        let closestSpot = this.grid[0];\r\n        let minDist = Infinity;\r\n        this.grid.forEach((spot) => {\r\n          const dist = Math.hypot(spot.x - x, spot.y - y);\r\n          if (dist < minDist) {\r\n            minDist = dist;\r\n            closestSpot = spot;\r\n          }\r\n        });\r\n\r\n        const particle = {\r\n          hue: 260 + Math.sin(Date.now()) * 5000,\r\n          sat: 100,\r\n          lum: 60,\r\n          x: closestSpot.x,\r\n          y: closestSpot.y,\r\n          xLast: closestSpot.x,\r\n          yLast: closestSpot.y,\r\n          xSpeed: 0,\r\n          ySpeed: 0,\r\n          age: 0,\r\n          ageSinceStuck: 0,\r\n          attractor: {\r\n            oldIndex: closestSpot.spotIndex,\r\n            gridSpotIndex: closestSpot.spotIndex,\r\n          },\r\n          name: \"worm-\" + Math.ceil(10000000 * Math.random()),\r\n        };\r\n        this.particles.push(particle);\r\n      },\r\n\r\n      move: function () {\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n          const p = this.particles[i];\r\n          p.xLast = p.x;\r\n          p.yLast = p.y;\r\n\r\n          let index = p.attractor.gridSpotIndex;\r\n          let gridSpot = this.grid[index];\r\n\r\n          if (Math.random() < 0.35) {\r\n            if (!gridSpot.isEdge) {\r\n              const neighbors = [\r\n                this.grid[index - 1],\r\n                this.grid[index + 1],\r\n                this.grid[index - this.gridSteps],\r\n                this.grid[index + this.gridSteps],\r\n              ].filter(Boolean);\r\n\r\n              if (neighbors.length > 1) {\r\n                const chaos = 3.5;\r\n                const maxFieldSpot = neighbors.reduce((max, spot) =>\r\n                  spot.field + chaos * Math.random() >\r\n                  max.field + chaos * Math.random()\r\n                    ? spot\r\n                    : max\r\n                );\r\n\r\n                if (maxFieldSpot.busyAge === 0 || maxFieldSpot.busyAge > 15) {\r\n                  p.ageSinceStuck = 0;\r\n                  p.attractor.oldIndex = index;\r\n                  p.attractor.gridSpotIndex = maxFieldSpot.spotIndex;\r\n                  gridSpot = maxFieldSpot;\r\n                  gridSpot.busyAge = 1;\r\n                } else {\r\n                  p.ageSinceStuck++;\r\n                }\r\n              }\r\n\r\n              if (p.ageSinceStuck === 10) {\r\n                this.particles.splice(i, 1);\r\n                i--;\r\n                continue;\r\n              }\r\n            }\r\n          }\r\n\r\n          const k = 8,\r\n            visc = 0.4;\r\n          const dx = p.x - gridSpot.x;\r\n          const dy = p.y - gridSpot.y;\r\n\r\n          p.xSpeed += -k * dx;\r\n          p.ySpeed += -k * dy;\r\n          p.xSpeed *= visc;\r\n          p.ySpeed *= visc;\r\n\r\n          p.x += 0.1 * p.xSpeed;\r\n          p.y += 0.1 * p.ySpeed;\r\n          p.age++;\r\n\r\n          if (p.age > this.lifespan) {\r\n            this.particles.splice(i, 1);\r\n            i--;\r\n          }\r\n        }\r\n      },\r\n\r\n      draw: function () {\r\n        this.ctx.fillStyle = \"rgba(0, 0, 0, 0.02)\";\r\n        this.ctx.fillRect(0, 0, this.width, this.height);\r\n\r\n        for (const p of this.particles) {\r\n          const h = p.hue + this.stepCount / 200;\r\n          const last = this.dataXYtoCanvasXY(p.xLast, p.yLast);\r\n          const now = this.dataXYtoCanvasXY(p.x, p.y);\r\n\r\n          this.ctx.beginPath();\r\n          this.ctx.strokeStyle = `hsla(${h}, ${p.sat}%, ${p.lum}%, 1)`;\r\n          this.ctx.moveTo(last.x, last.y);\r\n          this.ctx.lineTo(now.x, now.y);\r\n          this.ctx.lineWidth = 1.5;\r\n          this.ctx.stroke();\r\n\r\n          const attracSpot = this.grid[p.attractor.gridSpotIndex];\r\n          const attracXY = this.dataXYtoCanvasXY(attracSpot.x, attracSpot.y);\r\n          const oldAttracXY = this.dataXYtoCanvasXY(\r\n            this.grid[p.attractor.oldIndex].x,\r\n            this.grid[p.attractor.oldIndex].y\r\n          );\r\n\r\n          this.ctx.beginPath();\r\n          this.ctx.strokeStyle = `hsla(${h}, ${p.sat}%, ${p.lum}%, 0.5)`;\r\n          this.ctx.moveTo(oldAttracXY.x, oldAttracXY.y);\r\n          this.ctx.lineTo(attracXY.x, attracXY.y);\r\n          this.ctx.arc(attracXY.x, attracXY.y, 2.0, 0, Math.PI * 2);\r\n          this.ctx.stroke();\r\n        }\r\n      },\r\n\r\n      dataXYtoCanvasXY: function (x, y) {\r\n        const zoom = 1.6;\r\n        return {\r\n          x: this.xC + x * zoom * this.dataToImageRatio,\r\n          y: this.yC + y * zoom * this.dataToImageRatio,\r\n        };\r\n      },\r\n\r\n      initDraw: function () {\r\n        this.ctx.fillStyle = \"\";\r\n        this.ctx.fillRect(0, 0, this.width, this.height);\r\n      },\r\n    };\r\n\r\n    App.setup();\r\n\r\n    return () => {\r\n      if (App.animationFrame) {\r\n        cancelAnimationFrame(App.animationFrame);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"effect-area\">\r\n        <canvas ref={canvasRef} className=\"particle-canvas\" />\r\n        <div className=\"package\">\r\n          <div className=\"package2\">\r\n            <p className=\"banner\">CYBER VIGILANCE CENTRE</p>\r\n            <div className=\"package-image-wrapper\">\r\n              <img src=\"homepage-logo.png\" alt=\"Company Logo\" className=\"package-image\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}