{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Projectone\\\\Desktop\\\\GT PORTAL\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/RegisterPage.css\"; // If you have a CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth(); // Access authentication state\n  const navigate = useNavigate();\n\n  // Redirect to dashboard if already authenticated\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate(\"/dashboard\", {\n        replace: true\n      }); // Redirect to dashboard if logged in\n    }\n  }, [isAuthenticated, navigate]);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    // Sending the data to the backend for registration\n    const response = await fetch(\"/api/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: formData.username,\n        password: formData.password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      alert(\"Registration successful! Please log in.\");\n      navigate(\"/login\");\n    } else {\n      alert(data.error || \"Registration failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"9bOOkOlyH0ZLE28y379t4CaLr4U=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useAuth","jsxDEV","_jsxDEV","RegisterPage","_s","isAuthenticated","navigate","replace","formData","setFormData","username","password","confirmPassword","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Projectone/Desktop/GT PORTAL/src/pages/RegisterPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/RegisterPage.css\";  // If you have a CSS file\r\n\r\nfunction RegisterPage() {\r\n  const { isAuthenticated } = useAuth(); // Access authentication state\r\n  const navigate = useNavigate();\r\n\r\n  // Redirect to dashboard if already authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate(\"/dashboard\", { replace: true }); // Redirect to dashboard if logged in\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  const [formData, setFormData] = useState({ username: \"\", password: \"\", confirmPassword: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (formData.password !== formData.confirmPassword) {\r\n      alert(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    // Sending the data to the backend for registration\r\n    const response = await fetch(\"/api/register\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username: formData.username, password: formData.password }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      alert(\"Registration successful! Please log in.\");\r\n      navigate(\"/login\");\r\n    } else {\r\n      alert(data.error || \"Registration failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.confirmPassword}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}