{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Projectone\\\\Desktop\\\\cloud\\\\soc-portal\\\\src\\\\pages\\\\Shifts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/Shifts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst shiftTypes = [\"Morning\", \"Evening\", \"Night\"];\nconst getCurrentWeek = () => {\n  const today = new Date();\n  const start = today.getDate() - today.getDay(); // Sunday\n  return [...Array(7)].map((_, i) => {\n    const date = new Date(today.setDate(start + i));\n    return date.toISOString().slice(0, 10);\n  });\n};\nconst Shifts = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  const [shifts, setShifts] = useState([]);\n  const [analysts, setAnalysts] = useState([]);\n  const [weekDates, setWeekDates] = useState(getCurrentWeek());\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const [commentsMap, setCommentsMap] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\n  const [newShiftType, setNewShiftType] = useState(\"Morning\");\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  useEffect(() => {\n    fetch(\"http://192.168.1.49:5000/api/shifts\").then(res => res.json()).then(data => setShifts(data)).catch(err => console.error(\"Failed to fetch shifts:\", err));\n    fetch(\"http://192.168.1.49:5000/api/analysts\").then(res => res.json()).then(data => setAnalysts(data)).catch(err => console.error(\"Failed to fetch analysts:\", err));\n  }, []);\n  const openShiftModal = shift => {\n    setSelectedShift(shift);\n    setComment(commentsMap[shift.id] || \"\");\n    setIsModalOpen(true);\n  };\n  const handleSave = () => {\n    if (selectedShift) {\n      setCommentsMap(prev => ({\n        ...prev,\n        [selectedShift.id]: comment\n      }));\n    }\n    setIsModalOpen(false);\n  };\n  const handleEmployeeToggle = username => {\n    setSelectedEmployees(prev => prev.includes(username) ? prev.filter(u => u !== username) : [...prev, username]);\n  };\n  const handleAddShift = async () => {\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\n      alert(\"Please fill all fields.\");\n      return;\n    }\n    const usernames = selectedEmployees.join(\", \");\n    const isDuplicate = shifts.some(shift => shift.date === newShiftDate && shift.shift_type === newShiftType.toLowerCase() && shift.title === `${usernames} - ${newShiftType}`);\n    if (isDuplicate) {\n      alert(\"This shift already exists with selected employees.\");\n      return;\n    }\n    try {\n      const employeeIds = analysts.filter(emp => selectedEmployees.includes(emp.username)).map(emp => emp.id);\n      const response = await fetch(\"http://192.168.1.49:5000/api/create_shift\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          date: newShiftDate,\n          shift_type: newShiftType.toLowerCase(),\n          employee_ids: employeeIds\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + data.error);\n        return;\n      }\n      const newShift = {\n        id: data.shift_id,\n        title: `${usernames} - ${newShiftType}`,\n        date: newShiftDate,\n        shift_type: newShiftType.toLowerCase()\n      };\n      setShifts(prev => [...prev, newShift]);\n      setIsAddModalOpen(false);\n      setSelectedEmployees([]);\n      alert(\"Shift created successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to create shift.\");\n    }\n  };\n  const getShiftsByDateAndType = (date, type) => {\n    return shifts.filter(s => s.date === date && s.shift_type.toLowerCase() === type.toLowerCase());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shifts-wrapper\",\n    children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsAddModalOpen(true),\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: \"Add Shift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-shift-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell shift-label-header\",\n          children: \"Shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), weekDates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: new Date(date).toLocaleDateString(\"en-US\", {\n            weekday: \"short\",\n            month: \"short\",\n            day: \"numeric\"\n          })\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), shiftTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell shift-label\",\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), weekDates.map(date => {\n          const shiftsHere = getShiftsByDateAndType(date, type);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell\",\n            children: shiftsHere.length > 0 ? shiftsHere.map(shift => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"shift-box\",\n              title: shift.title,\n              onClick: () => openShiftModal(shift),\n              children: shift.title\n            }, shift.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 23\n            }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#aaa\"\n              },\n              children: \"\\u2014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)\n          }, `${date}-${type}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this);\n        })]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shift Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 10,\n        cols: 60,\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAddModalOpen,\n      onRequestClose: () => setIsAddModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Employees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          maxHeight: \"150px\",\n          overflowY: \"scroll\"\n        },\n        children: analysts.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedEmployees.includes(emp.username),\n            onChange: () => handleEmployeeToggle(emp.username)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: \"8px\"\n            },\n            children: emp.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Shift Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newShiftType,\n        onChange: e => setNewShiftType(e.target.value),\n        children: shiftTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newShiftDate,\n        onChange: e => setNewShiftDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShift,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Add Shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Shifts, \"+WonwTa3RKtp54hIBavR0KH0DbE=\", false, function () {\n  return [useAuth];\n});\n_c = Shifts;\nexport default Shifts;\nvar _c;\n$RefreshReg$(_c, \"Shifts\");","map":{"version":3,"names":["React","useState","useEffect","Modal","useAuth","jsxDEV","_jsxDEV","setAppElement","shiftTypes","getCurrentWeek","today","Date","start","getDate","getDay","Array","map","_","i","date","setDate","toISOString","slice","Shifts","_s","user","isAdmin","role","shifts","setShifts","analysts","setAnalysts","weekDates","setWeekDates","selectedShift","setSelectedShift","comment","setComment","commentsMap","setCommentsMap","isModalOpen","setIsModalOpen","isAddModalOpen","setIsAddModalOpen","newShiftDate","setNewShiftDate","newShiftType","setNewShiftType","selectedEmployees","setSelectedEmployees","fetch","then","res","json","data","catch","err","console","error","openShiftModal","shift","id","handleSave","prev","handleEmployeeToggle","username","includes","filter","u","handleAddShift","length","alert","usernames","join","isDuplicate","some","shift_type","toLowerCase","title","employeeIds","emp","response","method","headers","body","JSON","stringify","employee_ids","ok","newShift","shift_id","getShiftsByDateAndType","type","s","className","children","onClick","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","weekday","month","day","shiftsHere","color","isOpen","onRequestClose","overlayClassName","rows","cols","value","onChange","e","target","marginTop","marginRight","border","padding","maxHeight","overflowY","checked","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Projectone/Desktop/cloud/soc-portal/src/pages/Shifts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/Shifts.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst shiftTypes = [\"Morning\", \"Evening\", \"Night\"];\r\n\r\nconst getCurrentWeek = () => {\r\n  const today = new Date();\r\n  const start = today.getDate() - today.getDay(); // Sunday\r\n  return [...Array(7)].map((_, i) => {\r\n    const date = new Date(today.setDate(start + i));\r\n    return date.toISOString().slice(0, 10);\r\n  });\r\n};\r\n\r\nconst Shifts = () => {\r\n  const { user } = useAuth();\r\n  const isAdmin = user?.role === \"admin\";\r\n\r\n  const [shifts, setShifts] = useState([]);\r\n  const [analysts, setAnalysts] = useState([]);\r\n  const [weekDates, setWeekDates] = useState(getCurrentWeek());\r\n\r\n  const [selectedShift, setSelectedShift] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\r\n  const [newShiftType, setNewShiftType] = useState(\"Morning\");\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.49:5000/api/shifts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setShifts(data))\r\n      .catch((err) => console.error(\"Failed to fetch shifts:\", err));\r\n\r\n    fetch(\"http://192.168.1.49:5000/api/analysts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAnalysts(data))\r\n      .catch((err) => console.error(\"Failed to fetch analysts:\", err));\r\n  }, []);\r\n\r\n  const openShiftModal = (shift) => {\r\n    setSelectedShift(shift);\r\n    setComment(commentsMap[shift.id] || \"\");\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedShift) {\r\n      setCommentsMap((prev) => ({\r\n        ...prev,\r\n        [selectedShift.id]: comment,\r\n      }));\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleEmployeeToggle = (username) => {\r\n    setSelectedEmployees((prev) =>\r\n      prev.includes(username)\r\n        ? prev.filter((u) => u !== username)\r\n        : [...prev, username]\r\n    );\r\n  };\r\n\r\n  const handleAddShift = async () => {\r\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\r\n      alert(\"Please fill all fields.\");\r\n      return;\r\n    }\r\n\r\n    const usernames = selectedEmployees.join(\", \");\r\n\r\n    const isDuplicate = shifts.some(\r\n      (shift) =>\r\n        shift.date === newShiftDate &&\r\n        shift.shift_type === newShiftType.toLowerCase() &&\r\n        shift.title === `${usernames} - ${newShiftType}`\r\n    );\r\n\r\n    if (isDuplicate) {\r\n      alert(\"This shift already exists with selected employees.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const employeeIds = analysts\r\n        .filter((emp) => selectedEmployees.includes(emp.username))\r\n        .map((emp) => emp.id);\r\n\r\n      const response = await fetch(\"http://192.168.1.49:5000/api/create_shift\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          date: newShiftDate,\r\n          shift_type: newShiftType.toLowerCase(),\r\n          employee_ids: employeeIds,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + data.error);\r\n        return;\r\n      }\r\n\r\n      const newShift = {\r\n        id: data.shift_id,\r\n        title: `${usernames} - ${newShiftType}`,\r\n        date: newShiftDate,\r\n        shift_type: newShiftType.toLowerCase(),\r\n      };\r\n\r\n      setShifts((prev) => [...prev, newShift]);\r\n      setIsAddModalOpen(false);\r\n      setSelectedEmployees([]);\r\n      alert(\"Shift created successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to create shift.\");\r\n    }\r\n  };\r\n\r\n  const getShiftsByDateAndType = (date, type) => {\r\n    return shifts.filter(\r\n      (s) =>\r\n        s.date === date &&\r\n        s.shift_type.toLowerCase() === type.toLowerCase()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"shifts-wrapper\">\r\n      {isAdmin && (\r\n        <button onClick={() => setIsAddModalOpen(true)} style={{ marginBottom: \"10px\" }}>\r\n          Add Shift\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"custom-shift-grid\">\r\n        <div className=\"grid-header\">\r\n          <div className=\"cell shift-label-header\">Shift</div>\r\n          {weekDates.map((date) => (\r\n            <div className=\"cell\" key={date}>\r\n              {new Date(date).toLocaleDateString(\"en-US\", { weekday: \"short\", month: \"short\", day: \"numeric\" })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {shiftTypes.map((type) => (\r\n          <div className=\"grid-row\" key={type}>\r\n            <div className=\"cell shift-label\">{type}</div>\r\n            {weekDates.map((date) => {\r\n              const shiftsHere = getShiftsByDateAndType(date, type);\r\n              return (\r\n                <div className=\"cell\" key={`${date}-${type}`}>\r\n                  {shiftsHere.length > 0 ? (\r\n                    shiftsHere.map((shift) => (\r\n                      <div\r\n                        key={shift.id}\r\n                        className=\"shift-box\"\r\n                        title={shift.title}\r\n                        onClick={() => openShiftModal(shift)}\r\n                      >\r\n                        {shift.title}\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <span style={{ color: \"#aaa\" }}>—</span>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Modal for Comments (Can be extended to Edit/Delete) */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Shift Details</h2>\r\n        <textarea\r\n          rows={10}\r\n          cols={60}\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <button onClick={handleSave} style={{ marginRight: \"10px\" }}>\r\n            Save\r\n          </button>\r\n          <button onClick={() => setIsModalOpen(false)}>Close</button>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Modal for Adding Shift */}\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onRequestClose={() => setIsAddModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Create Shift</h2>\r\n\r\n        <label>Select Employees:</label>\r\n        <div style={{ border: \"1px solid #ccc\", padding: \"10px\", maxHeight: \"150px\", overflowY: \"scroll\" }}>\r\n          {analysts.map((emp) => (\r\n            <div key={emp.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedEmployees.includes(emp.username)}\r\n                onChange={() => handleEmployeeToggle(emp.username)}\r\n              />\r\n              <label style={{ marginLeft: \"8px\" }}>{emp.username}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <label>Shift Type:</label>\r\n        <select value={newShiftType} onChange={(e) => setNewShiftType(e.target.value)}>\r\n          {shiftTypes.map((type) => (\r\n            <option key={type}>{type}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <label>Date:</label>\r\n        <input type=\"date\" value={newShiftDate} onChange={(e) => setNewShiftDate(e.target.value)} />\r\n\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <button onClick={handleAddShift} style={{ marginRight: \"10px\" }}>\r\n            Add Shift\r\n          </button>\r\n          <button onClick={() => setIsAddModalOpen(false)}>Cancel</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shifts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}