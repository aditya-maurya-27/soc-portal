{"ast":null,"code":"var _jsxFileName = \"C:\\\\OfficeData\\\\Projects\\\\soc-portal\\\\src\\\\pages\\\\Roster.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/Roster.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst shiftTimeMapping = {\n  Night: {\n    start: \"00:00\",\n    end: \"08:00\"\n  },\n  Morning: {\n    start: \"08:00\",\n    end: \"16:00\"\n  },\n  Evening: {\n    start: \"16:00\",\n    end: \"00:00\"\n  }\n};\nconst Roster = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  const [cabStatusList, setCabStatusList] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"tab1\");\n  const [shifts, setShifts] = useState([]);\n  const [selectedEmployeeForNotes, setSelectedEmployeeForNotes] = useState(\"\");\n  const [employeeNotes, setEmployeeNotes] = useState({});\n  const shiftColorMap = useRef({});\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveStatus, setSaveStatus] = useState({\n    success: null,\n    message: ''\n  });\n  const [commentsMap, setCommentsMap] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\n  const [newShiftType, setNewShiftType] = useState(\"Night\");\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const [analysts, setAnalysts] = useState([]);\n  const [cabOpted, setCabOpted] = useState(false);\n  const [editShiftType, setEditShiftType] = useState(\"Night\");\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\n  const [clusters, setClusters] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [users, setUsers] = useState([]);\n  const [newUsername, setNewUsername] = useState('');\n  const [newUserCluster, setNewUserCluster] = useState('');\n  const shiftColorPool = [\"#061e48\", \"#260e20\", \"#081e2c\", \"#220024\", \"#002620\", \"#3d0000\", \"#001020\", \"#2c003e\", \"#250a46\", \"#0d0d20\", \"#1d0652\", \"#180a19\", \"#460000\", \"#3e120e\", \"#320f0b\", \"#3c1410\", \"#370a0a\", \"#461200\", \"#5c2007\", \"#502916\", \"#69340f\", \"#4e3206\", \"#46220a\", \"#3e2400\", \"#382c00\", \"#332e0f\", \"#00202e\", \"#1c004c\", \"#1c0032\", \"#1f0330\", \"#091a12\", \"#0f151c\", \"#061020\", \"#420516\", \"#0d0d17\", \"#04131a\", \"#20110c\", \"#0d1b2a\", \"#0e0e18\", \"#141c26\", \"#0a1422\", \"#1f1024\", \"#0c1e1e\", \"#0e0e0e\", \"#001a33\", \"#101010\", \"#160e07\", \"#190a12\", \"#08162c\", \"#16162a\", \"#150422\", \"#2e003e\", \"#000f1a\", \"#0e1316\", \"#001f3f\", \"#160a16\", \"#460046\", \"#400020\", \"#4c1a33\", \"#381432\", \"#521535\", \"#3c0017\", \"#551a35\", \"#260701\", \"#0c0c12\", \"#100e1b\", \"#1e1818\", \"#171720\", \"#0f0f18\", \"#111418\", \"#35013f\", \"#0d2617\"];\n  const isMountedRef = useRef(true);\n  useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (!user) {\n      setIsModalOpen(false);\n      setIsAddModalOpen(false);\n    }\n  }, [user]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/clusters\").then(res => res.json()).then(data => {\n      setClusters(data);\n      if (data.length > 0) {\n        setSelectedCluster(data[0]);\n      }\n    }).catch(err => console.error(\"Failed to fetch clusters:\", err));\n  }, []);\n  useEffect(() => {\n    if (selectedCluster) {\n      fetch(`http://localhost:5000/api/clusters/${selectedCluster}`).then(res => res.json()).then(data => setUsers(data)).catch(err => console.error(\"Failed to fetch users:\", err));\n    }\n  }, [selectedCluster]);\n  const fetchShifts = () => {\n    fetch(\"http://localhost:5000/api/shifts\").then(res => res.json()).then(data => {\n      if (isMountedRef.current) setShifts(data);\n    }).catch(err => {\n      if (isMountedRef.current) console.error(\"Failed to fetch shifts:\", err);\n    });\n  };\n  useEffect(() => {\n    fetchShifts();\n    fetch(\"http://localhost:5000/api/analysts\").then(res => res.json()).then(data => {\n      if (isMountedRef.current) setAnalysts(data);\n    }).catch(err => {\n      if (isMountedRef.current) console.error(\"Failed to fetch analysts:\", err);\n    });\n  }, []);\n  const handleEmployeeToggle = username => {\n    setSelectedEmployees(prev => prev.includes(username) ? prev.filter(u => u !== username) : [...prev, username]);\n  };\n  const isUserInShift = () => {\n    return cabStatusList.some(emp => emp.username === (user === null || user === void 0 ? void 0 : user.username));\n  };\n  const handleCabToggle = async () => {\n    const newCabOpted = !cabOpted;\n    setCabOpted(newCabOpted);\n    try {\n      await fetch(`http://localhost:5000/api/update_cab_status`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id,\n          employee_id: user.id,\n          cab_facility: newCabOpted ? \"Yes\" : \"No\"\n        })\n      });\n      setCabStatusList(prevList => prevList.map(emp => emp.username === user.username ? {\n        ...emp,\n        cab_facility: newCabOpted ? \"Yes\" : \"No\"\n      } : emp));\n    } catch (err) {\n      if (isMountedRef.current) console.error(\"Failed to update cab status:\", err);\n    }\n  };\n  const handleEventClick = async info => {\n    const shift = info.event;\n    if (!isMountedRef.current) return;\n    setSelectedShift(shift);\n    setComment(commentsMap[shift.id] || \"\");\n\n    // Admin logic remains the same\n    if (isAdmin) {\n      const date = shift.start.toISOString().slice(0, 10);\n      let shiftType = \"Morning\";\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\n      const firstEmp = shift.title.split(\" - \")[0];\n      const matchedEmp = analysts.find(emp => emp.username === firstEmp);\n      setEditShiftType(shiftType);\n      setEditShiftDate(date);\n      setEditEmployeeId((matchedEmp === null || matchedEmp === void 0 ? void 0 : matchedEmp.id) || \"\");\n    }\n    try {\n      var _cabData$find, _cabData$;\n      // 1. First fetch cab status (contains employee info)\n      const cabResponse = await fetch(`http://localhost:5000/api/shifts/${shift.id}/cab-status`);\n      if (!cabResponse.ok) throw new Error(\"Failed to fetch cab status\");\n      const cabData = await cabResponse.json();\n      if (!isMountedRef.current) return;\n      setCabStatusList(cabData);\n      if (!isAdmin && cabData.length > 0) {\n        const currentUser = cabData.find(emp => emp.username === user.username);\n        setCabOpted((currentUser === null || currentUser === void 0 ? void 0 : currentUser.cab_facility) === \"Yes\");\n      }\n\n      // 2. Then fetch notes for this shift\n      const notesResponse = await fetch(`http://localhost:5000/api/shifts/${shift.id}/notes`);\n      if (!notesResponse.ok) throw new Error(\"Failed to fetch notes\");\n      const notesData = await notesResponse.json();\n\n      // Debug logs to verify data\n      console.log(\"Cab Data:\", cabData);\n      console.log(\"Notes Data:\", notesData);\n\n      // Create mapping of username to note\n      const notesMap = {};\n      notesData.forEach(note => {\n        // Find the employee in cabData - using id from cab status that matches employee_id in notes\n        const employee = cabData.find(emp => emp.id === note.employee_id);\n        if (employee) {\n          notesMap[employee.username] = note.note;\n        }\n      });\n      console.log(\"Notes Map:\", notesMap); // Debug log\n      setEmployeeNotes(notesMap);\n\n      // Set default selected employee (current user if in shift, otherwise first employee)\n      const defaultEmployee = ((_cabData$find = cabData.find(emp => emp.username === (user === null || user === void 0 ? void 0 : user.username))) === null || _cabData$find === void 0 ? void 0 : _cabData$find.username) || ((_cabData$ = cabData[0]) === null || _cabData$ === void 0 ? void 0 : _cabData$.username) || '';\n      setSelectedEmployeeForNotes(defaultEmployee);\n    } catch (error) {\n      console.error(\"Error fetching shift data:\", error);\n      if (isMountedRef.current) {\n        setCabStatusList([]);\n        setEmployeeNotes({});\n      }\n    }\n    if (isMountedRef.current) setIsModalOpen(true);\n  };\n  const isWithinShift = () => {\n    if (!selectedShift) return false;\n    const now = new Date();\n    const start = new Date(selectedShift.start);\n    const end = new Date(selectedShift.end);\n    return now >= start && now <= end;\n  };\n  const handleSave = async () => {\n    if (!selectedShift || !selectedEmployeeForNotes) {\n      setSaveStatus({\n        success: false,\n        message: \"No shift or employee selected\"\n      });\n      return;\n    }\n    try {\n      setIsSaving(true);\n      setSaveStatus({\n        success: null,\n        message: ''\n      });\n\n      // Find the employee in the shift\n      const employee = cabStatusList.find(emp => emp.username === selectedEmployeeForNotes);\n      if (!employee && !isAdmin) {\n        throw new Error(\"You are not assigned to this shift\");\n      }\n\n      // Prepare the note content (handle empty strings)\n      const noteToSave = employeeNotes[selectedEmployeeForNotes] || \"\";\n      const response = await fetch(\"http://localhost:5000/api/save_notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id,\n          employee_id: employee === null || employee === void 0 ? void 0 : employee.id,\n          // Safe access with optional chaining\n          notes: noteToSave,\n          is_admin: isAdmin // Send admin status to backend\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || errorData.message || \"Failed to save notes\");\n      }\n\n      // Update local state with the saved note\n      setEmployeeNotes(prev => ({\n        ...prev,\n        [selectedEmployeeForNotes]: noteToSave\n      }));\n      setSaveStatus({\n        success: true,\n        message: \"Notes saved successfully!\",\n        timestamp: new Date().toISOString()\n      });\n\n      // Refresh notes from server to ensure consistency\n      try {\n        const notesResponse = await fetch(`http://localhost:5000/api/shifts/${selectedShift.id}/notes`);\n        if (notesResponse.ok) {\n          const notesData = await notesResponse.json();\n          const updatedNotes = {};\n          notesData.forEach(note => {\n            const emp = cabStatusList.find(e => e.id === note.employee_id);\n            if (emp) updatedNotes[emp.username] = note.note;\n          });\n          setEmployeeNotes(updatedNotes);\n        }\n      } catch (refreshError) {\n        console.warn(\"Couldn't refresh notes:\", refreshError);\n      }\n    } catch (err) {\n      console.error(\"Error saving notes:\", err);\n      setSaveStatus({\n        success: false,\n        message: err.message || \"An unexpected error occurred\"\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleAddShift = async () => {\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\n      alert(\"Please fill all fields.\");\n      return;\n    }\n    const {\n      start,\n      end\n    } = shiftTimeMapping[newShiftType];\n    const startDateTime = `${newShiftDate}T${start}:00`;\n    let endDate = new Date(newShiftDate);\n    if (end === \"00:00\") {\n      endDate.setDate(endDate.getDate() + 1);\n    }\n    const endDateStr = endDate.toISOString().split('T')[0];\n    const endDateTime = `${endDateStr}T${end}:00`;\n    const selectedEmployeeObjects = analysts.filter(emp => selectedEmployees.includes(emp.username));\n    try {\n      for (let emp of selectedEmployeeObjects) {\n        const response = await fetch(\"http://localhost:5000/api/create_shift\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            start_datetime: startDateTime,\n            end_datetime: endDateTime,\n            employee_ids: [emp.id],\n            shift_type: newShiftType.toLowerCase()\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          alert(\"Error: \" + data.error);\n          return;\n        }\n      }\n      fetchShifts();\n      alert(\"Shift(s) created successfully!\");\n    } catch (err) {\n      console.error(\"Failed to create shift:\", err);\n      alert(\"Failed to create shift. Check console for details.\");\n    }\n    setIsAddModalOpen(false);\n    setSelectedEmployees([]);\n  };\n  const handleEditShift = async () => {\n    try {\n      var _analysts$find;\n      const shiftId = selectedShift.id;\n      const {\n        start,\n        end\n      } = shiftTimeMapping[editShiftType];\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\n      if (end === \"00:00\") {\n        endDateTime.setDate(endDateTime.getDate() + 1);\n      }\n      const selectedUsername = ((_analysts$find = analysts.find(emp => emp.id === editEmployeeId)) === null || _analysts$find === void 0 ? void 0 : _analysts$find.username) || \"\";\n      const isDuplicate = shifts.some(shift => {\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\n        const sameEmployee = shift.title.includes(selectedUsername);\n        const differentShift = String(shift.id) !== String(shiftId);\n        return differentShift && sameStart && sameEnd && sameEmployee;\n      });\n      if (isDuplicate) {\n        alert(\"Another shift already exists in that slot!\");\n        return;\n      }\n      const response = await fetch(\"http://localhost:5000/api/edit_shift\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: shiftId,\n          date: editShiftDate,\n          shift_type: editShiftType.toLowerCase(),\n          employee_id: editEmployeeId\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      fetchShifts();\n      setIsModalOpen(false);\n      alert(\"Shift updated successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to edit shift.\");\n    }\n  };\n  const handleDeleteShift = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/delete_shift\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      fetchShifts();\n      setIsModalOpen(false);\n      alert(\"Shift deleted successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to delete shift.\");\n    }\n  };\n  const slotLabelContent = arg => {\n    if (arg.date.getHours() === 0) return \"Night\";\n    if (arg.date.getHours() === 8) return \"Morning\";\n    if (arg.date.getHours() === 16) return \"Evening\";\n    return \"\";\n  };\n  const slotLaneContent = arg => {\n    const hour = arg.date.getHours();\n    if (hour !== 0 && hour !== 8 && hour !== 16) {\n      return {\n        display: \"none\"\n      };\n    }\n    return null;\n  };\n  const handleCreateUser = async () => {\n    if (!newUsername || !newUserCluster) {\n      alert(\"Please enter both username and cluster number.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/clusters\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: newUsername,\n          cluster: newUserCluster\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to create user\");\n      setNewUsername('');\n      setNewUserCluster('');\n      if (selectedCluster === newUserCluster) {\n        // Refresh users if the new user is in the selected cluster\n        const updated = await fetch(`http://localhost:5000/api/clusters/${newUserCluster}`);\n        const data = await updated.json();\n        setUsers(data);\n      }\n    } catch (err) {\n      console.error(\"Error creating user:\", err);\n      alert(\"Failed to create user.\");\n    }\n  };\n  const handleDeleteUser = async userId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/clusters/${userId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) throw new Error(\"Failed to delete user\");\n\n      // Refresh users\n      const updated = await fetch(`http://localhost:5000/api/clusters/${selectedCluster}`);\n      const data = await updated.json();\n      setUsers(data);\n    } catch (err) {\n      console.error(\"Error deleting user:\", err);\n      alert(\"Failed to delete user.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"tab\",\n        id: \"tab1\",\n        className: \"tab tab--1\",\n        defaultChecked: true,\n        onChange: () => setActiveTab(\"tab1\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"tab_label\",\n        htmlFor: \"tab1\",\n        children: \"Shifts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"tab\",\n        id: \"tab2\",\n        className: \"tab tab--2\",\n        onChange: () => setActiveTab(\"tab2\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"tab_label\",\n        htmlFor: \"tab2\",\n        children: \"Shift Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"tab\",\n        id: \"tab3\",\n        className: \"tab tab--3\",\n        onChange: () => setActiveTab(\"tab3\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"tab_label\",\n        htmlFor: \"tab3\",\n        children: \"Cab Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"tab\",\n        id: \"tab4\",\n        className: \"tab tab--4\",\n        onChange: () => setActiveTab(\"tab4\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"tab_label\",\n        htmlFor: \"tab4\",\n        children: \"Clusters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === \"tab1\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shifts-calendar\",\n        children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddModalOpen(true),\n          className: \"add-shift-btn\",\n          children: \"Add Shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n          eventDidMount: info => {\n            const shiftId = info.event.id;\n\n            //event colorization\n            if (!shiftColorMap.current[shiftId]) {\n              const randomColor = shiftColorPool[Math.floor(Math.random() * shiftColorPool.length)];\n              shiftColorMap.current[shiftId] = randomColor;\n            }\n            const color = shiftColorMap.current[shiftId];\n            info.el.style.backgroundColor = color;\n            info.el.style.color = \"#fff\";\n            info.el.style.borderColor = color;\n\n            //glare\n            if (window.VanillaTilt && info.el) {\n              window.VanillaTilt.init(info.el, {\n                glare: true,\n                \"max-glare\": 0.3\n              });\n            }\n          },\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          initialView: \"timeGridWeek\",\n          slotDuration: \"08:00:00\",\n          slotLabelInterval: {\n            hours: 8\n          },\n          allDaySlot: false,\n          slotMinTime: \"00:00:00\",\n          slotMaxTime: \"24:00:00\",\n          events: shifts,\n          eventClick: handleEventClick,\n          slotLabelContent: slotLabelContent,\n          slotEventOverlap: false,\n          slotLaneContent: slotLaneContent,\n          headerToolbar: {\n            left: \"prev,next,today\",\n            center: \"title\",\n            right: \"timeGridDay,timeGridWeek,dayGridMonth\"\n          },\n          height: \"auto\",\n          eventOverlap: false,\n          dayMaxEventRows: true,\n          dayMaxEvents: true,\n          displayEventTime: false,\n          eventOrder: \"title\",\n          eventContent: arg => {\n            const titleParts = arg.event.title.split(\" - \");\n            const shiftTitle = titleParts[0];\n            const employeesRaw = titleParts[1] || \"\";\n            const employeeList = employeesRaw.split(\",\").map((name, index) => `<div>${index + 1}. ${name.trim()}</div>`).join(\"\");\n            return {\n              html: `<div style=\"padding: 2px;\">\n                <strong>${shiftTitle}</strong>\n                <div style=\"margin-top: 4px;\">${employeeList}</div>\n             </div>`\n            };\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }, this), activeTab === \"tab2\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Shift summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 34\n      }, this), activeTab === \"tab3\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Cab status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 34\n      }, this), activeTab === \"tab4\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clusters_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Select Cluster:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCluster,\n            onChange: e => setSelectedCluster(e.target.value),\n            className: \"cluster_picker\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose a Cluster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this), clusters.map(cluster => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cluster,\n              children: [\"Cluster \", cluster]\n            }, cluster, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 13\n        }, this), selectedCluster && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"cluster_table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  width: true,\n                  colSpan: \"2\",\n                  children: [\"Users in Cluster \", selectedCluster]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 23\n                }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 25\n                }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button\",\n                    onClick: () => handleDeleteUser(user.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 15\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add User to Cluster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            value: newUsername,\n            onChange: e => setNewUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Cluster Number\",\n            value: newUserCluster,\n            onChange: e => setNewUserCluster(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateUser,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shift Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 9\n      }, this), selectedShift && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Shift:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 19\n              }, this), \" \", selectedShift.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 19\n              }, this), \" \", new Date(selectedShift.start).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 19\n              }, this), \" \", new Date(selectedShift.end).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cab-status-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Cab Facility Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: cabStatusList.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"No cab data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 23\n                }, this) : cabStatusList.map(emp => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [emp.username, \" \\u2013 \", emp.cab_facility === \"Yes\" ? \"Yes\" : \"No\"]\n                }, emp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 17\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Edit Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editShiftDate,\n                onChange: e => setEditShiftDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Shift Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editShiftType,\n                onChange: e => setEditShiftType(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Morning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Evening\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Night\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Employee:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editEmployeeId,\n                onChange: e => setEditEmployeeId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 23\n                }, this), analysts.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: emp.id,\n                  children: emp.username\n                }, emp.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label1\",\n              children: \"Comments / Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this), cabStatusList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notes-selector-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedEmployeeForNotes,\n                onChange: e => {\n                  setSelectedEmployeeForNotes(e.target.value);\n                },\n                className: \"notes-employee-select\",\n                disabled: cabStatusList.length === 0,\n                children: cabStatusList.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: emp.username,\n                  children: [emp.username, \"'s Notes\", (user === null || user === void 0 ? void 0 : user.username) === emp.username ? \" (You)\" : \"\"]\n                }, emp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 21\n              }, this), employeeNotes[selectedEmployeeForNotes] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"last-updated\",\n                children: [\"Last updated: \", new Date().toLocaleString(), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-notes-message\",\n              children: \"No employees assigned to this shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"10\",\n              value: employeeNotes[selectedEmployeeForNotes] || \"\",\n              onChange: e => {\n                const newNotes = {\n                  ...employeeNotes\n                };\n                newNotes[selectedEmployeeForNotes] = e.target.value;\n                setEmployeeNotes(newNotes);\n              },\n              disabled: !isAdmin && (!isWithinShift() || (user === null || user === void 0 ? void 0 : user.username) !== selectedEmployeeForNotes),\n              className: !isAdmin && (user === null || user === void 0 ? void 0 : user.username) !== selectedEmployeeForNotes ? \"notes-textarea view-only\" : \"notes-textarea\",\n              spellCheck: \"false\",\n              placeholder: isAdmin ? \"Add or edit notes here...\" : isWithinShift() ? (user === null || user === void 0 ? void 0 : user.username) === selectedEmployeeForNotes ? \"Add or edit your notes here...\" : \"Viewing another employee's notes (read-only)\" : \"Notes can only be edited during shift time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 17\n            }, this), !isWithinShift() && !isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-disabled-message\",\n              children: \"\\u26A0\\uFE0F Note: Editing is only allowed during shift hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [isSaving && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"save-status saving\",\n            children: \"Saving...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 28\n          }, this), saveStatus.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `save-status ${saveStatus.success ? 'success' : 'error'}`,\n            children: saveStatus.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !isWithinShift() && !isAdmin || isSaving,\n            className: \"modal-btn save-btn\",\n            children: isSaving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 21\n              }, this), \" Saving...\"]\n            }, void 0, true) : 'Save Comments'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-wrapper-35\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"cabSwitch\",\n              className: \"switch\",\n              checked: cabOpted,\n              onChange: handleCabToggle,\n              disabled: !isUserInShift()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cabSwitch\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"switch-x-text\",\n                children: \"Cab is\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"switch-x-toggletext\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"switch-x-unchecked\",\n                  style: {\n                    color: \"red\"\n                  },\n                  children: \"Not Opted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 909,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"switch-x-checked\",\n                  style: {\n                    color: \"lime\"\n                  },\n                  children: \"Opted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 17\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditShift,\n              className: \"modal-btn edit-btn\",\n              children: \"Update Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteShift,\n              className: \"modal-btn delete-btn\",\n              children: \"Delete Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            className: \"modal-btn cancel-btn\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAddModalOpen,\n      onRequestClose: () => setIsAddModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"shift-date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"shift-date\",\n            value: newShiftDate,\n            onChange: e => setNewShiftDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"shift-type\",\n            children: \"Shift Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"shift-type\",\n            value: newShiftType,\n            onChange: e => setNewShiftType(e.target.value),\n            className: \"dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Morning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Evening\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Night\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Employees:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employees-checkboxes\",\n            children: analysts.map(emp => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"custom-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"dummy\",\n                id: `emp-${emp.id}`,\n                checked: selectedEmployees.includes(emp.username),\n                onChange: () => handleEmployeeToggle(emp.username)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 19\n              }, this), emp.username]\n            }, emp.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShift,\n          className: \"modal-btn save-btn\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddModalOpen(false),\n          className: \"modal-btn cancel-btn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 508,\n    columnNumber: 5\n  }, this);\n};\n_s(Roster, \"vJWGfAEoEpoE5yXDdJwS1+7rZ04=\", false, function () {\n  return [useAuth];\n});\n_c = Roster;\nexport default Roster;\nvar _c;\n$RefreshReg$(_c, \"Roster\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","shiftTimeMapping","Night","start","end","Morning","Evening","Roster","_s","user","isAdmin","role","cabStatusList","setCabStatusList","activeTab","setActiveTab","shifts","setShifts","selectedEmployeeForNotes","setSelectedEmployeeForNotes","employeeNotes","setEmployeeNotes","shiftColorMap","selectedShift","setSelectedShift","comment","setComment","isSaving","setIsSaving","saveStatus","setSaveStatus","success","message","commentsMap","setCommentsMap","isModalOpen","setIsModalOpen","isAddModalOpen","setIsAddModalOpen","newShiftDate","setNewShiftDate","newShiftType","setNewShiftType","selectedEmployees","setSelectedEmployees","analysts","setAnalysts","cabOpted","setCabOpted","editShiftType","setEditShiftType","editShiftDate","setEditShiftDate","editEmployeeId","setEditEmployeeId","clusters","setClusters","selectedCluster","setSelectedCluster","users","setUsers","newUsername","setNewUsername","newUserCluster","setNewUserCluster","shiftColorPool","isMountedRef","current","fetch","then","res","json","data","length","catch","err","console","error","fetchShifts","handleEmployeeToggle","username","prev","includes","filter","u","isUserInShift","some","emp","handleCabToggle","newCabOpted","method","headers","body","JSON","stringify","shift_id","id","employee_id","cab_facility","prevList","map","handleEventClick","info","shift","event","date","toISOString","slice","shiftType","title","firstEmp","split","matchedEmp","find","_cabData$find","_cabData$","cabResponse","ok","Error","cabData","currentUser","notesResponse","notesData","log","notesMap","forEach","note","employee","defaultEmployee","isWithinShift","now","Date","handleSave","noteToSave","response","notes","is_admin","errorData","timestamp","updatedNotes","e","refreshError","warn","handleAddShift","alert","startDateTime","endDate","setDate","getDate","endDateStr","endDateTime","selectedEmployeeObjects","start_datetime","end_datetime","employee_ids","shift_type","toLowerCase","handleEditShift","_analysts$find","shiftId","selectedUsername","isDuplicate","sameStart","getTime","sameEnd","sameEmployee","differentShift","String","result","handleDeleteShift","slotLabelContent","arg","getHours","slotLaneContent","hour","display","handleCreateUser","cluster","updated","handleDeleteUser","userId","className","children","type","name","defaultChecked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onClick","eventDidMount","randomColor","Math","floor","random","color","el","style","backgroundColor","borderColor","window","VanillaTilt","init","glare","plugins","initialView","slotDuration","slotLabelInterval","hours","allDaySlot","slotMinTime","slotMaxTime","events","eventClick","slotEventOverlap","headerToolbar","left","center","right","height","eventOverlap","dayMaxEventRows","dayMaxEvents","displayEventTime","eventOrder","eventContent","titleParts","shiftTitle","employeesRaw","employeeList","index","trim","join","html","value","target","width","colSpan","marginTop","placeholder","isOpen","onRequestClose","overlayClassName","toLocaleString","disabled","rows","newNotes","spellCheck","checked","_c","$RefreshReg$"],"sources":["C:/OfficeData/Projects/soc-portal/src/pages/Roster.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport Modal from \"react-modal\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/Roster.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst shiftTimeMapping = {\r\n  Night: { start: \"00:00\", end: \"08:00\" },\r\n  Morning: { start: \"08:00\", end: \"16:00\" },\r\n  Evening: { start: \"16:00\", end: \"00:00\" },\r\n};\r\n\r\nconst Roster = () => {\r\n  const { user } = useAuth();\r\n  const isAdmin = user?.role === \"admin\";\r\n  const [cabStatusList, setCabStatusList] = useState([]);\r\n  const [activeTab, setActiveTab] = useState(\"tab1\");\r\n  const [shifts, setShifts] = useState([]);\r\n  const [selectedEmployeeForNotes, setSelectedEmployeeForNotes] = useState(\"\");\r\n  const [employeeNotes, setEmployeeNotes] = useState({});\r\n  const shiftColorMap = useRef({});\r\n  const [selectedShift, setSelectedShift] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [saveStatus, setSaveStatus] = useState({ success: null, message: '' });\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\r\n  const [newShiftType, setNewShiftType] = useState(\"Night\");\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n  const [analysts, setAnalysts] = useState([]);\r\n  const [cabOpted, setCabOpted] = useState(false);\r\n  const [editShiftType, setEditShiftType] = useState(\"Night\");\r\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\r\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\r\n  const [clusters, setClusters] = useState([]);\r\n  const [selectedCluster, setSelectedCluster] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [newUserCluster, setNewUserCluster] = useState('');\r\n\r\n  const shiftColorPool = [\r\n    \"#061e48\", \"#260e20\", \"#081e2c\", \"#220024\", \"#002620\", \"#3d0000\", \"#001020\", \"#2c003e\",\r\n    \"#250a46\", \"#0d0d20\", \"#1d0652\", \"#180a19\", \"#460000\", \"#3e120e\", \"#320f0b\", \"#3c1410\",\r\n    \"#370a0a\", \"#461200\", \"#5c2007\", \"#502916\", \"#69340f\", \"#4e3206\", \"#46220a\", \"#3e2400\",\r\n    \"#382c00\", \"#332e0f\", \"#00202e\", \"#1c004c\", \"#1c0032\", \"#1f0330\", \"#091a12\", \"#0f151c\",\r\n    \"#061020\", \"#420516\", \"#0d0d17\", \"#04131a\", \"#20110c\", \"#0d1b2a\", \"#0e0e18\", \"#141c26\",\r\n    \"#0a1422\", \"#1f1024\", \"#0c1e1e\", \"#0e0e0e\", \"#001a33\", \"#101010\", \"#160e07\", \"#190a12\",\r\n    \"#08162c\", \"#16162a\", \"#150422\", \"#2e003e\", \"#000f1a\", \"#0e1316\", \"#001f3f\", \"#160a16\",\r\n    \"#460046\", \"#400020\", \"#4c1a33\", \"#381432\", \"#521535\", \"#3c0017\", \"#551a35\", \"#260701\",\r\n    \"#0c0c12\", \"#100e1b\", \"#1e1818\", \"#171720\", \"#0f0f18\", \"#111418\", \"#35013f\", \"#0d2617\"\r\n  ];\r\n\r\n\r\n\r\n\r\n  const isMountedRef = useRef(true);\r\n  useEffect(() => {\r\n    isMountedRef.current = true;\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setIsModalOpen(false);\r\n      setIsAddModalOpen(false);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/clusters\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setClusters(data);\r\n        if (data.length > 0) {\r\n          setSelectedCluster(data[0]);\r\n        }\r\n      })\r\n      .catch(err => console.error(\"Failed to fetch clusters:\", err));\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectedCluster) {\r\n      fetch(`http://localhost:5000/api/clusters/${selectedCluster}`)\r\n        .then(res => res.json())\r\n        .then(data => setUsers(data))\r\n        .catch(err => console.error(\"Failed to fetch users:\", err));\r\n    }\r\n  }, [selectedCluster]);\r\n\r\n\r\n  const fetchShifts = () => {\r\n    fetch(\"http://localhost:5000/api/shifts\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (isMountedRef.current) setShifts(data);\r\n      })\r\n      .catch((err) => {\r\n        if (isMountedRef.current) console.error(\"Failed to fetch shifts:\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShifts();\r\n    fetch(\"http://localhost:5000/api/analysts\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (isMountedRef.current) setAnalysts(data);\r\n      })\r\n      .catch((err) => {\r\n        if (isMountedRef.current) console.error(\"Failed to fetch analysts:\", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleEmployeeToggle = (username) => {\r\n    setSelectedEmployees((prev) =>\r\n      prev.includes(username) ? prev.filter((u) => u !== username) : [...prev, username]\r\n    );\r\n  };\r\n\r\n  const isUserInShift = () => {\r\n    return cabStatusList.some((emp) => emp.username === user?.username);\r\n  };\r\n\r\n  const handleCabToggle = async () => {\r\n    const newCabOpted = !cabOpted;\r\n    setCabOpted(newCabOpted);\r\n    try {\r\n      await fetch(`http://localhost:5000/api/update_cab_status`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: selectedShift.id,\r\n          employee_id: user.id,\r\n          cab_facility: newCabOpted ? \"Yes\" : \"No\",\r\n        }),\r\n      });\r\n      setCabStatusList(prevList =>\r\n        prevList.map(emp =>\r\n          emp.username === user.username\r\n            ? { ...emp, cab_facility: newCabOpted ? \"Yes\" : \"No\" }\r\n            : emp\r\n        )\r\n      );\r\n    } catch (err) {\r\n      if (isMountedRef.current) console.error(\"Failed to update cab status:\", err);\r\n    }\r\n  };\r\n\r\n  const handleEventClick = async (info) => {\r\n    const shift = info.event;\r\n    if (!isMountedRef.current) return;\r\n\r\n    setSelectedShift(shift);\r\n    setComment(commentsMap[shift.id] || \"\");\r\n\r\n    // Admin logic remains the same\r\n    if (isAdmin) {\r\n      const date = shift.start.toISOString().slice(0, 10);\r\n      let shiftType = \"Morning\";\r\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";\r\n      else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";\r\n      else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\r\n\r\n      const firstEmp = shift.title.split(\" - \")[0];\r\n      const matchedEmp = analysts.find((emp) => emp.username === firstEmp);\r\n\r\n      setEditShiftType(shiftType);\r\n      setEditShiftDate(date);\r\n      setEditEmployeeId(matchedEmp?.id || \"\");\r\n    }\r\n\r\n    try {\r\n      // 1. First fetch cab status (contains employee info)\r\n      const cabResponse = await fetch(`http://localhost:5000/api/shifts/${shift.id}/cab-status`);\r\n      if (!cabResponse.ok) throw new Error(\"Failed to fetch cab status\");\r\n      const cabData = await cabResponse.json();\r\n\r\n      if (!isMountedRef.current) return;\r\n\r\n      setCabStatusList(cabData);\r\n      if (!isAdmin && cabData.length > 0) {\r\n        const currentUser = cabData.find((emp) => emp.username === user.username);\r\n        setCabOpted(currentUser?.cab_facility === \"Yes\");\r\n      }\r\n\r\n      // 2. Then fetch notes for this shift\r\n      const notesResponse = await fetch(`http://localhost:5000/api/shifts/${shift.id}/notes`);\r\n      if (!notesResponse.ok) throw new Error(\"Failed to fetch notes\");\r\n      const notesData = await notesResponse.json();\r\n\r\n      // Debug logs to verify data\r\n      console.log(\"Cab Data:\", cabData);\r\n      console.log(\"Notes Data:\", notesData);\r\n\r\n      // Create mapping of username to note\r\n      const notesMap = {};\r\n      notesData.forEach(note => {\r\n        // Find the employee in cabData - using id from cab status that matches employee_id in notes\r\n        const employee = cabData.find(emp => emp.id === note.employee_id);\r\n        if (employee) {\r\n          notesMap[employee.username] = note.note;\r\n        }\r\n      });\r\n\r\n      console.log(\"Notes Map:\", notesMap); // Debug log\r\n      setEmployeeNotes(notesMap);\r\n\r\n      // Set default selected employee (current user if in shift, otherwise first employee)\r\n      const defaultEmployee = cabData.find(emp => emp.username === user?.username)?.username ||\r\n        (cabData[0]?.username || '');\r\n      setSelectedEmployeeForNotes(defaultEmployee);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching shift data:\", error);\r\n      if (isMountedRef.current) {\r\n        setCabStatusList([]);\r\n        setEmployeeNotes({});\r\n      }\r\n    }\r\n\r\n    if (isMountedRef.current) setIsModalOpen(true);\r\n  };\r\n\r\n  const isWithinShift = () => {\r\n    if (!selectedShift) return false;\r\n    const now = new Date();\r\n    const start = new Date(selectedShift.start);\r\n    const end = new Date(selectedShift.end);\r\n    return now >= start && now <= end;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!selectedShift || !selectedEmployeeForNotes) {\r\n      setSaveStatus({ success: false, message: \"No shift or employee selected\" });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsSaving(true);\r\n      setSaveStatus({ success: null, message: '' });\r\n\r\n      // Find the employee in the shift\r\n      const employee = cabStatusList.find(emp => emp.username === selectedEmployeeForNotes);\r\n      if (!employee && !isAdmin) {\r\n        throw new Error(\"You are not assigned to this shift\");\r\n      }\r\n\r\n      // Prepare the note content (handle empty strings)\r\n      const noteToSave = employeeNotes[selectedEmployeeForNotes] || \"\";\r\n\r\n      const response = await fetch(\"http://localhost:5000/api/save_notes\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: selectedShift.id,\r\n          employee_id: employee?.id, // Safe access with optional chaining\r\n          notes: noteToSave,\r\n          is_admin: isAdmin // Send admin status to backend\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.error || errorData.message || \"Failed to save notes\");\r\n      }\r\n\r\n      // Update local state with the saved note\r\n      setEmployeeNotes(prev => ({\r\n        ...prev,\r\n        [selectedEmployeeForNotes]: noteToSave\r\n      }));\r\n\r\n      setSaveStatus({\r\n        success: true,\r\n        message: \"Notes saved successfully!\",\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      // Refresh notes from server to ensure consistency\r\n      try {\r\n        const notesResponse = await fetch(`http://localhost:5000/api/shifts/${selectedShift.id}/notes`);\r\n        if (notesResponse.ok) {\r\n          const notesData = await notesResponse.json();\r\n          const updatedNotes = {};\r\n          notesData.forEach(note => {\r\n            const emp = cabStatusList.find(e => e.id === note.employee_id);\r\n            if (emp) updatedNotes[emp.username] = note.note;\r\n          });\r\n          setEmployeeNotes(updatedNotes);\r\n        }\r\n      } catch (refreshError) {\r\n        console.warn(\"Couldn't refresh notes:\", refreshError);\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(\"Error saving notes:\", err);\r\n      setSaveStatus({\r\n        success: false,\r\n        message: err.message || \"An unexpected error occurred\"\r\n      });\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddShift = async () => {\r\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\r\n      alert(\"Please fill all fields.\");\r\n      return;\r\n    }\r\n\r\n    const { start, end } = shiftTimeMapping[newShiftType];\r\n\r\n    const startDateTime = `${newShiftDate}T${start}:00`;\r\n\r\n    let endDate = new Date(newShiftDate);\r\n    if (end === \"00:00\") {\r\n      endDate.setDate(endDate.getDate() + 1);\r\n    }\r\n    const endDateStr = endDate.toISOString().split('T')[0];\r\n    const endDateTime = `${endDateStr}T${end}:00`;\r\n\r\n    const selectedEmployeeObjects = analysts.filter((emp) =>\r\n      selectedEmployees.includes(emp.username)\r\n    );\r\n\r\n    try {\r\n      for (let emp of selectedEmployeeObjects) {\r\n        const response = await fetch(\r\n          \"http://localhost:5000/api/create_shift\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              start_datetime: startDateTime,\r\n              end_datetime: endDateTime,\r\n              employee_ids: [emp.id],\r\n              shift_type: newShiftType.toLowerCase(),\r\n            }),\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          alert(\"Error: \" + data.error);\r\n          return;\r\n        }\r\n      }\r\n\r\n      fetchShifts();\r\n      alert(\"Shift(s) created successfully!\");\r\n    } catch (err) {\r\n      console.error(\"Failed to create shift:\", err);\r\n      alert(\"Failed to create shift. Check console for details.\");\r\n    }\r\n\r\n    setIsAddModalOpen(false);\r\n    setSelectedEmployees([]);\r\n  };\r\n\r\n\r\n  const handleEditShift = async () => {\r\n    try {\r\n      const shiftId = selectedShift.id;\r\n\r\n      const { start, end } = shiftTimeMapping[editShiftType];\r\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\r\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\r\n      if (end === \"00:00\") {\r\n        endDateTime.setDate(endDateTime.getDate() + 1);\r\n      }\r\n\r\n      const selectedUsername =\r\n        analysts.find((emp) => emp.id === editEmployeeId)?.username || \"\";\r\n\r\n      const isDuplicate = shifts.some((shift) => {\r\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\r\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\r\n        const sameEmployee = shift.title.includes(selectedUsername);\r\n        const differentShift = String(shift.id) !== String(shiftId);\r\n        return differentShift && sameStart && sameEnd && sameEmployee;\r\n      });\r\n\r\n      if (isDuplicate) {\r\n        alert(\"Another shift already exists in that slot!\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\"http://localhost:5000/api/edit_shift\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: shiftId,\r\n          date: editShiftDate,\r\n          shift_type: editShiftType.toLowerCase(),\r\n          employee_id: editEmployeeId,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n      fetchShifts();\r\n      setIsModalOpen(false);\r\n      alert(\"Shift updated successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to edit shift.\");\r\n    }\r\n  };\r\n  const handleDeleteShift = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/delete_shift\", {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ shift_id: selectedShift.id }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n      fetchShifts();\r\n      setIsModalOpen(false);\r\n      alert(\"Shift deleted successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to delete shift.\");\r\n    }\r\n  };\r\n\r\n  const slotLabelContent = (arg) => {\r\n    if (arg.date.getHours() === 0) return \"Night\";\r\n    if (arg.date.getHours() === 8) return \"Morning\";\r\n    if (arg.date.getHours() === 16) return \"Evening\";\r\n    return \"\";\r\n  };\r\n\r\n  const slotLaneContent = (arg) => {\r\n    const hour = arg.date.getHours();\r\n    if (hour !== 0 && hour !== 8 && hour !== 16) {\r\n      return { display: \"none\" };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleCreateUser = async () => {\r\n    if (!newUsername || !newUserCluster) {\r\n      alert(\"Please enter both username and cluster number.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/clusters\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username: newUsername, cluster: newUserCluster }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to create user\");\r\n\r\n      setNewUsername('');\r\n      setNewUserCluster('');\r\n      if (selectedCluster === newUserCluster) {\r\n        // Refresh users if the new user is in the selected cluster\r\n        const updated = await fetch(`http://localhost:5000/api/clusters/${newUserCluster}`);\r\n        const data = await updated.json();\r\n        setUsers(data);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error creating user:\", err);\r\n      alert(\"Failed to create user.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (userId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/clusters/${userId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to delete user\");\r\n\r\n      // Refresh users\r\n      const updated = await fetch(`http://localhost:5000/api/clusters/${selectedCluster}`);\r\n      const data = await updated.json();\r\n      setUsers(data);\r\n    } catch (err) {\r\n      console.error(\"Error deleting user:\", err);\r\n      alert(\"Failed to delete user.\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n\r\n      <div className=\"tab-container\">\r\n        <input type=\"radio\" name=\"tab\" id=\"tab1\" className=\"tab tab--1\" defaultChecked onChange={() => setActiveTab(\"tab1\")} />\r\n        <label className=\"tab_label\" htmlFor=\"tab1\">Shifts</label>\r\n\r\n        <input type=\"radio\" name=\"tab\" id=\"tab2\" className=\"tab tab--2\" onChange={() => setActiveTab(\"tab2\")} />\r\n        <label className=\"tab_label\" htmlFor=\"tab2\">Shift Summary</label>\r\n\r\n        <input type=\"radio\" name=\"tab\" id=\"tab3\" className=\"tab tab--3\" onChange={() => setActiveTab(\"tab3\")} />\r\n        <label className=\"tab_label\" htmlFor=\"tab3\">Cab Status</label>\r\n\r\n        <input type=\"radio\" name=\"tab\" id=\"tab4\" className=\"tab tab--4\" onChange={() => setActiveTab(\"tab4\")} />\r\n        <label className=\"tab_label\" htmlFor=\"tab4\">Clusters</label>\r\n\r\n        <div className=\"indicator\"></div>\r\n      </div>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === \"tab1\" &&\r\n          <div className=\"shifts-calendar\">\r\n            {isAdmin && (\r\n              <button\r\n                onClick={() => setIsAddModalOpen(true)}\r\n                className=\"add-shift-btn\"\r\n              >\r\n                Add Shift\r\n              </button>\r\n            )}\r\n            <FullCalendar\r\n              eventDidMount={(info) => {\r\n                const shiftId = info.event.id;\r\n\r\n\r\n                //event colorization\r\n                if (!shiftColorMap.current[shiftId]) {\r\n                  const randomColor = shiftColorPool[Math.floor(Math.random() * shiftColorPool.length)];\r\n                  shiftColorMap.current[shiftId] = randomColor;\r\n                }\r\n                const color = shiftColorMap.current[shiftId];\r\n                info.el.style.backgroundColor = color;\r\n                info.el.style.color = \"#fff\";\r\n                info.el.style.borderColor = color;\r\n\r\n\r\n                //glare\r\n                if (window.VanillaTilt && info.el) {\r\n                  window.VanillaTilt.init(info.el, {\r\n                    glare: true,\r\n                    \"max-glare\": 0.3,\r\n                  });\r\n                }\r\n              }}\r\n\r\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n              initialView=\"timeGridWeek\"\r\n              slotDuration=\"08:00:00\"\r\n              slotLabelInterval={{ hours: 8 }}\r\n              allDaySlot={false}\r\n              slotMinTime=\"00:00:00\"\r\n              slotMaxTime=\"24:00:00\"\r\n              events={shifts}\r\n              eventClick={handleEventClick}\r\n              slotLabelContent={slotLabelContent}\r\n              slotEventOverlap={false}\r\n              slotLaneContent={slotLaneContent}\r\n              headerToolbar={{\r\n                left: \"prev,next,today\",\r\n                center: \"title\",\r\n                right: \"timeGridDay,timeGridWeek,dayGridMonth\",\r\n              }}\r\n              height=\"auto\"\r\n              eventOverlap={false}\r\n              dayMaxEventRows={true}\r\n              dayMaxEvents={true}\r\n              displayEventTime={false}\r\n              eventOrder={\"title\"}\r\n              eventContent={(arg) => {\r\n                const titleParts = arg.event.title.split(\" - \");\r\n                const shiftTitle = titleParts[0];\r\n                const employeesRaw = titleParts[1] || \"\";\r\n                const employeeList = employeesRaw\r\n                  .split(\",\")\r\n                  .map((name, index) => `<div>${index + 1}. ${name.trim()}</div>`)\r\n                  .join(\"\");\r\n\r\n                return {\r\n                  html: `<div style=\"padding: 2px;\">\r\n                <strong>${shiftTitle}</strong>\r\n                <div style=\"margin-top: 4px;\">${employeeList}</div>\r\n             </div>`,\r\n                };\r\n              }}\r\n            />\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {activeTab === \"tab2\" && <div>Shift summary</div>}\r\n        {activeTab === \"tab3\" && <div>Cab status</div>}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {activeTab === \"tab4\" &&\r\n          <div className=\"clusters_wrapper\">\r\n            <p><strong>Select Cluster:</strong>\r\n              <select value={selectedCluster} onChange={e => setSelectedCluster(e.target.value)} className=\"cluster_picker\">\r\n                <option value=\"\">Choose a Cluster</option>\r\n                {clusters.map(cluster => (\r\n                  <option key={cluster} value={cluster}>\r\n                    Cluster {cluster}\r\n                  </option>\r\n                ))}\r\n              </select></p>\r\n\r\n            {selectedCluster && (\r\n              <div>\r\n                <table className=\"cluster_table\">\r\n                  <thead>\r\n                    <tr><th width colSpan=\"2\">Users in Cluster {selectedCluster}</th></tr>\r\n                    <tr>\r\n                      <th>Username</th>\r\n                      {isAdmin && <th>Action</th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {users.map((user, index) => (\r\n                      <tr key={index}>\r\n                        <td>{user.username}</td>\r\n                        {isAdmin && (\r\n                          <td>\r\n                            <button className=\"button\" onClick={() => handleDeleteUser(user.id)}>Delete</button>\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n\r\n            {isAdmin && (\r\n              <div style={{ marginTop: '20px' }}>\r\n                <h3>Add User to Cluster</h3>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  value={newUsername}\r\n                  onChange={(e) => setNewUsername(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Cluster Number\"\r\n                  value={newUserCluster}\r\n                  onChange={(e) => setNewUserCluster(e.target.value)}\r\n                />\r\n                <button onClick={handleCreateUser}>Create</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n        }\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Shift Details</h2>\r\n        {selectedShift && (\r\n          <>\r\n            <div className=\"modal-content\">\r\n              <div className=\"left-section\">\r\n                <p>\r\n                  <strong>Shift:</strong> {selectedShift.title}\r\n                </p>\r\n                <p>\r\n                  <strong>Start:</strong>{\" \"}\r\n                  {new Date(selectedShift.start).toLocaleString()}\r\n                </p>\r\n                <p>\r\n                  <strong>End:</strong>{\" \"}\r\n                  {new Date(selectedShift.end).toLocaleString()}\r\n                </p>\r\n\r\n                <div className=\"cab-status-list\">\r\n                  <h3>Cab Facility Status</h3>\r\n                  <ul>\r\n                    {cabStatusList.length === 0 ? (\r\n                      <li>No cab data available</li>\r\n                    ) : (\r\n                      cabStatusList.map((emp) => (\r\n                        <li key={emp.id}>\r\n                          {emp.username} – {emp.cab_facility === \"Yes\" ? \"Yes\" : \"No\"}\r\n                        </li>\r\n                      ))\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n\r\n                {isAdmin && (\r\n                  <>\r\n                    <h3>Edit Shift</h3>\r\n                    <label>Date:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={editShiftDate}\r\n                      onChange={(e) => setEditShiftDate(e.target.value)}\r\n                    />\r\n\r\n                    <label>Shift Type:</label>\r\n                    <select\r\n                      value={editShiftType}\r\n                      onChange={(e) => setEditShiftType(e.target.value)}\r\n                    >\r\n                      <option>Morning</option>\r\n                      <option>Evening</option>\r\n                      <option>Night</option>\r\n                    </select>\r\n\r\n                    <label>Employee:</label>\r\n                    <select\r\n                      value={editEmployeeId}\r\n                      onChange={(e) => setEditEmployeeId(e.target.value)}\r\n                    >\r\n                      <option value=\"\">Select employee</option>\r\n                      {analysts.map((emp) => (\r\n                        <option key={emp.id} value={emp.id}>\r\n                          {emp.username}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"right-section\">\r\n                <label className=\"label1\">Comments / Notes:</label>\r\n                {cabStatusList.length > 0 ? (\r\n                  <div className=\"notes-selector-container\">\r\n                    <select\r\n                      value={selectedEmployeeForNotes}\r\n                      onChange={(e) => {\r\n                        setSelectedEmployeeForNotes(e.target.value);\r\n                      }}\r\n                      className=\"notes-employee-select\"\r\n                      disabled={cabStatusList.length === 0}\r\n                    >\r\n                      {cabStatusList.map((emp) => (\r\n                        <option key={emp.id} value={emp.username}>\r\n                          {emp.username}'s Notes\r\n                          {user?.username === emp.username ? \" (You)\" : \"\"}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {employeeNotes[selectedEmployeeForNotes] && (\r\n                      <div className=\"last-updated\">\r\n                        Last updated: {new Date().toLocaleString()} {/* Replace with actual timestamp if available */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"no-notes-message\">No employees assigned to this shift</div>\r\n                )}\r\n\r\n                <textarea\r\n                  rows=\"10\"\r\n                  value={employeeNotes[selectedEmployeeForNotes] || \"\"}\r\n                  onChange={(e) => {\r\n                    const newNotes = { ...employeeNotes };\r\n                    newNotes[selectedEmployeeForNotes] = e.target.value;\r\n                    setEmployeeNotes(newNotes);\r\n                  }}\r\n                  disabled={\r\n                    !isAdmin &&\r\n                    (!isWithinShift() || user?.username !== selectedEmployeeForNotes)\r\n                  }\r\n                  className={\r\n                    !isAdmin && user?.username !== selectedEmployeeForNotes\r\n                      ? \"notes-textarea view-only\"\r\n                      : \"notes-textarea\"\r\n                  }\r\n                  spellCheck=\"false\"\r\n                  placeholder={\r\n                    isAdmin\r\n                      ? \"Add or edit notes here...\"\r\n                      : isWithinShift()\r\n                        ? user?.username === selectedEmployeeForNotes\r\n                          ? \"Add or edit your notes here...\"\r\n                          : \"Viewing another employee's notes (read-only)\"\r\n                        : \"Notes can only be edited during shift time\"\r\n                  }\r\n                />\r\n\r\n                {!isWithinShift() && !isAdmin && (\r\n                  <div className=\"edit-disabled-message\">\r\n                    ⚠️ Note: Editing is only allowed during shift hours\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"modal-buttons\">\r\n              {isSaving && <div className=\"save-status saving\">Saving...</div>}\r\n              {saveStatus.message && (\r\n                <div className={`save-status ${saveStatus.success ? 'success' : 'error'}`}>\r\n                  {saveStatus.message}\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                onClick={handleSave}\r\n                disabled={(!isWithinShift() && !isAdmin) || isSaving}\r\n                className=\"modal-btn save-btn\"\r\n              >\r\n                {isSaving ? (\r\n                  <>\r\n                    <span className=\"spinner\"></span> Saving...\r\n                  </>\r\n                ) : (\r\n                  'Save Comments'\r\n                )}\r\n              </button>\r\n\r\n              {!isAdmin && (\r\n                <div className=\"checkbox-wrapper-35\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"cabSwitch\"\r\n                    className=\"switch\"\r\n                    checked={cabOpted}\r\n                    onChange={handleCabToggle}\r\n                    disabled={!isUserInShift()}\r\n                  />\r\n                  <label htmlFor=\"cabSwitch\">\r\n                    <span className=\"switch-x-text\">Cab is</span>\r\n                    <span className=\"switch-x-toggletext\">\r\n                      <span className=\"switch-x-unchecked\" style={{ color: \"red\" }}>\r\n                        Not Opted\r\n                      </span>\r\n                      <span className=\"switch-x-checked\" style={{ color: \"lime\" }}>\r\n                        Opted\r\n                      </span>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              )}\r\n\r\n              {isAdmin && (\r\n                <>\r\n                  <button onClick={handleEditShift} className=\"modal-btn edit-btn\">\r\n                    Update Shift\r\n                  </button>\r\n                  <button onClick={handleDeleteShift} className=\"modal-btn delete-btn\">\r\n                    Delete Shift\r\n                  </button>\r\n                </>\r\n              )}\r\n\r\n              <button\r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"modal-btn cancel-btn\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onRequestClose={() => setIsAddModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Create New Shift</h2>\r\n        <div className=\"modal-content-wrapper\">\r\n          <div className=\"left-div\">\r\n            <label htmlFor=\"shift-date\">Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"shift-date\"\r\n              value={newShiftDate}\r\n              onChange={(e) => setNewShiftDate(e.target.value)}\r\n            />\r\n\r\n            <label htmlFor=\"shift-type\">Shift Type:</label>\r\n            <select\r\n              id=\"shift-type\"\r\n              value={newShiftType}\r\n              onChange={(e) => setNewShiftType(e.target.value)}\r\n              className=\"dropdown\"\r\n            >\r\n              <option>Morning</option>\r\n              <option>Evening</option>\r\n              <option>Night</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"right-div\">\r\n            <label>Select Employees:</label>\r\n            <div className=\"employees-checkboxes\">\r\n              {analysts.map((emp) => (\r\n                <label key={emp.id} className=\"custom-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"dummy\"\r\n                    id={`emp-${emp.id}`}\r\n                    checked={selectedEmployees.includes(emp.username)}\r\n                    onChange={() => handleEmployeeToggle(emp.username)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                  {emp.username}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-buttons\">\r\n          <button onClick={handleAddShift} className=\"modal-btn save-btn\">\r\n            Create\r\n          </button>\r\n          <button onClick={() => setIsAddModalOpen(false)} className=\"modal-btn cancel-btn\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roster;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}