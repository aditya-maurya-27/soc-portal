{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Projectone\\\\Desktop\\\\cloud\\\\soc-portal\\\\src\\\\pages\\\\Shifts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/Shifts.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst shiftTimeMapping = {\n  Morning: {\n    start: \"08:00\",\n    end: \"16:00\"\n  },\n  Evening: {\n    start: \"16:00\",\n    end: \"24:00\"\n  },\n  Night: {\n    start: \"00:00\",\n    end: \"08:00\"\n  }\n};\nconst Shifts = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  const [shifts, setShifts] = useState([]);\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const [commentsMap, setCommentsMap] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\n  const [newShiftType, setNewShiftType] = useState(\"Morning\");\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const [analysts, setAnalysts] = useState([]);\n  const [editShiftType, setEditShiftType] = useState(\"Morning\");\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\n  const calendarRef = useRef(null);\n  useEffect(() => {\n    fetch(\"http://192.168.1.49:5000/api/shifts\").then(res => res.json()).then(data => setShifts(data)).catch(err => console.error(\"Failed to fetch shifts:\", err));\n    fetch(\"http://192.168.1.49:5000/api/analysts\").then(res => res.json()).then(data => setAnalysts(data)).catch(err => console.error(\"Failed to fetch analysts:\", err));\n  }, []);\n  useEffect(() => {\n    var _calendarRef$current;\n    const calendar = (_calendarRef$current = calendarRef.current) === null || _calendarRef$current === void 0 ? void 0 : _calendarRef$current.getApi();\n    if (calendar) {\n      calendar.on(\"datesSet\", () => {\n        const slots = document.querySelectorAll(\".fc-timegrid-slot\");\n        slots.forEach((slot, index) => {\n          if (index % 3 === 0) slot.classList.add(\"shift-night\");else if (index % 3 === 1) slot.classList.add(\"shift-morning\");else if (index % 3 === 2) slot.classList.add(\"shift-evening\");\n        });\n      });\n    }\n  }, []);\n  const handleEmployeeToggle = username => {\n    setSelectedEmployees(prev => prev.includes(username) ? prev.filter(u => u !== username) : [...prev, username]);\n  };\n  const handleEventClick = info => {\n    const shift = info.event;\n    setSelectedShift(shift);\n    setComment(commentsMap[shift.id] || \"\");\n    if (isAdmin) {\n      const date = shift.start.toISOString().slice(0, 10);\n      let shiftType = \"Morning\";\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\n      const firstEmp = shift.title.split(\" - \")[0].split(\", \")[0];\n      const matchedEmp = analysts.find(emp => emp.username === firstEmp);\n      setEditShiftType(shiftType);\n      setEditShiftDate(date);\n      setEditEmployeeId((matchedEmp === null || matchedEmp === void 0 ? void 0 : matchedEmp.id) || \"\");\n    }\n    setIsModalOpen(true);\n  };\n  const isWithinShift = () => {\n    if (!selectedShift) return false;\n    const now = new Date();\n    const start = new Date(selectedShift.start);\n    const end = new Date(selectedShift.end);\n    return now >= start && now <= end;\n  };\n  const handleSave = () => {\n    if (selectedShift) {\n      setCommentsMap(prev => ({\n        ...prev,\n        [selectedShift.id]: comment\n      }));\n    }\n    setIsModalOpen(false);\n  };\n  const handleAddShift = async () => {\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\n      alert(\"Please fill all fields.\");\n      return;\n    }\n    const {\n      start,\n      end\n    } = shiftTimeMapping[newShiftType];\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\n    if (end === \"00:00\") {\n      endDateTime.setDate(endDateTime.getDate() + 1);\n    }\n    const usernames = selectedEmployees.join(\", \");\n    const isDuplicate = shifts.some(shift => new Date(shift.start).getTime() === startDateTime.getTime() && new Date(shift.end).getTime() === endDateTime.getTime() && shift.title === `${usernames} - ${newShiftType}`);\n    if (isDuplicate) {\n      alert(\"This shift already exists with selected employees.\");\n      return;\n    }\n    try {\n      const employeeIds = analysts.filter(emp => selectedEmployees.includes(emp.username)).map(emp => emp.id);\n      const response = await fetch(\"http://192.168.1.49:5000/api/create_shift\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          date: newShiftDate,\n          shift_type: newShiftType.toLowerCase(),\n          employee_ids: employeeIds\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + data.error);\n        return;\n      }\n      const newShiftEvent = {\n        title: usernames + \" - \" + newShiftType,\n        start: startDateTime.toISOString(),\n        end: endDateTime.toISOString(),\n        id: data.shift_id\n      };\n      setShifts(prev => [...prev, newShiftEvent]);\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to create shift.\");\n    }\n    setIsAddModalOpen(false);\n    setSelectedEmployees([]);\n    alert(\"Shift created successfully!\");\n  };\n  const handleEditShift = async () => {\n    try {\n      var _analysts$find2;\n      const shiftId = selectedShift.id;\n      const {\n        start,\n        end\n      } = shiftTimeMapping[editShiftType];\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\n      if (end === \"00:00\") {\n        endDateTime.setDate(endDateTime.getDate() + 1);\n      }\n      const isDuplicate = shifts.some(shift => {\n        var _analysts$find;\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\n        const selectedUsername = ((_analysts$find = analysts.find(emp => emp.id === editEmployeeId)) === null || _analysts$find === void 0 ? void 0 : _analysts$find.username) || \"\";\n        const sameEmployee = shift.title.includes(selectedUsername);\n        const differentShift = String(shift.id) !== String(shiftId);\n        return differentShift && sameStart && sameEnd && sameEmployee;\n      });\n      if (isDuplicate) {\n        alert(\"Another shift already exists in that slot!\");\n        return;\n      }\n      const response = await fetch(\"http://192.168.1.49:5000/api/edit_shift\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: shiftId,\n          date: editShiftDate,\n          shift_type: editShiftType.toLowerCase(),\n          employee_id: editEmployeeId\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      const newUsername = ((_analysts$find2 = analysts.find(emp => emp.id === editEmployeeId)) === null || _analysts$find2 === void 0 ? void 0 : _analysts$find2.username) || selectedShift.title.split(\" - \")[0];\n      const updatedShifts = shifts.map(shift => shift.id === shiftId ? {\n        ...shift,\n        title: newUsername + \" - \" + editShiftType,\n        start: startDateTime.toISOString(),\n        end: endDateTime.toISOString()\n      } : shift);\n      setShifts(updatedShifts);\n      setIsModalOpen(false);\n      alert(\"Shift updated successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to edit shift.\");\n    }\n  };\n  const handleDeleteShift = async () => {\n    try {\n      const response = await fetch(\"http://192.168.1.49:5000/api/delete_shift\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      setShifts(prev => prev.filter(shift => shift.id !== selectedShift.id));\n      setIsModalOpen(false);\n      alert(\"Shift deleted successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to delete shift.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shifts-wrapper\",\n    children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsAddModalOpen(true),\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: \"Add Shift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shifts-calendar\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin],\n        allDaySlot: false,\n        initialView: \"timeGridWeek\",\n        slotDuration: \"24:00\",\n        slotMinTime: \"00:00:00\",\n        slotMaxTime: \"24:00:00\",\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"timeGridDay,timeGridWeek,dayGridMonth\"\n        },\n        events: shifts,\n        editable: false,\n        height: \"auto\",\n        eventClick: handleEventClick,\n        eventDidMount: info => {\n          info.el.setAttribute(\"title\", info.event.title);\n        },\n        eventContent: arg => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-event-content\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: arg.event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this);\n        },\n        slotLabelContent: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Shift (Admin)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Shift Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editShiftType,\n          onChange: e => setEditShiftType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Morning\",\n            children: \"Morning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Evening\",\n            children: \"Evening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Night\",\n            children: \"Night\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: editShiftDate,\n          onChange: e => setEditShiftDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reassign to:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editEmployeeId,\n          onChange: e => setEditEmployeeId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Employee --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), analysts.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: emp.id,\n            children: emp.username\n          }, emp.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditShift,\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteShift,\n            style: {\n              marginRight: \"10px\",\n              backgroundColor: \"red\",\n              color: \"white\"\n            },\n            children: \"Delete Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analyst Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 10,\n          cols: 60,\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          disabled: !isWithinShift()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !isWithinShift(),\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), !isWithinShift() && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            marginTop: \"10px\"\n          },\n          children: \"You can only edit comments during your shift time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAddModalOpen,\n      onRequestClose: () => setIsAddModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Employees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          maxHeight: \"150px\",\n          overflowY: \"scroll\"\n        },\n        children: analysts.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedEmployees.includes(emp.username),\n            onChange: () => handleEmployeeToggle(emp.username)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: \"8px\"\n            },\n            children: emp.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Shift Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newShiftType,\n        onChange: e => setNewShiftType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Morning\",\n          children: \"Morning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Evening\",\n          children: \"Evening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Night\",\n          children: \"Night\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newShiftDate,\n        onChange: e => setNewShiftDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShift,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Add Shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(Shifts, \"VEz4NRtk0rjCPghDKzLigik2byU=\", false, function () {\n  return [useAuth];\n});\n_c = Shifts;\nexport default Shifts;\nvar _c;\n$RefreshReg$(_c, \"Shifts\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","shiftTimeMapping","Morning","start","end","Evening","Night","Shifts","_s","user","isAdmin","role","shifts","setShifts","selectedShift","setSelectedShift","comment","setComment","commentsMap","setCommentsMap","isModalOpen","setIsModalOpen","isAddModalOpen","setIsAddModalOpen","newShiftDate","setNewShiftDate","newShiftType","setNewShiftType","selectedEmployees","setSelectedEmployees","analysts","setAnalysts","editShiftType","setEditShiftType","editShiftDate","setEditShiftDate","editEmployeeId","setEditEmployeeId","calendarRef","fetch","then","res","json","data","catch","err","console","error","_calendarRef$current","calendar","current","getApi","on","slots","document","querySelectorAll","forEach","slot","index","classList","add","handleEmployeeToggle","username","prev","includes","filter","u","handleEventClick","info","shift","event","id","date","toISOString","slice","shiftType","title","firstEmp","split","matchedEmp","find","emp","isWithinShift","now","Date","handleSave","handleAddShift","length","alert","startDateTime","endDateTime","setDate","getDate","usernames","join","isDuplicate","some","getTime","employeeIds","map","response","method","headers","body","JSON","stringify","shift_type","toLowerCase","employee_ids","ok","newShiftEvent","shift_id","handleEditShift","_analysts$find2","shiftId","_analysts$find","sameStart","sameEnd","selectedUsername","sameEmployee","differentShift","String","employee_id","result","newUsername","updatedShifts","handleDeleteShift","className","children","onClick","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","plugins","allDaySlot","initialView","slotDuration","slotMinTime","slotMaxTime","headerToolbar","left","center","right","events","editable","height","eventClick","eventDidMount","el","setAttribute","eventContent","arg","slotLabelContent","isOpen","onRequestClose","overlayClassName","value","onChange","e","target","type","marginTop","marginRight","backgroundColor","color","rows","cols","disabled","border","padding","maxHeight","overflowY","checked","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Projectone/Desktop/cloud/soc-portal/src/pages/Shifts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport Modal from \"react-modal\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/Shifts.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst shiftTimeMapping = {\r\n  Morning: { start: \"08:00\", end: \"16:00\" },\r\n  Evening: { start: \"16:00\", end: \"24:00\" },\r\n  Night: { start: \"00:00\", end: \"08:00\" },\r\n};\r\n\r\nconst Shifts = () => {\r\n  const { user } = useAuth();\r\n  const isAdmin = user?.role === \"admin\";\r\n\r\n  const [shifts, setShifts] = useState([]);\r\n  const [selectedShift, setSelectedShift] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\r\n  const [newShiftType, setNewShiftType] = useState(\"Morning\");\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n  const [analysts, setAnalysts] = useState([]);\r\n\r\n  const [editShiftType, setEditShiftType] = useState(\"Morning\");\r\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\r\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\r\n\r\n  const calendarRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.49:5000/api/shifts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setShifts(data))\r\n      .catch((err) => console.error(\"Failed to fetch shifts:\", err));\r\n\r\n    fetch(\"http://192.168.1.49:5000/api/analysts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAnalysts(data))\r\n      .catch((err) => console.error(\"Failed to fetch analysts:\", err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const calendar = calendarRef.current?.getApi();\r\n    if (calendar) {\r\n      calendar.on(\"datesSet\", () => {\r\n        const slots = document.querySelectorAll(\".fc-timegrid-slot\");\r\n        slots.forEach((slot, index) => {\r\n          if (index % 3 === 0) slot.classList.add(\"shift-night\");\r\n          else if (index % 3 === 1) slot.classList.add(\"shift-morning\");\r\n          else if (index % 3 === 2) slot.classList.add(\"shift-evening\");\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleEmployeeToggle = (username) => {\r\n    setSelectedEmployees((prev) =>\r\n      prev.includes(username)\r\n        ? prev.filter((u) => u !== username)\r\n        : [...prev, username]\r\n    );\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const shift = info.event;\r\n    setSelectedShift(shift);\r\n    setComment(commentsMap[shift.id] || \"\");\r\n\r\n    if (isAdmin) {\r\n      const date = shift.start.toISOString().slice(0, 10);\r\n      let shiftType = \"Morning\";\r\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";\r\n      else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";\r\n      else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\r\n\r\n      const firstEmp = shift.title.split(\" - \")[0].split(\", \")[0];\r\n      const matchedEmp = analysts.find((emp) => emp.username === firstEmp);\r\n\r\n      setEditShiftType(shiftType);\r\n      setEditShiftDate(date);\r\n      setEditEmployeeId(matchedEmp?.id || \"\");\r\n    }\r\n\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const isWithinShift = () => {\r\n    if (!selectedShift) return false;\r\n    const now = new Date();\r\n    const start = new Date(selectedShift.start);\r\n    const end = new Date(selectedShift.end);\r\n    return now >= start && now <= end;\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedShift) {\r\n      setCommentsMap((prev) => ({\r\n        ...prev,\r\n        [selectedShift.id]: comment,\r\n      }));\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleAddShift = async () => {\r\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\r\n      alert(\"Please fill all fields.\");\r\n      return;\r\n    }\r\n\r\n    const { start, end } = shiftTimeMapping[newShiftType];\r\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\r\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\r\n    if (end === \"00:00\") {\r\n      endDateTime.setDate(endDateTime.getDate() + 1);\r\n    }\r\n\r\n    const usernames = selectedEmployees.join(\", \");\r\n\r\n    const isDuplicate = shifts.some(\r\n      (shift) =>\r\n        new Date(shift.start).getTime() === startDateTime.getTime() &&\r\n        new Date(shift.end).getTime() === endDateTime.getTime() &&\r\n        shift.title === `${usernames} - ${newShiftType}`\r\n    );\r\n\r\n    if (isDuplicate) {\r\n      alert(\"This shift already exists with selected employees.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const employeeIds = analysts\r\n        .filter((emp) => selectedEmployees.includes(emp.username))\r\n        .map((emp) => emp.id);\r\n\r\n      const response = await fetch(\"http://192.168.1.49:5000/api/create_shift\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          date: newShiftDate,\r\n          shift_type: newShiftType.toLowerCase(),\r\n          employee_ids: employeeIds,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + data.error);\r\n        return;\r\n      }\r\n\r\n      const newShiftEvent = {\r\n        title: usernames + \" - \" + newShiftType,\r\n        start: startDateTime.toISOString(),\r\n        end: endDateTime.toISOString(),\r\n        id: data.shift_id,\r\n      };\r\n\r\n      setShifts((prev) => [...prev, newShiftEvent]);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to create shift.\");\r\n    }\r\n\r\n    setIsAddModalOpen(false);\r\n    setSelectedEmployees([]);\r\n    alert(\"Shift created successfully!\");\r\n  };\r\n\r\n  const handleEditShift = async () => {\r\n    try {\r\n      const shiftId = selectedShift.id;\r\n\r\n      const { start, end } = shiftTimeMapping[editShiftType];\r\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\r\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\r\n      if (end === \"00:00\") {\r\n        endDateTime.setDate(endDateTime.getDate() + 1);\r\n      }\r\n\r\n      const isDuplicate = shifts.some((shift) => {\r\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\r\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\r\n        const selectedUsername = analysts.find((emp) => emp.id === editEmployeeId)?.username || \"\";\r\n        const sameEmployee = shift.title.includes(selectedUsername);\r\n        const differentShift = String(shift.id) !== String(shiftId);\r\n        return differentShift && sameStart && sameEnd && sameEmployee;\r\n      });\r\n\r\n      if (isDuplicate) {\r\n        alert(\"Another shift already exists in that slot!\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\"http://192.168.1.49:5000/api/edit_shift\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: shiftId,\r\n          date: editShiftDate,\r\n          shift_type: editShiftType.toLowerCase(),\r\n          employee_id: editEmployeeId,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n\r\n      const newUsername =\r\n        analysts.find((emp) => emp.id === editEmployeeId)?.username ||\r\n        selectedShift.title.split(\" - \")[0];\r\n\r\n      const updatedShifts = shifts.map((shift) =>\r\n        shift.id === shiftId\r\n          ? {\r\n              ...shift,\r\n              title: newUsername + \" - \" + editShiftType,\r\n              start: startDateTime.toISOString(),\r\n              end: endDateTime.toISOString(),\r\n            }\r\n          : shift\r\n      );\r\n\r\n      setShifts(updatedShifts);\r\n      setIsModalOpen(false);\r\n      alert(\"Shift updated successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to edit shift.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteShift = async () => {\r\n    try {\r\n      const response = await fetch(\"http://192.168.1.49:5000/api/delete_shift\", {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ shift_id: selectedShift.id }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n\r\n      setShifts((prev) => prev.filter((shift) => shift.id !== selectedShift.id));\r\n      setIsModalOpen(false);\r\n      alert(\"Shift deleted successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to delete shift.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"shifts-wrapper\">\r\n      {isAdmin && (\r\n        <button onClick={() => setIsAddModalOpen(true)} style={{ marginBottom: \"10px\" }}>\r\n          Add Shift\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"shifts-calendar\">\r\n        <FullCalendar\r\n          ref={calendarRef}\r\n          plugins={[interactionPlugin, dayGridPlugin, timeGridPlugin]}\r\n          allDaySlot={false}\r\n          initialView=\"timeGridWeek\"\r\n          slotDuration=\"24:00\"\r\n          slotMinTime=\"00:00:00\"\r\n          slotMaxTime=\"24:00:00\"\r\n          headerToolbar={{\r\n            left: \"prev,next today\",\r\n            center: \"title\",\r\n            right: \"timeGridDay,timeGridWeek,dayGridMonth\",\r\n          }}\r\n          events={shifts}\r\n          editable={false}\r\n          height=\"auto\"\r\n          eventClick={handleEventClick}\r\n          eventDidMount={(info) => {\r\n            info.el.setAttribute(\"title\", info.event.title);\r\n          }}\r\n          eventContent={(arg) => {\r\n            return (\r\n              <div className=\"custom-event-content\">\r\n                <b>{arg.event.title}</b>\r\n              </div>\r\n            );\r\n          }}\r\n          slotLabelContent={() => null}\r\n        />\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        {isAdmin ? (\r\n          <>\r\n            <h2>Edit Shift (Admin)</h2>\r\n            <label>Shift Type:</label>\r\n            <select value={editShiftType} onChange={(e) => setEditShiftType(e.target.value)}>\r\n              <option value=\"Morning\">Morning</option>\r\n              <option value=\"Evening\">Evening</option>\r\n              <option value=\"Night\">Night</option>\r\n            </select>\r\n\r\n            <label>Date:</label>\r\n            <input type=\"date\" value={editShiftDate} onChange={(e) => setEditShiftDate(e.target.value)} />\r\n\r\n            <label>Reassign to:</label>\r\n            <select value={editEmployeeId} onChange={(e) => setEditEmployeeId(e.target.value)}>\r\n              <option value=\"\">-- Select Employee --</option>\r\n              {analysts.map((emp) => (\r\n                <option key={emp.id} value={emp.id}>\r\n                  {emp.username}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <button onClick={handleEditShift} style={{ marginRight: \"10px\" }}>\r\n                Save Changes\r\n              </button>\r\n              <button\r\n                onClick={handleDeleteShift}\r\n                style={{ marginRight: \"10px\", backgroundColor: \"red\", color: \"white\" }}\r\n              >\r\n                Delete Shift\r\n              </button>\r\n              <button onClick={() => setIsModalOpen(false)}>Cancel</button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>Analyst Comments</h2>\r\n            <textarea\r\n              rows={10}\r\n              cols={60}\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n              disabled={!isWithinShift()}\r\n            />\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <button onClick={handleSave} disabled={!isWithinShift()} style={{ marginRight: \"10px\" }}>\r\n                Save\r\n              </button>\r\n              <button onClick={() => setIsModalOpen(false)}>Close</button>\r\n            </div>\r\n            {!isWithinShift() && (\r\n              <p style={{ color: \"red\", marginTop: \"10px\" }}>\r\n                You can only edit comments during your shift time.\r\n              </p>\r\n            )}\r\n          </>\r\n        )}\r\n      </Modal>\r\n\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onRequestClose={() => setIsAddModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Create Shift</h2>\r\n\r\n        <label>Select Employees:</label>\r\n        <div style={{ border: \"1px solid #ccc\", padding: \"10px\", maxHeight: \"150px\", overflowY: \"scroll\" }}>\r\n          {analysts.map((emp) => (\r\n            <div key={emp.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedEmployees.includes(emp.username)}\r\n                onChange={() => handleEmployeeToggle(emp.username)}\r\n              />\r\n              <label style={{ marginLeft: \"8px\" }}>{emp.username}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <label>Shift Type:</label>\r\n        <select value={newShiftType} onChange={(e) => setNewShiftType(e.target.value)}>\r\n          <option value=\"Morning\">Morning</option>\r\n          <option value=\"Evening\">Evening</option>\r\n          <option value=\"Night\">Night</option>\r\n        </select>\r\n\r\n        <label>Date:</label>\r\n        <input type=\"date\" value={newShiftDate} onChange={(e) => setNewShiftDate(e.target.value)} />\r\n\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <button onClick={handleAddShift} style={{ marginRight: \"10px\" }}>\r\n            Add Shift\r\n          </button>\r\n          <button onClick={() => setIsAddModalOpen(false)}>Cancel</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shifts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}