{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Projectone\\\\Desktop\\\\Grant Thorntan Portals\\\\soc-portal\\\\src\\\\pages\\\\Shifts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/Shifts.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst shiftTimeMapping = {\n  Morning: {\n    start: \"08:00\",\n    end: \"16:00\"\n  },\n  Evening: {\n    start: \"16:00\",\n    end: \"23:00\"\n  },\n  Night: {\n    start: \"00:00\",\n    end: \"08:00\"\n  }\n};\nconst capitalize = s => s && s[0].toUpperCase() + s.slice(1);\nconst Shifts = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  const [shifts, setShifts] = useState([]);\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const [commentsMap, setCommentsMap] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\n  const [newShiftType, setNewShiftType] = useState(\"Morning\");\n  const [newEmployeeUsername, setNewEmployeeUsername] = useState(\"\");\n  const [analysts, setAnalysts] = useState([]);\n  const [editShiftType, setEditShiftType] = useState(\"Morning\");\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://192.168.1.49:5000/api/shifts\").then(res => res.json()).then(data => setShifts(data)).catch(err => console.error(\"Failed to fetch shifts:\", err));\n    fetch(\"http://192.168.1.49:5000/api/analysts\").then(res => res.json()).then(data => setAnalysts(data)).catch(err => console.error(\"Failed to fetch analysts:\", err));\n  }, []);\n  const handleEventClick = info => {\n    const shift = info.event;\n    setSelectedShift(shift);\n    setComment(commentsMap[shift.id] || \"\");\n    if (isAdmin) {\n      const date = shift.start.toISOString().slice(0, 10);\n      let shiftType = \"Morning\";\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\n      const employeeName = shift.title.split(\" - \")[0];\n      const matchedEmp = analysts.find(emp => emp.username === employeeName);\n      setEditShiftType(shiftType);\n      setEditShiftDate(date);\n      setEditEmployeeId((matchedEmp === null || matchedEmp === void 0 ? void 0 : matchedEmp.id) || \"\");\n    }\n    setIsModalOpen(true);\n  };\n  const isWithinShift = () => {\n    if (!selectedShift) return false;\n    const now = new Date();\n    const start = new Date(selectedShift.start);\n    const end = new Date(selectedShift.end);\n    return now >= start && now <= end;\n  };\n  const handleSave = () => {\n    if (selectedShift) {\n      setCommentsMap(prev => ({\n        ...prev,\n        [selectedShift.id]: comment\n      }));\n    }\n    setIsModalOpen(false);\n  };\n  const handleAddShift = async () => {\n    if (!newEmployeeUsername || !newShiftDate || !newShiftType) {\n      alert(\"Please fill all fields.\");\n      return;\n    }\n    const selectedAnalyst = analysts.find(emp => emp.username === newEmployeeUsername);\n    if (!selectedAnalyst) {\n      alert(\"Invalid employee selected.\");\n      return;\n    }\n    const shiftType = newShiftType.toLowerCase();\n    const employeeId = selectedAnalyst.id;\n\n    // Build shift timing\n    const {\n      start,\n      end\n    } = shiftTimeMapping[newShiftType];\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\n    if (end === \"00:00\") {\n      endDateTime.setDate(endDateTime.getDate() + 1);\n    }\n\n    // ðŸ›‘ Check for duplicates\n    const isDuplicate = shifts.some(shift => new Date(shift.start).getTime() === startDateTime.getTime() && new Date(shift.end).getTime() === endDateTime.getTime());\n    if (isDuplicate) {\n      alert(\"A shift already exists at this time.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://192.168.1.49:5000/api/create_shift\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          date: newShiftDate,\n          shift_type: shiftType,\n          employee_id: employeeId\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + data.error);\n        return;\n      }\n      const newShiftEvent = {\n        title: newEmployeeUsername + \" - \" + newShiftType,\n        start: startDateTime.toISOString(),\n        end: endDateTime.toISOString(),\n        id: data.shift_id\n      };\n      setShifts(prev => [...prev, newShiftEvent]);\n      setIsAddModalOpen(false);\n      alert(\"Shift created successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to create shift.\");\n    }\n  };\n  const handleEditShift = async () => {\n    try {\n      var _analysts$find2;\n      const shiftId = selectedShift.id;\n      const {\n        start,\n        end\n      } = shiftTimeMapping[editShiftType];\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\n      if (end === \"00:00\") {\n        endDateTime.setDate(endDateTime.getDate() + 1);\n      }\n\n      // âœ… Ignore the current shift in duplicate check\n      const isDuplicate = shifts.some(shift => {\n        var _analysts$find;\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\n        const selectedUsername = ((_analysts$find = analysts.find(emp => emp.id === editEmployeeId)) === null || _analysts$find === void 0 ? void 0 : _analysts$find.username) || \"\";\n        const sameEmployee = shift.title.startsWith(selectedUsername);\n        const differentShift = String(shift.id) !== String(shiftId); // ðŸ”‘ Ensure same type\n\n        return differentShift && sameStart && sameEnd && sameEmployee;\n      });\n      if (isDuplicate) {\n        alert(\"Another shift already exists in the \");\n        return;\n      }\n      const response = await fetch(\"http://192.168.1.49:5000/api/edit_shift\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: shiftId,\n          date: editShiftDate,\n          shift_type: editShiftType.toLowerCase(),\n          employee_id: editEmployeeId\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      const newUsername = ((_analysts$find2 = analysts.find(emp => emp.id === editEmployeeId)) === null || _analysts$find2 === void 0 ? void 0 : _analysts$find2.username) || selectedShift.title.split(\" - \")[0];\n      const updatedShifts = shifts.map(shift => shift.id === shiftId ? {\n        ...shift,\n        title: newUsername + \" - \" + editShiftType,\n        start: startDateTime.toISOString(),\n        end: endDateTime.toISOString()\n      } : shift);\n      setShifts(updatedShifts);\n      setIsModalOpen(false);\n      alert(\"Shift updated successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to edit shift.\");\n    }\n  };\n  const handleDeleteShift = async () => {\n    try {\n      const response = await fetch(\"http://192.168.1.49:5000/api/delete_shift\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      setShifts(prev => prev.filter(shift => shift.id !== selectedShift.id));\n      setIsModalOpen(false);\n      alert(\"Shift deleted successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to delete shift.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shifts-wrapper\",\n    children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsAddModalOpen(true),\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: \"Add Shift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shifts-calendar\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin],\n        allDaySlot: false,\n        initialView: \"timeGridWeek\",\n        slotMinTime: \"00:00:00\",\n        slotMaxTime: \"24:00:00\",\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"timeGridDay,timeGridWeek,dayGridMonth\"\n        },\n        events: shifts,\n        editable: false,\n        height: \"auto\",\n        eventClick: handleEventClick,\n        eventDidMount: info => {\n          info.el.setAttribute(\"title\", info.event.title);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Shift Details\",\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Shift (Admin)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Shift Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editShiftType,\n          onChange: e => setEditShiftType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Morning\",\n            children: \"Morning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Evening\",\n            children: \"Evening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Night\",\n            children: \"Night\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: editShiftDate,\n          onChange: e => setEditShiftDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reassign to:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editEmployeeId,\n          onChange: e => setEditEmployeeId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Employee --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), analysts.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: emp.id,\n            children: emp.username\n          }, emp.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditShift,\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteShift,\n            style: {\n              marginRight: \"10px\",\n              backgroundColor: \"red\",\n              color: \"white\"\n            },\n            children: \"Delete Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Analyst Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 10,\n          cols: 60,\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          disabled: !isWithinShift()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !isWithinShift(),\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), !isWithinShift() && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            marginTop: \"10px\"\n          },\n          children: \"You can only edit comments during your shift time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAddModalOpen,\n      onRequestClose: () => setIsAddModalOpen(false),\n      contentLabel: \"Add Shift\",\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Employee (Username):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newEmployeeUsername,\n        onChange: e => setNewEmployeeUsername(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Employee --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), analysts.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: emp.username,\n          children: emp.username\n        }, emp.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Shift Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newShiftType,\n        onChange: e => setNewShiftType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Morning\",\n          children: \"Morning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Evening\",\n          children: \"Evening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Night\",\n          children: \"Night\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newShiftDate,\n        onChange: e => setNewShiftDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShift,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Add Shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(Shifts, \"RpFEO39L2VBIq3PNvzlQXMiVM2U=\", false, function () {\n  return [useAuth];\n});\n_c = Shifts;\nexport default Shifts;\nvar _c;\n$RefreshReg$(_c, \"Shifts\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","shiftTimeMapping","Morning","start","end","Evening","Night","capitalize","s","toUpperCase","slice","Shifts","_s","user","isAdmin","role","shifts","setShifts","selectedShift","setSelectedShift","comment","setComment","commentsMap","setCommentsMap","isModalOpen","setIsModalOpen","isAddModalOpen","setIsAddModalOpen","newShiftDate","setNewShiftDate","newShiftType","setNewShiftType","newEmployeeUsername","setNewEmployeeUsername","analysts","setAnalysts","editShiftType","setEditShiftType","editShiftDate","setEditShiftDate","editEmployeeId","setEditEmployeeId","fetch","then","res","json","data","catch","err","console","error","handleEventClick","info","shift","event","id","date","toISOString","shiftType","title","includes","employeeName","split","matchedEmp","find","emp","username","isWithinShift","now","Date","handleSave","prev","handleAddShift","alert","selectedAnalyst","toLowerCase","employeeId","startDateTime","endDateTime","setDate","getDate","isDuplicate","some","getTime","response","method","headers","body","JSON","stringify","shift_type","employee_id","ok","newShiftEvent","shift_id","handleEditShift","_analysts$find2","shiftId","_analysts$find","sameStart","sameEnd","selectedUsername","sameEmployee","startsWith","differentShift","String","result","newUsername","updatedShifts","map","handleDeleteShift","filter","className","children","onClick","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","plugins","allDaySlot","initialView","slotMinTime","slotMaxTime","headerToolbar","left","center","right","events","editable","height","eventClick","eventDidMount","el","setAttribute","isOpen","onRequestClose","contentLabel","overlayClassName","value","onChange","e","target","type","marginTop","marginRight","backgroundColor","color","rows","cols","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Projectone/Desktop/Grant Thorntan Portals/soc-portal/src/pages/Shifts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport Modal from \"react-modal\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/Shifts.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst shiftTimeMapping = {\r\n  Morning: { start: \"08:00\", end: \"16:00\" },\r\n  Evening: { start: \"16:00\", end: \"23:00\" },\r\n  Night: { start: \"00:00\", end: \"08:00\" },\r\n};\r\n\r\nconst capitalize = (s) => s && s[0].toUpperCase() + s.slice(1);\r\n\r\nconst Shifts = () => {\r\n  const { user } = useAuth();\r\n  const isAdmin = user?.role === \"admin\";\r\n\r\n  const [shifts, setShifts] = useState([]);\r\n  const [selectedShift, setSelectedShift] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\r\n  const [newShiftType, setNewShiftType] = useState(\"Morning\");\r\n  const [newEmployeeUsername, setNewEmployeeUsername] = useState(\"\");\r\n  const [analysts, setAnalysts] = useState([]);\r\n\r\n  const [editShiftType, setEditShiftType] = useState(\"Morning\");\r\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\r\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://192.168.1.49:5000/api/shifts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setShifts(data))\r\n      .catch((err) => console.error(\"Failed to fetch shifts:\", err));\r\n\r\n    fetch(\"http://192.168.1.49:5000/api/analysts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAnalysts(data))\r\n      .catch((err) => console.error(\"Failed to fetch analysts:\", err));\r\n  }, []);\r\n\r\n  const handleEventClick = (info) => {\r\n    const shift = info.event;\r\n    setSelectedShift(shift);\r\n    setComment(commentsMap[shift.id] || \"\");\r\n\r\n    if (isAdmin) {\r\n      const date = shift.start.toISOString().slice(0, 10);\r\n      let shiftType = \"Morning\";\r\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";\r\n      else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";\r\n      else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\r\n\r\n      const employeeName = shift.title.split(\" - \")[0];\r\n      const matchedEmp = analysts.find((emp) => emp.username === employeeName);\r\n\r\n      setEditShiftType(shiftType);\r\n      setEditShiftDate(date);\r\n      setEditEmployeeId(matchedEmp?.id || \"\");\r\n    }\r\n\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const isWithinShift = () => {\r\n    if (!selectedShift) return false;\r\n    const now = new Date();\r\n    const start = new Date(selectedShift.start);\r\n    const end = new Date(selectedShift.end);\r\n    return now >= start && now <= end;\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedShift) {\r\n      setCommentsMap((prev) => ({\r\n        ...prev,\r\n        [selectedShift.id]: comment,\r\n      }));\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleAddShift = async () => {\r\n    if (!newEmployeeUsername || !newShiftDate || !newShiftType) {\r\n      alert(\"Please fill all fields.\");\r\n      return;\r\n    }\r\n\r\n    const selectedAnalyst = analysts.find(\r\n      (emp) => emp.username === newEmployeeUsername\r\n    );\r\n\r\n    if (!selectedAnalyst) {\r\n      alert(\"Invalid employee selected.\");\r\n      return;\r\n    }\r\n\r\n    const shiftType = newShiftType.toLowerCase();\r\n    const employeeId = selectedAnalyst.id;\r\n\r\n    // Build shift timing\r\n    const { start, end } = shiftTimeMapping[newShiftType];\r\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\r\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\r\n    if (end === \"00:00\") {\r\n      endDateTime.setDate(endDateTime.getDate() + 1);\r\n    }\r\n\r\n    // ðŸ›‘ Check for duplicates\r\n    const isDuplicate = shifts.some(\r\n      (shift) =>\r\n        new Date(shift.start).getTime() === startDateTime.getTime() &&\r\n        new Date(shift.end).getTime() === endDateTime.getTime()\r\n    );\r\n\r\n    if (isDuplicate) {\r\n      alert(\"A shift already exists at this time.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://192.168.1.49:5000/api/create_shift\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            date: newShiftDate,\r\n            shift_type: shiftType,\r\n            employee_id: employeeId,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + data.error);\r\n        return;\r\n      }\r\n\r\n      const newShiftEvent = {\r\n        title: newEmployeeUsername + \" - \" + newShiftType,\r\n        start: startDateTime.toISOString(),\r\n        end: endDateTime.toISOString(),\r\n        id: data.shift_id,\r\n      };\r\n\r\n      setShifts((prev) => [...prev, newShiftEvent]);\r\n      setIsAddModalOpen(false);\r\n      alert(\"Shift created successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to create shift.\");\r\n    }\r\n  };\r\n\r\n  const handleEditShift = async () => {\r\n    try {\r\n      const shiftId = selectedShift.id;\r\n  \r\n      const { start, end } = shiftTimeMapping[editShiftType];\r\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\r\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\r\n      if (end === \"00:00\") {\r\n        endDateTime.setDate(endDateTime.getDate() + 1);\r\n      }\r\n  \r\n      // âœ… Ignore the current shift in duplicate check\r\n      const isDuplicate = shifts.some((shift) => {\r\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\r\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\r\n      \r\n        const selectedUsername = analysts.find((emp) => emp.id === editEmployeeId)?.username || \"\";\r\n        const sameEmployee = shift.title.startsWith(selectedUsername);\r\n      \r\n        const differentShift = String(shift.id) !== String(shiftId); // ðŸ”‘ Ensure same type\r\n      \r\n        return differentShift && sameStart && sameEnd && sameEmployee;\r\n      });\r\n      \r\n      if (isDuplicate) {\r\n        alert(\"Another shift already exists in the \");\r\n        return;\r\n      }\r\n  \r\n      const response = await fetch(\"http://192.168.1.49:5000/api/edit_shift\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: shiftId,\r\n          date: editShiftDate,\r\n          shift_type: editShiftType.toLowerCase(),\r\n          employee_id: editEmployeeId,\r\n        }),\r\n      });\r\n  \r\n      const result = await response.json();\r\n  \r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n  \r\n      const newUsername =\r\n        analysts.find((emp) => emp.id === editEmployeeId)?.username ||\r\n        selectedShift.title.split(\" - \")[0];\r\n  \r\n      const updatedShifts = shifts.map((shift) =>\r\n        shift.id === shiftId\r\n          ? {\r\n              ...shift,\r\n              title: newUsername + \" - \" + editShiftType,\r\n              start: startDateTime.toISOString(),\r\n              end: endDateTime.toISOString(),\r\n            }\r\n          : shift\r\n      );\r\n  \r\n      setShifts(updatedShifts);\r\n      setIsModalOpen(false);\r\n      alert(\"Shift updated successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to edit shift.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDeleteShift = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://192.168.1.49:5000/api/delete_shift\",\r\n        {\r\n          method: \"DELETE\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ shift_id: selectedShift.id }),\r\n        }\r\n      );\r\n\r\n      const result = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n\r\n      setShifts((prev) => prev.filter((shift) => shift.id !== selectedShift.id));\r\n      setIsModalOpen(false);\r\n      alert(\"Shift deleted successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to delete shift.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"shifts-wrapper\">\r\n      {isAdmin && (\r\n        <button\r\n          onClick={() => setIsAddModalOpen(true)}\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Add Shift\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"shifts-calendar\">\r\n        <FullCalendar\r\n          plugins={[interactionPlugin, dayGridPlugin, timeGridPlugin]}\r\n          allDaySlot={false}\r\n          initialView=\"timeGridWeek\"\r\n          slotMinTime=\"00:00:00\"\r\n          slotMaxTime=\"24:00:00\"\r\n          headerToolbar={{\r\n            left: \"prev,next today\",\r\n            center: \"title\",\r\n            right: \"timeGridDay,timeGridWeek,dayGridMonth\",\r\n          }}\r\n          events={shifts}\r\n          editable={false}\r\n          height=\"auto\"\r\n          eventClick={handleEventClick}\r\n          eventDidMount={(info) => {\r\n            info.el.setAttribute(\"title\", info.event.title);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Edit Shift Modal */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        contentLabel=\"Shift Details\"\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        {isAdmin ? (\r\n          <>\r\n            <h2>Edit Shift (Admin)</h2>\r\n            <label>Shift Type:</label>\r\n            <select\r\n              value={editShiftType}\r\n              onChange={(e) => setEditShiftType(e.target.value)}\r\n            >\r\n              <option value=\"Morning\">Morning</option>\r\n              <option value=\"Evening\">Evening</option>\r\n              <option value=\"Night\">Night</option>\r\n            </select>\r\n\r\n            <label>Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              value={editShiftDate}\r\n              onChange={(e) => setEditShiftDate(e.target.value)}\r\n            />\r\n\r\n            <label>Reassign to:</label>\r\n            <select\r\n              value={editEmployeeId}\r\n              onChange={(e) => setEditEmployeeId(e.target.value)}\r\n            >\r\n              <option value=\"\">-- Select Employee --</option>\r\n              {analysts.map((emp) => (\r\n                <option key={emp.id} value={emp.id}>\r\n                  {emp.username}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <button onClick={handleEditShift} style={{ marginRight: \"10px\" }}>\r\n                Save Changes\r\n              </button>\r\n              <button\r\n                onClick={handleDeleteShift}\r\n                style={{ marginRight: \"10px\", backgroundColor: \"red\", color: \"white\" }}\r\n              >\r\n                Delete Shift\r\n              </button>\r\n              <button onClick={() => setIsModalOpen(false)}>Cancel</button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>Analyst Comments</h2>\r\n            <textarea\r\n              rows={10}\r\n              cols={60}\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n              disabled={!isWithinShift()}\r\n            />\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <button\r\n                onClick={handleSave}\r\n                disabled={!isWithinShift()}\r\n                style={{ marginRight: \"10px\" }}\r\n              >\r\n                Save\r\n              </button>\r\n              <button onClick={() => setIsModalOpen(false)}>Close</button>\r\n            </div>\r\n            {!isWithinShift() && (\r\n              <p style={{ color: \"red\", marginTop: \"10px\" }}>\r\n                You can only edit comments during your shift time.\r\n              </p>\r\n            )}\r\n          </>\r\n        )}\r\n      </Modal>\r\n\r\n      {/* Add Shift Modal */}\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onRequestClose={() => setIsAddModalOpen(false)}\r\n        contentLabel=\"Add Shift\"\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Create Shift</h2>\r\n        <label>Employee (Username):</label>\r\n        <select\r\n          value={newEmployeeUsername}\r\n          onChange={(e) => setNewEmployeeUsername(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select Employee --</option>\r\n          {analysts.map((emp) => (\r\n            <option key={emp.id} value={emp.username}>\r\n              {emp.username}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label>Shift Type:</label>\r\n        <select\r\n          value={newShiftType}\r\n          onChange={(e) => setNewShiftType(e.target.value)}\r\n        >\r\n          <option value=\"Morning\">Morning</option>\r\n          <option value=\"Evening\">Evening</option>\r\n          <option value=\"Night\">Night</option>\r\n        </select>\r\n\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={newShiftDate}\r\n          onChange={(e) => setNewShiftDate(e.target.value)}\r\n        />\r\n\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <button onClick={handleAddShift} style={{ marginRight: \"10px\" }}>\r\n            Add Shift\r\n          </button>\r\n          <button onClick={() => setIsAddModalOpen(false)}>Cancel</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shifts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}