{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Portal\\\\soc-portal\\\\src\\\\pages\\\\Shifts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/Shifts.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst shiftTimeMapping = {\n  Night: {\n    start: \"00:00\",\n    end: \"08:00\"\n  },\n  Morning: {\n    start: \"08:00\",\n    end: \"16:00\"\n  },\n  Evening: {\n    start: \"16:00\",\n    end: \"24:00\"\n  }\n};\nconst Shifts = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  const [cabStatusList, setCabStatusList] = useState([]);\n  const [shifts, setShifts] = useState([]);\n  const [selectedEmployeeForNotes, setSelectedEmployeeForNotes] = useState(\"\");\n  const [employeeNotes, setEmployeeNotes] = useState({});\n  const shiftColorMap = useRef({});\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const [commentsMap, setCommentsMap] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\n  const [newShiftType, setNewShiftType] = useState(\"Night\");\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const [analysts, setAnalysts] = useState([]);\n  const [cabOpted, setCabOpted] = useState(false);\n  const [editShiftType, setEditShiftType] = useState(\"Night\");\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\n  const shiftColorPool = [\"#0b3d91\",\n  // dark azure blue\n  \"#4b1d3f\",\n  // deep plum\n  \"#0f3b57\",\n  // midnight teal\n  \"#440047\",\n  // deep grape\n  \"#004d40\",\n  // deep teal\n  \"#3d0000\",\n  // deep maroon\n  \"#00203f\",\n  // dark navy\n  \"#2c003e\",\n  // dark purple\n  \"#4a148c\",\n  // indigo\n  \"#1a1a40\",\n  // navy black\n  \"#3a0ca3\",\n  // royal violet\n  \"#311432\",\n  // raisin black\n  \"#8B0000\",\n  // dark red\n  \"#7B241C\",\n  // deep crimson\n  \"#641E16\",\n  // dark cherry\n  \"#78281F\",\n  // wine red\n  \"#6E1414\",\n  // roasted red\n  \"#8B2500\",\n  // burnt orange\n  \"#B7410E\",\n  // rust\n  \"#A0522D\",\n  // sienna brown\n  \"#D2691E\",\n  // chocolate orange\n  \"#9C640C\",\n  // golden bronze\n  \"#8B4513\",\n  // saddle brown\n  \"#7C4700\",\n  // caramel burnt\n  \"#705700\",\n  // muddy gold\n  \"#665D1E\",\n  // dark mustard\n  \"#003f5c\",\n  // deep ocean blue\n  \"#390099\",\n  // vibrant purple\n  \"#1c0032\",\n  // dark violet\n  \"#3e065f\",\n  // cosmic purple\n  \"#123524\",\n  // pine green\n  \"#1e2a38\",\n  // shadow slate\n  \"#0c1f3f\",\n  // indigo night\n  \"#420516\",\n  // merlot\n  \"#1a1a2e\",\n  // deep blue-gray\n  \"#092635\",\n  // arctic navy\n  \"#402218\",\n  // dark brown\n  \"#0d1b2a\",\n  // dark sea navy\n  \"#1b1b2f\",\n  // gothic gray\n  \"#27374d\",\n  // dusty night blue\n  \"#132743\",\n  // midnight steel\n  \"#3e1f47\",\n  // mulberry\n  \"#183D3D\",\n  // sea moss\n  \"#1c1c1c\",\n  // nearly black\n  \"#003366\",\n  // classic navy\n  \"#212121\",\n  // pitch black\n  \"#2b1d0e\",\n  // earthy brown\n  \"#321325\",\n  // shadow magenta\n  \"#102c57\",\n  // blue slate\n  \"#2c2c54\",\n  // dusk purple\n  \"#2a0944\",\n  // grape skin\n  \"#2e003e\",\n  // plum pit\n  \"#000f1a\",\n  // true deep blue\n  \"#1b262c\",\n  // blue-black\n  \"#001f3f\",\n  // abyss blue\n  \"#2d132c\",\n  // noir rose\n  \"#8B008B\",\n  // Dark Magenta\n  \"#800040\",\n  // Deep Rose\n  \"#993366\",\n  // Dusky Pink\n  \"#702963\",\n  // Byzantium\n  \"#A52A6A\",\n  // Rose Red\n  \"#78002E\",\n  // Dark Raspberry\n  \"#AA336A\",\n  // Vintage Pink\n  \"#260701\",\n  // ember coal\n  \"#191825\",\n  // nightfall\n  \"#1f1d36\",\n  // dark orchid\n  \"#3b2f2f\",\n  // cocoa ash\n  \"#2e2e40\",\n  // grayish indigo\n  \"#1e1e2f\",\n  // subdued navy\n  \"#222831\",\n  // graphite\n  \"#35013f\",\n  // strong plum\n  \"#1A4D2E\" // deep forest green\n  ];\n  const isMountedRef = useRef(true);\n  useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (!user) {\n      setIsModalOpen(false);\n      setIsAddModalOpen(false);\n    }\n  }, [user]);\n  const fetchShifts = () => {\n    fetch(\"http://192.168.29.194:5000/api/shifts\").then(res => res.json()).then(data => {\n      if (isMountedRef.current) setShifts(data);\n    }).catch(err => {\n      if (isMountedRef.current) console.error(\"Failed to fetch shifts:\", err);\n    });\n  };\n  useEffect(() => {\n    fetchShifts();\n    fetch(\"http://192.168.29.194:5000/api/analysts\").then(res => res.json()).then(data => {\n      if (isMountedRef.current) setAnalysts(data);\n    }).catch(err => {\n      if (isMountedRef.current) console.error(\"Failed to fetch analysts:\", err);\n    });\n  }, []);\n  const handleEmployeeToggle = username => {\n    setSelectedEmployees(prev => prev.includes(username) ? prev.filter(u => u !== username) : [...prev, username]);\n  };\n  const isUserInShift = () => {\n    return cabStatusList.some(emp => emp.username === (user === null || user === void 0 ? void 0 : user.username));\n  };\n  const handleCabToggle = async () => {\n    const newCabOpted = !cabOpted;\n    setCabOpted(newCabOpted);\n    try {\n      await fetch(`http://192.168.29.194:5000/api/update_cab_status`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id,\n          employee_id: user.id,\n          cab_facility: newCabOpted ? \"Yes\" : \"No\"\n        })\n      });\n      setCabStatusList(prevList => prevList.map(emp => emp.username === user.username ? {\n        ...emp,\n        cab_facility: newCabOpted ? \"Yes\" : \"No\"\n      } : emp));\n    } catch (err) {\n      if (isMountedRef.current) console.error(\"Failed to update cab status:\", err);\n    }\n  };\n  const handleEventClick = async info => {\n    const shift = info.event;\n    if (!isMountedRef.current) return;\n    setSelectedShift(shift);\n    setComment(commentsMap[shift.id] || \"\");\n    if (isAdmin) {\n      const date = shift.start.toISOString().slice(0, 10);\n      let shiftType = \"Morning\";\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\n      const firstEmp = shift.title.split(\" - \")[0];\n      const matchedEmp = analysts.find(emp => emp.username === firstEmp);\n      setEditShiftType(shiftType);\n      setEditShiftDate(date);\n      setEditEmployeeId((matchedEmp === null || matchedEmp === void 0 ? void 0 : matchedEmp.id) || \"\");\n    }\n    try {\n      const response = await fetch(`http://192.168.29.194:5000/api/shifts/${shift.id}/cab-status`);\n      if (!response.ok) throw new Error(\"Failed to fetch cab status\");\n      const data = await response.json();\n      if (isMountedRef.current) {\n        setCabStatusList(data);\n        if (!isAdmin && data.length > 0) {\n          const currentUser = data.find(emp => emp.username === user.username);\n          setCabOpted((currentUser === null || currentUser === void 0 ? void 0 : currentUser.cab_facility) === \"Yes\");\n        }\n      }\n    } catch (error) {\n      if (isMountedRef.current) {\n        console.error(\"Error fetching cab status:\", error);\n        setCabStatusList([]);\n      }\n    }\n    try {\n      // Fetch notes for this shift\n      const notesResponse = await fetch(`http://192.168.29.194:5000/api/shifts/${shift.id}/notes`);\n      if (notesResponse.ok) {\n        const notesData = await notesResponse.json();\n        const notesMap = {};\n        notesData.forEach(note => {\n          notesMap[note.employee_id] = note.notes;\n        });\n        setEmployeeNotes(notesMap);\n      }\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n\n    // Set the first employee as default selection\n    if (cabStatusList.length > 0) {\n      setSelectedEmployeeForNotes(cabStatusList[0].username);\n    }\n    if (isMountedRef.current) setIsModalOpen(true);\n  };\n  const isWithinShift = () => {\n    if (!selectedShift) return false;\n    const now = new Date();\n    const start = new Date(selectedShift.start);\n    const end = new Date(selectedShift.end);\n    return now >= start && now <= end;\n  };\n  const handleSave = () => {\n    if (selectedShift) {\n      setCommentsMap(prev => ({\n        ...prev,\n        [selectedShift.id]: comment\n      }));\n    }\n    setIsModalOpen(false);\n  };\n  const handleAddShift = async () => {\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\n      alert(\"Please fill all fields.\");\n      return;\n    }\n    const {\n      start,\n      end\n    } = shiftTimeMapping[newShiftType];\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\n    if (end === \"00:00\") {\n      endDateTime.setDate(endDateTime.getDate() + 1);\n    }\n    const selectedEmployeeObjects = analysts.filter(emp => selectedEmployees.includes(emp.username));\n    try {\n      for (let emp of selectedEmployeeObjects) {\n        const response = await fetch(\"http://192.168.29.194:5000/api/create_shift\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: newShiftDate,\n            shift_type: newShiftType.toLowerCase(),\n            employee_ids: [emp.id]\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          alert(\"Error: \" + data.error);\n          return;\n        }\n      }\n      fetchShifts();\n      alert(\"Shift(s) created successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to create shift.\");\n    }\n    setIsAddModalOpen(false);\n    setSelectedEmployees([]);\n  };\n  const handleEditShift = async () => {\n    try {\n      var _analysts$find;\n      const shiftId = selectedShift.id;\n      const {\n        start,\n        end\n      } = shiftTimeMapping[editShiftType];\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\n      if (end === \"00:00\") {\n        endDateTime.setDate(endDateTime.getDate() + 1);\n      }\n      const selectedUsername = ((_analysts$find = analysts.find(emp => emp.id === editEmployeeId)) === null || _analysts$find === void 0 ? void 0 : _analysts$find.username) || \"\";\n      const isDuplicate = shifts.some(shift => {\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\n        const sameEmployee = shift.title.includes(selectedUsername);\n        const differentShift = String(shift.id) !== String(shiftId);\n        return differentShift && sameStart && sameEnd && sameEmployee;\n      });\n      if (isDuplicate) {\n        alert(\"Another shift already exists in that slot!\");\n        return;\n      }\n      const response = await fetch(\"http://192.168.29.194:5000/api/edit_shift\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: shiftId,\n          date: editShiftDate,\n          shift_type: editShiftType.toLowerCase(),\n          employee_id: editEmployeeId\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      fetchShifts();\n      setIsModalOpen(false);\n      alert(\"Shift updated successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to edit shift.\");\n    }\n  };\n  const handleDeleteShift = async () => {\n    try {\n      const response = await fetch(\"http://192.168.29.194:5000/api/delete_shift\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      fetchShifts();\n      setIsModalOpen(false);\n      alert(\"Shift deleted successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to delete shift.\");\n    }\n  };\n  const slotLabelContent = arg => {\n    if (arg.date.getHours() === 0) return \"Night\";\n    if (arg.date.getHours() === 8) return \"Morning\";\n    if (arg.date.getHours() === 16) return \"Evening\";\n    return \"\";\n  };\n  const slotLaneContent = arg => {\n    const hour = arg.date.getHours();\n    if (hour !== 0 && hour !== 8 && hour !== 16) {\n      return {\n        display: \"none\"\n      };\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shifts-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shifts-calendar\",\n      children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsAddModalOpen(true),\n        className: \"add-shift-btn\",\n        children: \"Create Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        eventDidMount: info => {\n          const shiftId = info.event.id;\n\n          /*\r\n          // Assign color to shift\r\n          if (!shiftColorMap.current[shiftId]) {\r\n            const randomColor = shiftColorPool[Math.floor(Math.random() * shiftColorPool.length)];\r\n            shiftColorMap.current[shiftId] = randomColor;\r\n          }\r\n          const color = shiftColorMap.current[shiftId];\r\n          info.el.style.backgroundColor = color;\r\n          info.el.style.color = \"#fff\";\r\n          info.el.style.borderColor = color;\r\n          */\n\n          //glare effect\n          if (window.VanillaTilt && info.el) {\n            window.VanillaTilt.init(info.el, {\n              glare: true,\n              \"max-glare\": 0.3\n            });\n          }\n        },\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        slotDuration: \"08:00:00\",\n        slotLabelInterval: {\n          hours: 8\n        },\n        allDaySlot: false,\n        slotMinTime: \"00:00:00\",\n        slotMaxTime: \"24:00:00\",\n        events: shifts,\n        eventClick: handleEventClick,\n        slotLabelContent: slotLabelContent,\n        slotEventOverlap: false,\n        slotLaneContent: slotLaneContent,\n        headerToolbar: {\n          left: \"prev,next,today\",\n          center: \"title\",\n          right: \"timeGridDay,timeGridWeek,dayGridMonth\"\n        },\n        height: \"auto\",\n        eventOverlap: false,\n        dayMaxEventRows: true,\n        dayMaxEvents: true,\n        displayEventTime: false,\n        eventOrder: \"title\",\n        eventContent: arg => {\n          const titleParts = arg.event.title.split(\" - \");\n          const shiftTitle = titleParts[0];\n          const employeesRaw = titleParts[1] || \"\";\n          const employeeList = employeesRaw.split(\",\").map((name, index) => `<div>${index + 1}. ${name.trim()}</div>`).join(\"\");\n          return {\n            html: `<div style=\"padding: 2px;\">\n                <strong>${shiftTitle}</strong>\n                <div style=\"margin-top: 4px;\">${employeeList}</div>\n             </div>`\n          };\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shift Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), selectedShift && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Shift:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this), \" \", selectedShift.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Start:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this), \" \", new Date(selectedShift.start).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"End:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this), \" \", new Date(selectedShift.end).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cab-status-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Cab Facility Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: cabStatusList.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"No cab data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 23\n                }, this) : cabStatusList.map(emp => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [emp.username, \" \\u2013 \", emp.cab_facility === \"Yes\" ? \"Yes\" : \"No\"]\n                }, emp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Edit Shift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: editShiftDate,\n                onChange: e => setEditShiftDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Shift Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editShiftType,\n                onChange: e => setEditShiftType(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Morning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Evening\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Night\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Employee:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editEmployeeId,\n                onChange: e => setEditEmployeeId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 23\n                }, this), analysts.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: emp.id,\n                  children: emp.username\n                }, emp.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Comments / Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), cabStatusList.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedEmployeeForNotes,\n              onChange: e => setSelectedEmployeeForNotes(e.target.value),\n              className: \"notes-employee-select\",\n              children: cabStatusList.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: emp.username,\n                children: [emp.username, \"'s Notes\"]\n              }, emp.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"10\",\n              value: selectedEmployeeForNotes && employeeNotes[selectedEmployeeForNotes] ? employeeNotes[selectedEmployeeForNotes] : \"\",\n              onChange: e => {\n                const newNotes = {\n                  ...employeeNotes\n                };\n                newNotes[selectedEmployeeForNotes] = e.target.value;\n                setEmployeeNotes(newNotes);\n              },\n              disabled: !isAdmin && (!isWithinShift() || (user === null || user === void 0 ? void 0 : user.username) !== selectedEmployeeForNotes),\n              spellCheck: \"false\",\n              placeholder: isAdmin ? \"Add or edit notes here...\" : isWithinShift() && (user === null || user === void 0 ? void 0 : user.username) === selectedEmployeeForNotes ? \"Add or edit your notes here...\" : \"You can only edit your own notes during shift time.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !isWithinShift(),\n            className: \"modal-btn save-btn\",\n            children: \"Save Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-wrapper-35\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"cabSwitch\",\n              className: \"switch\",\n              checked: cabOpted,\n              onChange: handleCabToggle,\n              disabled: !isUserInShift()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cabSwitch\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"switch-x-text\",\n                children: \"Cab is\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"switch-x-toggletext\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"switch-x-unchecked\",\n                  style: {\n                    color: \"red\"\n                  },\n                  children: \"Not Opted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"switch-x-checked\",\n                  style: {\n                    color: \"lime\"\n                  },\n                  children: \"Opted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 17\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditShift,\n              className: \"modal-btn edit-btn\",\n              children: \"Update Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteShift,\n              className: \"modal-btn delete-btn\",\n              children: \"Delete Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            className: \"modal-btn cancel-btn\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAddModalOpen,\n      onRequestClose: () => setIsAddModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newShiftDate,\n        onChange: e => setNewShiftDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Shift Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newShiftType,\n        onChange: e => setNewShiftType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Morning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Evening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Night\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Employees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-checkboxes\",\n        children: analysts.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employee-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `emp-${emp.id}`,\n            checked: selectedEmployees.includes(emp.username),\n            onChange: () => handleEmployeeToggle(emp.username)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `emp-${emp.id}`,\n            children: emp.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShift,\n          className: \"modal-btn save-btn\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddModalOpen(false),\n          className: \"modal-btn cancel-btn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n};\n_s(Shifts, \"ml9XqL0Mpl20e/FZu3dZWMiXiFw=\", false, function () {\n  return [useAuth];\n});\n_c = Shifts;\nexport default Shifts;\nvar _c;\n$RefreshReg$(_c, \"Shifts\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","shiftTimeMapping","Night","start","end","Morning","Evening","Shifts","_s","user","isAdmin","role","cabStatusList","setCabStatusList","shifts","setShifts","selectedEmployeeForNotes","setSelectedEmployeeForNotes","employeeNotes","setEmployeeNotes","shiftColorMap","selectedShift","setSelectedShift","comment","setComment","commentsMap","setCommentsMap","isModalOpen","setIsModalOpen","isAddModalOpen","setIsAddModalOpen","newShiftDate","setNewShiftDate","newShiftType","setNewShiftType","selectedEmployees","setSelectedEmployees","analysts","setAnalysts","cabOpted","setCabOpted","editShiftType","setEditShiftType","editShiftDate","setEditShiftDate","editEmployeeId","setEditEmployeeId","shiftColorPool","isMountedRef","current","fetchShifts","fetch","then","res","json","data","catch","err","console","error","handleEmployeeToggle","username","prev","includes","filter","u","isUserInShift","some","emp","handleCabToggle","newCabOpted","method","headers","body","JSON","stringify","shift_id","id","employee_id","cab_facility","prevList","map","handleEventClick","info","shift","event","date","toISOString","slice","shiftType","title","firstEmp","split","matchedEmp","find","response","ok","Error","length","currentUser","notesResponse","notesData","notesMap","forEach","note","notes","isWithinShift","now","Date","handleSave","handleAddShift","alert","startDateTime","endDateTime","setDate","getDate","selectedEmployeeObjects","shift_type","toLowerCase","employee_ids","handleEditShift","_analysts$find","shiftId","selectedUsername","isDuplicate","sameStart","getTime","sameEnd","sameEmployee","differentShift","String","result","handleDeleteShift","slotLabelContent","arg","getHours","slotLaneContent","hour","display","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","eventDidMount","window","VanillaTilt","el","init","glare","plugins","initialView","slotDuration","slotLabelInterval","hours","allDaySlot","slotMinTime","slotMaxTime","events","eventClick","slotEventOverlap","headerToolbar","left","center","right","height","eventOverlap","dayMaxEventRows","dayMaxEvents","displayEventTime","eventOrder","eventContent","titleParts","shiftTitle","employeesRaw","employeeList","name","index","trim","join","html","isOpen","onRequestClose","overlayClassName","toLocaleString","type","value","onChange","e","target","rows","newNotes","disabled","spellCheck","placeholder","checked","htmlFor","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Portal/soc-portal/src/pages/Shifts.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport Modal from \"react-modal\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/Shifts.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst shiftTimeMapping = {\r\n  Night: { start: \"00:00\", end: \"08:00\" },\r\n  Morning: { start: \"08:00\", end: \"16:00\" },\r\n  Evening: { start: \"16:00\", end: \"24:00\" },\r\n};\r\n\r\nconst Shifts = () => {\r\n  const { user } = useAuth();\r\n  const isAdmin = user?.role === \"admin\";\r\n  const [cabStatusList, setCabStatusList] = useState([]);\r\n  const [shifts, setShifts] = useState([]);\r\n  const [selectedEmployeeForNotes, setSelectedEmployeeForNotes] = useState(\"\");\r\n  const [employeeNotes, setEmployeeNotes] = useState({});\r\n  const shiftColorMap = useRef({});\r\n  const [selectedShift, setSelectedShift] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\r\n  const [newShiftType, setNewShiftType] = useState(\"Night\");\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n  const [analysts, setAnalysts] = useState([]);\r\n  const [cabOpted, setCabOpted] = useState(false);\r\n  const [editShiftType, setEditShiftType] = useState(\"Night\");\r\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\r\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\r\n  const shiftColorPool = [\r\n    \"#0b3d91\", // dark azure blue\r\n    \"#4b1d3f\", // deep plum\r\n    \"#0f3b57\", // midnight teal\r\n    \"#440047\", // deep grape\r\n    \"#004d40\", // deep teal\r\n    \"#3d0000\", // deep maroon\r\n    \"#00203f\", // dark navy\r\n    \"#2c003e\", // dark purple\r\n    \"#4a148c\", // indigo\r\n    \"#1a1a40\", // navy black\r\n    \"#3a0ca3\", // royal violet\r\n    \"#311432\", // raisin black\r\n    \"#8B0000\", // dark red\r\n    \"#7B241C\", // deep crimson\r\n    \"#641E16\", // dark cherry\r\n    \"#78281F\", // wine red\r\n    \"#6E1414\", // roasted red\r\n    \"#8B2500\", // burnt orange\r\n    \"#B7410E\", // rust\r\n    \"#A0522D\", // sienna brown\r\n    \"#D2691E\", // chocolate orange\r\n    \"#9C640C\", // golden bronze\r\n    \"#8B4513\", // saddle brown\r\n    \"#7C4700\", // caramel burnt\r\n    \"#705700\", // muddy gold\r\n    \"#665D1E\",  // dark mustard\r\n    \"#003f5c\", // deep ocean blue\r\n    \"#390099\", // vibrant purple\r\n    \"#1c0032\", // dark violet\r\n    \"#3e065f\", // cosmic purple\r\n    \"#123524\", // pine green\r\n    \"#1e2a38\", // shadow slate\r\n    \"#0c1f3f\", // indigo night\r\n    \"#420516\", // merlot\r\n    \"#1a1a2e\", // deep blue-gray\r\n    \"#092635\", // arctic navy\r\n    \"#402218\", // dark brown\r\n    \"#0d1b2a\", // dark sea navy\r\n    \"#1b1b2f\", // gothic gray\r\n    \"#27374d\", // dusty night blue\r\n    \"#132743\", // midnight steel\r\n    \"#3e1f47\", // mulberry\r\n    \"#183D3D\", // sea moss\r\n    \"#1c1c1c\", // nearly black\r\n    \"#003366\", // classic navy\r\n    \"#212121\", // pitch black\r\n    \"#2b1d0e\", // earthy brown\r\n    \"#321325\", // shadow magenta\r\n    \"#102c57\", // blue slate\r\n    \"#2c2c54\", // dusk purple\r\n    \"#2a0944\", // grape skin\r\n    \"#2e003e\", // plum pit\r\n    \"#000f1a\", // true deep blue\r\n    \"#1b262c\", // blue-black\r\n    \"#001f3f\", // abyss blue\r\n    \"#2d132c\", // noir rose\r\n    \"#8B008B\", // Dark Magenta\r\n    \"#800040\", // Deep Rose\r\n    \"#993366\", // Dusky Pink\r\n    \"#702963\", // Byzantium\r\n    \"#A52A6A\", // Rose Red\r\n    \"#78002E\", // Dark Raspberry\r\n    \"#AA336A\", // Vintage Pink\r\n    \"#260701\", // ember coal\r\n    \"#191825\", // nightfall\r\n    \"#1f1d36\", // dark orchid\r\n    \"#3b2f2f\", // cocoa ash\r\n    \"#2e2e40\", // grayish indigo\r\n    \"#1e1e2f\", // subdued navy\r\n    \"#222831\", // graphite\r\n    \"#35013f\", // strong plum\r\n    \"#1A4D2E\"  // deep forest green\r\n  ];\r\n\r\n\r\n\r\n  const isMountedRef = useRef(true);\r\n  useEffect(() => {\r\n    isMountedRef.current = true;\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setIsModalOpen(false);\r\n      setIsAddModalOpen(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchShifts = () => {\r\n    fetch(\"http://192.168.29.194:5000/api/shifts\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (isMountedRef.current) setShifts(data);\r\n      })\r\n      .catch((err) => {\r\n        if (isMountedRef.current) console.error(\"Failed to fetch shifts:\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShifts();\r\n    fetch(\"http://192.168.29.194:5000/api/analysts\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (isMountedRef.current) setAnalysts(data);\r\n      })\r\n      .catch((err) => {\r\n        if (isMountedRef.current) console.error(\"Failed to fetch analysts:\", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleEmployeeToggle = (username) => {\r\n    setSelectedEmployees((prev) =>\r\n      prev.includes(username) ? prev.filter((u) => u !== username) : [...prev, username]\r\n    );\r\n  };\r\n\r\n  const isUserInShift = () => {\r\n    return cabStatusList.some((emp) => emp.username === user?.username);\r\n  };\r\n\r\n  const handleCabToggle = async () => {\r\n    const newCabOpted = !cabOpted;\r\n    setCabOpted(newCabOpted);\r\n    try {\r\n      await fetch(`http://192.168.29.194:5000/api/update_cab_status`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: selectedShift.id,\r\n          employee_id: user.id,\r\n          cab_facility: newCabOpted ? \"Yes\" : \"No\",\r\n        }),\r\n      });\r\n      setCabStatusList(prevList =>\r\n        prevList.map(emp =>\r\n          emp.username === user.username\r\n            ? { ...emp, cab_facility: newCabOpted ? \"Yes\" : \"No\" }\r\n            : emp\r\n        )\r\n      );\r\n    } catch (err) {\r\n      if (isMountedRef.current) console.error(\"Failed to update cab status:\", err);\r\n    }\r\n  };\r\n\r\n  const handleEventClick = async (info) => {\r\n    const shift = info.event;\r\n    if (!isMountedRef.current) return;\r\n\r\n    setSelectedShift(shift);\r\n    setComment(commentsMap[shift.id] || \"\");\r\n\r\n    if (isAdmin) {\r\n      const date = shift.start.toISOString().slice(0, 10);\r\n      let shiftType = \"Morning\";\r\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";\r\n      else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";\r\n      else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\r\n\r\n      const firstEmp = shift.title.split(\" - \")[0];\r\n      const matchedEmp = analysts.find((emp) => emp.username === firstEmp);\r\n\r\n      setEditShiftType(shiftType);\r\n      setEditShiftDate(date);\r\n      setEditEmployeeId(matchedEmp?.id || \"\");\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://192.168.29.194:5000/api/shifts/${shift.id}/cab-status`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch cab status\");\r\n      const data = await response.json();\r\n      if (isMountedRef.current) {\r\n        setCabStatusList(data);\r\n        if (!isAdmin && data.length > 0) {\r\n          const currentUser = data.find((emp) => emp.username === user.username);\r\n          setCabOpted(currentUser?.cab_facility === \"Yes\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (isMountedRef.current) {\r\n        console.error(\"Error fetching cab status:\", error);\r\n        setCabStatusList([]);\r\n      }\r\n    }\r\n\r\n    try {\r\n      // Fetch notes for this shift\r\n      const notesResponse = await fetch(`http://192.168.29.194:5000/api/shifts/${shift.id}/notes`);\r\n      if (notesResponse.ok) {\r\n        const notesData = await notesResponse.json();\r\n        const notesMap = {};\r\n        notesData.forEach(note => {\r\n          notesMap[note.employee_id] = note.notes;\r\n        });\r\n        setEmployeeNotes(notesMap);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching notes:\", error);\r\n    }\r\n\r\n    // Set the first employee as default selection\r\n    if (cabStatusList.length > 0) {\r\n      setSelectedEmployeeForNotes(cabStatusList[0].username);\r\n    }\r\n\r\n    if (isMountedRef.current) setIsModalOpen(true);\r\n  };\r\n\r\n  const isWithinShift = () => {\r\n    if (!selectedShift) return false;\r\n    const now = new Date();\r\n    const start = new Date(selectedShift.start);\r\n    const end = new Date(selectedShift.end);\r\n    return now >= start && now <= end;\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedShift) {\r\n      setCommentsMap((prev) => ({\r\n        ...prev,\r\n        [selectedShift.id]: comment,\r\n      }));\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleAddShift = async () => {\r\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\r\n      alert(\"Please fill all fields.\");\r\n      return;\r\n    }\r\n\r\n    const { start, end } = shiftTimeMapping[newShiftType];\r\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\r\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\r\n    if (end === \"00:00\") {\r\n      endDateTime.setDate(endDateTime.getDate() + 1);\r\n    }\r\n\r\n    const selectedEmployeeObjects = analysts.filter((emp) =>\r\n      selectedEmployees.includes(emp.username)\r\n    );\r\n\r\n    try {\r\n      for (let emp of selectedEmployeeObjects) {\r\n        const response = await fetch(\r\n          \"http://192.168.29.194:5000/api/create_shift\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              date: newShiftDate,\r\n              shift_type: newShiftType.toLowerCase(),\r\n              employee_ids: [emp.id],\r\n            }),\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          alert(\"Error: \" + data.error);\r\n          return;\r\n        }\r\n      }\r\n\r\n      fetchShifts();\r\n      alert(\"Shift(s) created successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to create shift.\");\r\n    }\r\n\r\n    setIsAddModalOpen(false);\r\n    setSelectedEmployees([]);\r\n  };\r\n\r\n  const handleEditShift = async () => {\r\n    try {\r\n      const shiftId = selectedShift.id;\r\n\r\n      const { start, end } = shiftTimeMapping[editShiftType];\r\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\r\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\r\n      if (end === \"00:00\") {\r\n        endDateTime.setDate(endDateTime.getDate() + 1);\r\n      }\r\n\r\n      const selectedUsername =\r\n        analysts.find((emp) => emp.id === editEmployeeId)?.username || \"\";\r\n\r\n      const isDuplicate = shifts.some((shift) => {\r\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\r\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\r\n        const sameEmployee = shift.title.includes(selectedUsername);\r\n        const differentShift = String(shift.id) !== String(shiftId);\r\n        return differentShift && sameStart && sameEnd && sameEmployee;\r\n      });\r\n\r\n      if (isDuplicate) {\r\n        alert(\"Another shift already exists in that slot!\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\"http://192.168.29.194:5000/api/edit_shift\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: shiftId,\r\n          date: editShiftDate,\r\n          shift_type: editShiftType.toLowerCase(),\r\n          employee_id: editEmployeeId,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n      fetchShifts();\r\n      setIsModalOpen(false);\r\n      alert(\"Shift updated successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to edit shift.\");\r\n    }\r\n  };\r\n  const handleDeleteShift = async () => {\r\n    try {\r\n      const response = await fetch(\"http://192.168.29.194:5000/api/delete_shift\", {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ shift_id: selectedShift.id }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n      fetchShifts();\r\n      setIsModalOpen(false);\r\n      alert(\"Shift deleted successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to delete shift.\");\r\n    }\r\n  };\r\n\r\n  const slotLabelContent = (arg) => {\r\n    if (arg.date.getHours() === 0) return \"Night\";\r\n    if (arg.date.getHours() === 8) return \"Morning\";\r\n    if (arg.date.getHours() === 16) return \"Evening\";\r\n    return \"\";\r\n  };\r\n\r\n  const slotLaneContent = (arg) => {\r\n    const hour = arg.date.getHours();\r\n    if (hour !== 0 && hour !== 8 && hour !== 16) {\r\n      return { display: \"none\" };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"shifts-wrapper\">\r\n      <div className=\"shifts-calendar\">\r\n        {isAdmin && (\r\n          <button\r\n            onClick={() => setIsAddModalOpen(true)}\r\n            className=\"add-shift-btn\"\r\n          >\r\n            Create Shift\r\n          </button>\r\n        )}\r\n        <FullCalendar\r\n          eventDidMount={(info) => {\r\n            const shiftId = info.event.id;\r\n\r\n\r\n            /*\r\n            // Assign color to shift\r\n            if (!shiftColorMap.current[shiftId]) {\r\n              const randomColor = shiftColorPool[Math.floor(Math.random() * shiftColorPool.length)];\r\n              shiftColorMap.current[shiftId] = randomColor;\r\n            }\r\n            const color = shiftColorMap.current[shiftId];\r\n            info.el.style.backgroundColor = color;\r\n            info.el.style.color = \"#fff\";\r\n            info.el.style.borderColor = color;\r\n            */\r\n\r\n            //glare effect\r\n            if (window.VanillaTilt && info.el) {\r\n              window.VanillaTilt.init(info.el, {\r\n\r\n                glare: true,\r\n                \"max-glare\": 0.3,\r\n\r\n              });\r\n            }\r\n          }}\r\n\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          initialView=\"timeGridWeek\"\r\n          slotDuration=\"08:00:00\"\r\n          slotLabelInterval={{ hours: 8 }}\r\n          allDaySlot={false}\r\n          slotMinTime=\"00:00:00\"\r\n          slotMaxTime=\"24:00:00\"\r\n          events={shifts}\r\n          eventClick={handleEventClick}\r\n          slotLabelContent={slotLabelContent}\r\n          slotEventOverlap={false}\r\n          slotLaneContent={slotLaneContent}\r\n          headerToolbar={{\r\n            left: \"prev,next,today\",\r\n            center: \"title\",\r\n            right: \"timeGridDay,timeGridWeek,dayGridMonth\",\r\n          }}\r\n          height=\"auto\"\r\n          eventOverlap={false}\r\n          dayMaxEventRows={true}\r\n          dayMaxEvents={true}\r\n          displayEventTime={false}\r\n          eventOrder={\"title\"}\r\n          eventContent={(arg) => {\r\n            const titleParts = arg.event.title.split(\" - \");\r\n            const shiftTitle = titleParts[0];\r\n            const employeesRaw = titleParts[1] || \"\";\r\n            const employeeList = employeesRaw\r\n              .split(\",\")\r\n              .map((name, index) => `<div>${index + 1}. ${name.trim()}</div>`)\r\n              .join(\"\");\r\n\r\n            return {\r\n              html: `<div style=\"padding: 2px;\">\r\n                <strong>${shiftTitle}</strong>\r\n                <div style=\"margin-top: 4px;\">${employeeList}</div>\r\n             </div>`,\r\n            };\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Shift Details</h2>\r\n        {selectedShift && (\r\n          <>\r\n            <div className=\"modal-content\">\r\n              <div className=\"left-section\">\r\n                <p>\r\n                  <strong>Shift:</strong> {selectedShift.title}\r\n                </p>\r\n                <p>\r\n                  <strong>Start:</strong>{\" \"}\r\n                  {new Date(selectedShift.start).toLocaleString()}\r\n                </p>\r\n                <p>\r\n                  <strong>End:</strong>{\" \"}\r\n                  {new Date(selectedShift.end).toLocaleString()}\r\n                </p>\r\n\r\n                <div className=\"cab-status-list\">\r\n                  <h3>Cab Facility Status</h3>\r\n                  <ul>\r\n                    {cabStatusList.length === 0 ? (\r\n                      <li>No cab data available</li>\r\n                    ) : (\r\n                      cabStatusList.map((emp) => (\r\n                        <li key={emp.id}>\r\n                          {emp.username} – {emp.cab_facility === \"Yes\" ? \"Yes\" : \"No\"}\r\n                        </li>\r\n                      ))\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n\r\n                {isAdmin && (\r\n                  <>\r\n                    <h3>Edit Shift</h3>\r\n                    <label>Date:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={editShiftDate}\r\n                      onChange={(e) => setEditShiftDate(e.target.value)}\r\n                    />\r\n\r\n                    <label>Shift Type:</label>\r\n                    <select\r\n                      value={editShiftType}\r\n                      onChange={(e) => setEditShiftType(e.target.value)}\r\n                    >\r\n                      <option>Morning</option>\r\n                      <option>Evening</option>\r\n                      <option>Night</option>\r\n                    </select>\r\n\r\n                    <label>Employee:</label>\r\n                    <select\r\n                      value={editEmployeeId}\r\n                      onChange={(e) => setEditEmployeeId(e.target.value)}\r\n                    >\r\n                      <option value=\"\">Select employee</option>\r\n                      {analysts.map((emp) => (\r\n                        <option key={emp.id} value={emp.id}>\r\n                          {emp.username}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"right-section\">\r\n                <label>Comments / Notes:</label>\r\n                {cabStatusList.length > 0 && (\r\n                  <select\r\n                    value={selectedEmployeeForNotes}\r\n                    onChange={(e) => setSelectedEmployeeForNotes(e.target.value)}\r\n                    className=\"notes-employee-select\"\r\n                  >\r\n                    {cabStatusList.map((emp) => (\r\n                      <option key={emp.id} value={emp.username}>\r\n                        {emp.username}'s Notes\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                )}\r\n                <textarea\r\n                  rows=\"10\"\r\n                  value={\r\n                    selectedEmployeeForNotes && employeeNotes[selectedEmployeeForNotes]\r\n                      ? employeeNotes[selectedEmployeeForNotes]\r\n                      : \"\"\r\n                  }\r\n                  onChange={(e) => {\r\n                    const newNotes = { ...employeeNotes };\r\n                    newNotes[selectedEmployeeForNotes] = e.target.value;\r\n                    setEmployeeNotes(newNotes);\r\n                  }}\r\n                  disabled={\r\n                    !isAdmin &&\r\n                    (!isWithinShift() ||\r\n                      (user?.username !== selectedEmployeeForNotes))\r\n                  }\r\n                  spellCheck=\"false\"\r\n                  placeholder={\r\n                    isAdmin\r\n                      ? \"Add or edit notes here...\"\r\n                      : isWithinShift() && user?.username === selectedEmployeeForNotes\r\n                        ? \"Add or edit your notes here...\"\r\n                        : \"You can only edit your own notes during shift time.\"\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"modal-buttons\">\r\n              <button\r\n                onClick={handleSave}\r\n                disabled={!isWithinShift()}\r\n                className=\"modal-btn save-btn\"\r\n              >\r\n                Save Comments\r\n              </button>\r\n\r\n              {!isAdmin && (\r\n                <div className=\"checkbox-wrapper-35\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"cabSwitch\"\r\n                    className=\"switch\"\r\n                    checked={cabOpted}\r\n                    onChange={handleCabToggle}\r\n                    disabled={!isUserInShift()}\r\n                  />\r\n                  <label htmlFor=\"cabSwitch\">\r\n                    <span className=\"switch-x-text\">Cab is</span>\r\n                    <span className=\"switch-x-toggletext\">\r\n                      <span className=\"switch-x-unchecked\" style={{ color: \"red\" }}>\r\n                        Not Opted\r\n                      </span>\r\n                      <span className=\"switch-x-checked\" style={{ color: \"lime\" }}>\r\n                        Opted\r\n                      </span>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              )}\r\n\r\n              {isAdmin && (\r\n                <>\r\n                  <button onClick={handleEditShift} className=\"modal-btn edit-btn\">\r\n                    Update Shift\r\n                  </button>\r\n                  <button onClick={handleDeleteShift} className=\"modal-btn delete-btn\">\r\n                    Delete Shift\r\n                  </button>\r\n                </>\r\n              )}\r\n\r\n              <button\r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"modal-btn cancel-btn\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Modal>\r\n\r\n\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onRequestClose={() => setIsAddModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Create New Shift</h2>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={newShiftDate}\r\n          onChange={(e) => setNewShiftDate(e.target.value)}\r\n        />\r\n\r\n        <label>Shift Type:</label>\r\n        <select\r\n          value={newShiftType}\r\n          onChange={(e) => setNewShiftType(e.target.value)}\r\n        >\r\n          <option>Morning</option>\r\n          <option>Evening</option>\r\n          <option>Night</option>\r\n        </select>\r\n\r\n        <label>Select Employees:</label>\r\n        <div className=\"employees-checkboxes\">\r\n          {analysts.map((emp) => (\r\n            <div key={emp.id} className=\"employee-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`emp-${emp.id}`}\r\n                checked={selectedEmployees.includes(emp.username)}\r\n                onChange={() => handleEmployeeToggle(emp.username)}\r\n              />\r\n              <label htmlFor={`emp-${emp.id}`}>{emp.username}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"modal-buttons\">\r\n          <button\r\n            onClick={handleAddShift}\r\n            className=\"modal-btn save-btn\"\r\n          >\r\n            Create\r\n          </button>\r\n          <button\r\n            onClick={() => setIsAddModalOpen(false)}\r\n            className=\"modal-btn cancel-btn\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shifts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}