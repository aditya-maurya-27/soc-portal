{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Programs\\\\soc-portal\\\\src\\\\pages\\\\Shifts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"../styles/Shifts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shifts = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext); // Get logged-in user\n  const [shifts, setShifts] = useState([]);\n\n  // Dummy shift data (will be fetched from backend later)\n  useEffect(() => {\n    const sampleShifts = [{\n      id: 1,\n      title: \"Morning Shift - A\",\n      start: \"2025-04-05T08:00:00\",\n      end: \"2025-04-05T14:00:00\"\n    }, {\n      id: 2,\n      title: \"Afternoon Shift - B\",\n      start: \"2025-04-05T14:00:00\",\n      end: \"2025-04-05T20:00:00\"\n    }, {\n      id: 3,\n      title: \"Evening Shift - C\",\n      start: \"2025-04-05T20:00:00\",\n      end: \"2025-04-06T02:00:00\"\n    }];\n    setShifts(sampleShifts);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shifts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shift Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridDay\",\n      headerToolbar: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n      },\n      events: shifts,\n      editable: false // Users cannot drag events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Shifts, \"ombI+P+aHV6jmUoq01A7+xwpfuc=\");\n_c = Shifts;\nexport default Shifts;\nvar _c;\n$RefreshReg$(_c, \"Shifts\");","map":{"version":3,"names":["React","useState","useEffect","useContext","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","AuthContext","jsxDEV","_jsxDEV","Shifts","_s","user","shifts","setShifts","sampleShifts","id","title","start","end","className","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","headerToolbar","left","center","right","events","editable","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Programs/soc-portal/src/pages/Shifts.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport \"../styles/Shifts.css\";\r\n\r\nconst Shifts = () => {\r\n  const { user } = useContext(AuthContext); // Get logged-in user\r\n  const [shifts, setShifts] = useState([]);\r\n\r\n  // Dummy shift data (will be fetched from backend later)\r\n  useEffect(() => {\r\n    const sampleShifts = [\r\n      { id: 1, title: \"Morning Shift - A\", start: \"2025-04-05T08:00:00\", end: \"2025-04-05T14:00:00\" },\r\n      { id: 2, title: \"Afternoon Shift - B\", start: \"2025-04-05T14:00:00\", end: \"2025-04-05T20:00:00\" },\r\n      { id: 3, title: \"Evening Shift - C\", start: \"2025-04-05T20:00:00\", end: \"2025-04-06T02:00:00\" },\r\n    ];\r\n    setShifts(sampleShifts);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"shifts-container\">\r\n      <h2>Shift Management</h2>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n        initialView=\"timeGridDay\"\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n        }}\r\n        events={shifts}\r\n        editable={false} // Users cannot drag events\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shifts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAK,CAAC,GAAGV,UAAU,CAACK,WAAW,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,CACnB;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,KAAK,EAAE,qBAAqB;MAAEC,GAAG,EAAE;IAAsB,CAAC,EAC/F;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,qBAAqB;MAAEC,KAAK,EAAE,qBAAqB;MAAEC,GAAG,EAAE;IAAsB,CAAC,EACjG;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,KAAK,EAAE,qBAAqB;MAAEC,GAAG,EAAE;IAAsB,CAAC,CAChG;IACDL,SAAS,CAACC,YAAY,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKW,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BZ,OAAA;MAAAY,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhB,OAAA,CAACN,YAAY;MACXuB,OAAO,EAAE,CAACtB,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;MAC5DqB,WAAW,EAAC,aAAa;MACzBC,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT,CAAE;MACFC,MAAM,EAAEnB,MAAO;MACfoB,QAAQ,EAAE,KAAM,CAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA9BID,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}