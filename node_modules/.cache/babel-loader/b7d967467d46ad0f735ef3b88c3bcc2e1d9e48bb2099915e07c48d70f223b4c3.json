{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, Property, Event, Animation, Collection, append } from '@syncfusion/ej2-base';\nimport { EventHandler, Browser, Internationalization, getDefaultDateObject, cldrData, L10n } from '@syncfusion/ej2-base';\nimport { getValue, compile, extend, isNullOrUndefined, NotifyPropertyChanges, Complex } from '@syncfusion/ej2-base';\nimport { getElement, removeClass, addClass, classList, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { HeaderRenderer } from '../renderer/header-renderer';\nimport { Scroll } from '../actions/scroll';\nimport { ScheduleTouch } from '../actions/touch';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { Data } from '../actions/data';\nimport { EventBase } from '../event-renderer/event-base';\nimport { InlineEdit } from '../event-renderer/inline-edit';\nimport { QuickPopups } from '../popups/quick-popups';\nimport { EventTooltip } from '../popups/event-tooltip';\nimport { EventWindow } from '../popups/event-window';\nimport { Render } from '../renderer/renderer';\nimport { WorkHours } from '../models/work-hours';\nimport { TimeScale } from '../models/time-scale';\nimport { QuickInfoTemplates } from '../models/quick-info-templates';\nimport { HeaderRows } from '../models/header-rows';\nimport { Crud } from '../actions/crud';\nimport { WorkCellInteraction } from '../actions/work-cells';\nimport { EventSettings } from '../models/event-settings';\nimport { Group } from '../models/group';\nimport { Resources } from '../models/resources';\nimport { Gregorian, Islamic } from '../../common/calendar-util';\nimport { ResourceBase } from '../base/resource';\nimport { Timezone, timezoneData } from '../timezone/timezone';\nimport * as events from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport * as util from '../base/util';\nimport { ToolbarItem } from '../models/toolbar';\n/**\n * Represents the Schedule component that displays a list of events scheduled against specific date and timings,\n * thus helping us to plan and manage it properly.\n * ```html\n * <div id=\"schedule\"></div>\n * ```\n * ```typescript\n * <script>\n *   var scheduleObj = new Schedule();\n *   scheduleObj.appendTo(\"#schedule\");\n * </script>\n * ```\n */\nvar Schedule = /** @class */function (_super) {\n  __extends(Schedule, _super);\n  /**\n   * Constructor for creating the Schedule widget\n   *\n   * @param {ScheduleModel} options Accepts the schedule model properties to initiate the rendering\n   * @param {string | HTMLElement} element Accepts the DOM element reference\n   */\n  function Schedule(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.adaptiveGroupIndex = 0;\n    return _this;\n  }\n  /**\n   * Core method that initializes the control rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.render = function () {\n    var addClasses = [];\n    var removeClasses = [];\n    addClasses.push(cls.ROOT);\n    if (this.enableRtl) {\n      addClasses.push(cls.RTL);\n    } else {\n      removeClasses.push(cls.RTL);\n    }\n    if (this.isAdaptive) {\n      addClasses.push(cls.DEVICE_CLASS);\n    } else {\n      removeClasses.push(cls.DEVICE_CLASS);\n    }\n    if (this.enableAdaptiveUI) {\n      addClasses.push(cls.ADAPTIVE_CLASS);\n    } else {\n      removeClasses.push(cls.ADAPTIVE_CLASS);\n    }\n    if (this.allowMultiDrag) {\n      addClasses.push(cls.MULTI_DRAG);\n    } else {\n      removeClasses.push(cls.MULTI_DRAG);\n    }\n    if (this.cssClass) {\n      var cssClass = this.cssClass.split(' ');\n      for (var _i = 0, cssClass_1 = cssClass; _i < cssClass_1.length; _i++) {\n        var cls_1 = cssClass_1[_i];\n        addClasses.push(cls_1);\n      }\n    }\n    classList(this.element, addClasses, removeClasses);\n    this.validateDate();\n    createSpinner({\n      target: this.element\n    });\n    this.scrollModule = new Scroll(this);\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n    this.renderModule = new Render(this);\n    this.eventBase = new EventBase(this);\n    this.workCellAction = new WorkCellInteraction(this);\n    if (this.allowKeyboardInteraction) {\n      this.keyboardInteractionModule = new KeyboardInteraction(this);\n    }\n    this.inlineModule = new InlineEdit(this);\n    this.initializeDataModule();\n    this.renderTableContainer();\n    this.activeViewOptions = this.getActiveViewOptions();\n    this.initializeResources();\n    this.wireEvents();\n  };\n  Schedule.prototype.renderTableContainer = function () {\n    if (!this.element.querySelector('.' + cls.TABLE_CONTAINER_CLASS)) {\n      this.element.appendChild(this.createElement('div', {\n        className: cls.TABLE_CONTAINER_CLASS\n      }));\n    }\n  };\n  Schedule.prototype.getEventTemplateName = function (resIndex) {\n    var templateName = 'eventTemplate_' + resIndex;\n    if (this.activeEventTemplates.indexOf(templateName) < 0) {\n      this.activeEventTemplates.push(templateName);\n    }\n    return templateName;\n  };\n  /**\n   * Method to get element width\n   *\n   * @param {HTMLElement} element Accepts the DOM element\n   * @returns {number} Returns the width of the given element\n   * @private\n   */\n  Schedule.prototype.getElementWidth = function (element) {\n    return util.getElementWidth(element, this.uiStateValues.isTransformed);\n  };\n  /**\n   * Method to get element height\n   *\n   * @param {HTMLElement} element Accepts the DOM element\n   * @returns {number} Returns the Height of the given element\n   * @private\n   */\n  Schedule.prototype.getElementHeight = function (element) {\n    return util.getElementHeight(element, this.uiStateValues.isTransformed);\n  };\n  /**\n   * Method to get height from element\n   *\n   * @param {Element} element Accepts the DOM element\n   * @param {string} elementClass Accepts the element class\n   * @returns {number} Returns the height of the element\n   * @private\n   */\n  Schedule.prototype.getElementHeightFromClass = function (element, elementClass) {\n    return util.getElementHeightFromClass(element, elementClass, this.uiStateValues.isTransformed);\n  };\n  /**\n   * Method to render react templates\n   *\n   * @param {Function} callback - Specifies the callBack method\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.renderTemplates = function (callback) {\n    if (this.isReact) {\n      this.renderReactTemplates(callback);\n    } else if (callback) {\n      callback();\n    }\n  };\n  /**\n   * Method to reset react templates\n   *\n   * @param {string[]} templates Accepts the template ID\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.resetTemplates = function (templates) {\n    if (this.isAngular || this.isReact) {\n      this.clearTemplate(templates);\n    }\n  };\n  /**\n   * This method renders untrusted strings and scripts securely by sanitizing them first.\n   *\n   * @param {string} value - A string value representing the HTML string value to be sanitized.\n   * @param {HTMLElement} element - An HTML element to which the sanitized or unsanitized HTML string will be assigned.\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.sanitize = function (value, element) {\n    if (this.enableHtmlSanitizer) {\n      element.innerText = SanitizeHtmlHelper.sanitize(value);\n    } else {\n      element.innerHTML = value;\n    }\n  };\n  Schedule.prototype.initializeResources = function (isSetModel) {\n    if (isSetModel === void 0) {\n      isSetModel = false;\n    }\n    if (this.resources.length > 0) {\n      this.resourceBase = new ResourceBase(this);\n      this.resourceBase.bindResourcesData(isSetModel);\n    } else {\n      this.resourceBase = null;\n      this.resourceCollection = [];\n      this.renderElements(isSetModel);\n    }\n  };\n  Schedule.prototype.destroyEditorWindow = function () {\n    if (this.eventWindow) {\n      this.eventWindow.destroy();\n      this.eventWindow = null;\n    }\n    this.eventWindow = new EventWindow(this);\n  };\n  /**\n   * Method to render the layout elements\n   *\n   * @param {boolean} isLayoutOnly Accepts the boolean value to render layout or not\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.renderElements = function (isLayoutOnly) {\n    if (isLayoutOnly) {\n      this.initializeView(this.currentView);\n      this.eventWindow.refresh();\n      return;\n    }\n    this.destroyHeaderModule();\n    if (this.showHeaderBar) {\n      this.headerModule = new HeaderRenderer(this);\n    }\n    this.renderTableContainer();\n    this.uiStateValues.isTransformed = Math.round(this.element.getBoundingClientRect().width) !== this.element.offsetWidth;\n    if (Browser.isDevice || Browser.isTouch) {\n      this.scheduleTouchModule = new ScheduleTouch(this);\n    }\n    this.initializeView(this.currentView);\n    this.destroyPopups();\n    if (!this.isPrinting) {\n      this.initializePopups();\n    }\n  };\n  Schedule.prototype.validateDate = function (selectedDate) {\n    if (selectedDate === void 0) {\n      selectedDate = this.selectedDate;\n    }\n    // persist the selected date value\n    var date = selectedDate instanceof Date ? new Date(selectedDate.getTime()) : new Date(selectedDate);\n    var minDate = isNullOrUndefined(this.minDate) ? new Date(1900, 0, 1) : this.minDate instanceof Date ? new Date(this.minDate.getTime()) : new Date(this.minDate);\n    var maxDate = isNullOrUndefined(this.maxDate) ? new Date(2099, 11, 31) : this.maxDate instanceof Date ? new Date(this.maxDate.getTime()) : new Date(this.maxDate);\n    if (minDate <= maxDate) {\n      if (date < minDate) {\n        date = minDate;\n      }\n      if (date > maxDate) {\n        date = maxDate;\n      }\n      this.setProperties({\n        selectedDate: new Date('' + date),\n        minDate: new Date('' + minDate),\n        maxDate: new Date('' + maxDate)\n      }, true);\n      if (this.eventWindow) {\n        this.eventWindow.updateMinMaxDateToEditor();\n      }\n    } else {\n      throw Error('minDate should be equal or less than maxDate');\n    }\n  };\n  Schedule.prototype.getViewIndex = function (viewName) {\n    for (var item = 0; item < this.viewCollections.length; item++) {\n      var checkIndex = this.viewCollections[parseInt(item.toString(), 10)].option;\n      if (checkIndex === viewName) {\n        return item;\n      }\n    }\n    return -1;\n  };\n  Schedule.prototype.setViewOptions = function (isModuleLoad) {\n    if (isModuleLoad === void 0) {\n      isModuleLoad = false;\n    }\n    if (isNullOrUndefined(this.views) || this.views.length === 0) {\n      return;\n    }\n    this.viewOptions = {};\n    this.viewCollections = [];\n    var viewName;\n    var selectedView;\n    var prevIndex = this.viewIndex;\n    var count = 0;\n    this.viewIndex = -1;\n    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n      var view = _a[_i];\n      var isOptions = typeof view === 'string' ? false : true;\n      if (typeof view === 'string') {\n        viewName = view;\n        if (this.currentView === viewName) {\n          selectedView = viewName;\n          this.viewIndex = count;\n        }\n      } else {\n        viewName = view.option;\n        if (view.isSelected) {\n          selectedView = viewName;\n          this.viewIndex = count;\n        }\n      }\n      var obj = extend({\n        option: viewName\n      }, isOptions ? view : {});\n      var fieldViewName = viewName.charAt(0).toLowerCase() + viewName.slice(1);\n      obj.cellHeaderTemplateName = obj.cellHeaderTemplate ? obj.option : '';\n      obj.dateHeaderTemplateName = obj.dateHeaderTemplate ? obj.option : '';\n      obj.dateRangeTemplateName = obj.dateRangeTemplate ? obj.option : '';\n      obj.cellTemplateName = obj.cellTemplate ? obj.option : '';\n      obj.dayHeaderTemplateName = obj.dayHeaderTemplate ? obj.option : '';\n      obj.monthHeaderTemplateName = obj.monthHeaderTemplate ? obj.option : '';\n      obj.resourceHeaderTemplateName = obj.resourceHeaderTemplate ? obj.option : '';\n      obj.headerIndentTemplateName = obj.headerIndentTemplate ? obj.option : '';\n      obj.eventTemplateName = obj.eventTemplate ? obj.option : '';\n      if (!isNullOrUndefined(obj.firstDayOfWeek) && obj.firstDayOfWeek === 0) {\n        delete obj.firstDayOfWeek;\n      }\n      if (!isNullOrUndefined(obj.interval) && obj.interval === 1) {\n        delete obj.interval;\n      }\n      this.viewCollections.push(obj);\n      if (isNullOrUndefined(this.viewOptions[\"\" + fieldViewName])) {\n        this.viewOptions[\"\" + fieldViewName] = [obj];\n      } else {\n        this.viewOptions[\"\" + fieldViewName].push(obj);\n      }\n      count++;\n    }\n    if (!isModuleLoad && selectedView) {\n      this.setProperties({\n        currentView: selectedView\n      }, true);\n    }\n    if (this.viewIndex === -1) {\n      var currentIndex = this.getViewIndex(this.currentView);\n      this.viewIndex = typeof this.views[0] !== 'string' && !isNullOrUndefined(prevIndex) && prevIndex !== -1 ? prevIndex : currentIndex === -1 ? 0 : currentIndex;\n    }\n  };\n  Schedule.prototype.getActiveViewOptions = function () {\n    var timeScale = {\n      enable: this.timeScale.enable,\n      interval: this.timeScale.interval,\n      slotCount: this.timeScale.slotCount,\n      majorSlotTemplate: this.timeScale.majorSlotTemplate,\n      minorSlotTemplate: this.timeScale.minorSlotTemplate\n    };\n    var isYearView = this.viewCollections[this.viewIndex].option.indexOf('Year') > -1;\n    var group = {\n      byDate: isYearView ? false : this.group.byDate,\n      byGroupID: this.group.byGroupID,\n      allowGroupEdit: this.group.allowGroupEdit,\n      resources: isNullOrUndefined(this.group.resources) ? [] : this.group.resources,\n      headerTooltipTemplate: this.group.headerTooltipTemplate,\n      enableCompactView: this.group.enableCompactView,\n      hideNonWorkingDays: ['Day', 'Week', 'WorkWeek', 'Month'].indexOf(this.currentView) > -1 ? this.group.hideNonWorkingDays : false\n    };\n    var workDays = this.viewCollections[this.viewIndex].workDays ? [] : this.workDays;\n    var scheduleOptions = {\n      dateFormat: this.dateFormat,\n      endHour: this.endHour,\n      isSelected: false,\n      option: null,\n      readonly: this.readonly,\n      startHour: this.startHour,\n      allowVirtualScrolling: false,\n      allowOverlap: this.allowOverlap,\n      overscanCount: this.overscanCount,\n      cellHeaderTemplate: this.cellHeaderTemplate,\n      dayHeaderTemplate: this.dayHeaderTemplate,\n      monthHeaderTemplate: this.monthHeaderTemplate,\n      cellTemplate: this.cellTemplate,\n      eventTemplate: this.eventSettings.template,\n      dateHeaderTemplate: this.dateHeaderTemplate,\n      dateRangeTemplate: this.dateRangeTemplate,\n      resourceHeaderTemplate: this.resourceHeaderTemplate,\n      headerIndentTemplate: this.headerIndentTemplate,\n      firstMonthOfYear: this.firstMonthOfYear,\n      firstDayOfWeek: this.firstDayOfWeek,\n      workDays: workDays,\n      monthsCount: this.monthsCount,\n      showWeekend: this.showWeekend,\n      showWeekNumber: this.showWeekNumber,\n      displayName: null,\n      interval: 1,\n      timeScale: timeScale,\n      timeFormat: this.internalTimeFormat,\n      group: group,\n      headerRows: this.headerRows,\n      orientation: 'Horizontal',\n      numberOfWeeks: 0,\n      displayDate: null,\n      enableLazyLoading: false\n    };\n    var viewOptions = this.viewCollections[this.viewIndex];\n    var viewsData = extend(scheduleOptions, viewOptions, undefined, true);\n    if (this.firstDayOfWeek !== 0 && viewOptions.firstDayOfWeek && this.firstDayOfWeek !== viewOptions.firstDayOfWeek) {\n      viewsData.firstDayOfWeek = this.firstDayOfWeek;\n    }\n    if (viewsData.displayDate) {\n      viewsData.displayDate = viewsData.displayDate instanceof Date ? new Date(viewsData.displayDate.getTime()) : new Date(viewsData.displayDate);\n    }\n    if (viewsData.enableLazyLoading && !isNullOrUndefined(viewsData.group.resources) && viewsData.group.resources.length > 0 && (['Agenda', 'MonthAgenda', 'Year', 'TimelineYear'].indexOf(viewsData.option) === -1 || viewsData.option === 'TimelineYear' && viewsData.orientation === 'Vertical')) {\n      viewsData.allowVirtualScrolling = true;\n    }\n    return viewsData;\n  };\n  Schedule.prototype.initializeDataModule = function () {\n    this.eventFields = {\n      id: this.eventSettings.fields.id,\n      isBlock: this.eventSettings.fields.isBlock,\n      subject: this.eventSettings.fields.subject.name,\n      startTime: this.eventSettings.fields.startTime.name,\n      endTime: this.eventSettings.fields.endTime.name,\n      startTimezone: this.eventSettings.fields.startTimezone.name,\n      endTimezone: this.eventSettings.fields.endTimezone.name,\n      location: this.eventSettings.fields.location.name,\n      description: this.eventSettings.fields.description.name,\n      isAllDay: this.eventSettings.fields.isAllDay.name,\n      recurrenceID: this.eventSettings.fields.recurrenceID.name,\n      recurrenceRule: this.eventSettings.fields.recurrenceRule.name,\n      recurrenceException: this.eventSettings.fields.recurrenceException.name,\n      isReadonly: this.eventSettings.fields.isReadonly,\n      followingID: this.eventSettings.fields.followingID\n    };\n    this.setEditorTitles();\n    this.dataModule = new Data(this, this.eventSettings.dataSource, this.eventSettings.query);\n    this.crudModule = new Crud(this);\n  };\n  Schedule.prototype.setEditorTitles = function () {\n    this.editorTitles = {\n      subject: this.eventSettings.fields.subject.title || this.localeObj.getConstant('title'),\n      startTime: this.eventSettings.fields.startTime.title || this.localeObj.getConstant('start'),\n      endTime: this.eventSettings.fields.endTime.title || this.localeObj.getConstant('end'),\n      isAllDay: this.eventSettings.fields.isAllDay.title || this.localeObj.getConstant('allDay'),\n      startTimezone: this.eventSettings.fields.startTimezone.title || this.localeObj.getConstant('startTimezone'),\n      endTimezone: this.eventSettings.fields.endTimezone.title || this.localeObj.getConstant('endTimezone'),\n      location: this.eventSettings.fields.location.title || this.localeObj.getConstant('location'),\n      description: this.eventSettings.fields.description.title || this.localeObj.getConstant('description'),\n      recurrenceRule: this.eventSettings.fields.recurrenceRule.title || this.localeObj.getConstant('repeat')\n    };\n  };\n  Schedule.prototype.initializeView = function (viewName) {\n    this.showSpinner();\n    this.activeViewOptions = this.getActiveViewOptions();\n    if (this.resourceBase) {\n      this.resourceBase.setResourceCollection();\n    }\n    this.initializeTemplates();\n    this.renderModule.render(viewName);\n  };\n  Schedule.prototype.initializeTemplates = function () {\n    this.cellHeaderTemplateFn = this.templateParser(this.activeViewOptions.cellHeaderTemplate);\n    this.dayHeaderTemplateFn = this.templateParser(this.activeViewOptions.dayHeaderTemplate);\n    this.monthHeaderTemplateFn = this.templateParser(this.activeViewOptions.monthHeaderTemplate);\n    this.cellTemplateFn = this.templateParser(this.activeViewOptions.cellTemplate);\n    this.dateHeaderTemplateFn = this.templateParser(this.activeViewOptions.dateHeaderTemplate);\n    this.dateRangeTemplateFn = this.templateParser(this.activeViewOptions.dateRangeTemplate);\n    this.majorSlotTemplateFn = this.templateParser(this.activeViewOptions.timeScale.majorSlotTemplate);\n    this.minorSlotTemplateFn = this.templateParser(this.activeViewOptions.timeScale.minorSlotTemplate);\n    this.appointmentTemplateFn = this.templateParser(this.activeViewOptions.eventTemplate);\n    this.resourceHeaderTemplateFn = this.templateParser(this.activeViewOptions.resourceHeaderTemplate);\n    this.headerIndentTemplateFn = this.templateParser(this.activeViewOptions.headerIndentTemplate);\n    this.headerTooltipTemplateFn = this.templateParser(this.activeViewOptions.group.headerTooltipTemplate);\n    this.eventTooltipTemplateFn = this.templateParser(this.eventSettings.tooltipTemplate);\n    this.editorTemplateFn = this.templateParser(this.editorTemplate);\n    this.editorHeaderTemplateFn = this.templateParser(this.editorHeaderTemplate);\n    this.editorFooterTemplateFn = this.templateParser(this.editorFooterTemplate);\n    this.quickInfoTemplatesHeaderFn = this.templateParser(this.quickInfoTemplates.header);\n    this.quickInfoTemplatesContentFn = this.templateParser(this.quickInfoTemplates.content);\n    this.quickInfoTemplatesFooterFn = this.templateParser(this.quickInfoTemplates.footer);\n  };\n  Schedule.prototype.initializePopups = function () {\n    this.eventWindow = new EventWindow(this);\n    this.quickPopup = new QuickPopups(this);\n  };\n  /**\n   * Method to get day names\n   *\n   * @param {string} type Accepts the day name\n   * @returns {string[]} Returns the collection of day names\n   * @private\n   */\n  Schedule.prototype.getDayNames = function (type) {\n    var culShortNames = [];\n    var cldrObj;\n    var nameSpace = '';\n    if (isNullOrUndefined(this.locale) || this.locale === 'en' || this.locale === 'en-US') {\n      nameSpace = 'days.stand-alone.';\n      cldrObj = getValue(nameSpace + type, getDefaultDateObject(this.getCalendarMode()));\n    } else {\n      nameSpace = 'main.' + '' + this.locale + '.dates.calendars.' + this.getCalendarMode() + '.days.format.' + type;\n      cldrObj = getValue(nameSpace, cldrData);\n    }\n    for (var _i = 0, _a = Object.keys(cldrObj); _i < _a.length; _i++) {\n      var obj = _a[_i];\n      culShortNames.push(getValue(obj, cldrObj));\n    }\n    return culShortNames;\n  };\n  Schedule.prototype.setCldrTimeFormat = function () {\n    if (!isNullOrUndefined(this.timeFormat)) {\n      this.internalTimeFormat = this.timeFormat;\n      return;\n    }\n    if (isNullOrUndefined(this.locale) || this.locale === 'en' || this.locale === 'en-US') {\n      this.internalTimeFormat = getValue('timeFormats.short', getDefaultDateObject(this.getCalendarMode()));\n    } else {\n      this.internalTimeFormat = getValue('main.' + '' + this.locale + '.dates.calendars.' + this.getCalendarMode() + '.timeFormats.short', cldrData);\n    }\n  };\n  /**\n   * Method to get calendar mode\n   *\n   * @returns {string} Returns the calendar mode\n   * @private\n   */\n  Schedule.prototype.getCalendarMode = function () {\n    return !isNullOrUndefined(this.calendarMode) ? this.calendarMode.toLowerCase() : 'gregorian';\n  };\n  /**\n   * Method to get time in string\n   *\n   * @param {Date} date Accepts the date object\n   * @returns {string} Returns the time in string\n   * @private\n   */\n  Schedule.prototype.getTimeString = function (date) {\n    var time = this.globalize.formatDate(date, {\n      format: this.activeViewOptions.timeFormat,\n      type: 'time',\n      calendar: this.getCalendarMode()\n    });\n    return time.toLocaleUpperCase();\n  };\n  /**\n   * Method to get  date object\n   *\n   * @param {Date} date Accepts the date object\n   * @returns {Date} Returns the date object\n   * @private\n   */\n  Schedule.prototype.getDateTime = function (date) {\n    return date instanceof Date ? new Date(date.getTime()) : new Date(date);\n  };\n  Schedule.prototype.setCalendarMode = function () {\n    if (this.calendarMode === 'Islamic') {\n      this.calendarUtil = new Islamic();\n    } else {\n      this.calendarUtil = new Gregorian();\n    }\n  };\n  /**\n   * Method to change the current view\n   *\n   * @param {View} view Accepts the view name\n   * @param {Event} event Accepts the event object\n   * @param {boolean} muteOnChange Accepts the value to enable or disable mute on change\n   * @param {number} index Accepts the index value\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.changeView = function (view, event, muteOnChange, index) {\n    var _this = this;\n    if (isNullOrUndefined(index)) {\n      index = this.getViewIndex(view);\n    }\n    if (!muteOnChange && index === this.viewIndex && this.currentView === view || index < 0) {\n      return;\n    }\n    var previousView = this.activeViewOptions ? this.activeViewOptions.option : this.currentView;\n    var args = {\n      requestType: 'viewNavigate',\n      cancel: false,\n      event: event\n    };\n    this.trigger(events.actionBegin, args, function (actionArgs) {\n      if (!actionArgs.cancel) {\n        var navArgs = {\n          action: 'view',\n          cancel: false,\n          currentDate: _this.selectedDate,\n          previousView: previousView,\n          currentView: view,\n          viewIndex: index\n        };\n        _this.trigger(events.navigating, navArgs, function (navigationArgs) {\n          if (!navigationArgs.cancel) {\n            var isVertical = ['Day', 'Week', 'WorkWeek'].indexOf(view) > -1 && ['Day', 'Week', 'WorkWeek'].indexOf(previousView) < 0;\n            _this.uiStateValues.isInitial = isVertical || view.indexOf('Timeline') > -1 || view.indexOf('Year') > -1;\n            _this.uiStateValues.top = view.indexOf('Timeline') > -1 && previousView.indexOf('Timeline') < 0 ? 0 : _this.uiStateValues.top;\n            _this.viewIndex = navigationArgs.viewIndex;\n            _this.setProperties({\n              currentView: view\n            }, true);\n            if (_this.headerModule) {\n              _this.headerModule.updateActiveView();\n              _this.headerModule.setCalendarDate(_this.selectedDate);\n              _this.headerModule.setCalendarView();\n            }\n            _this.initializeView(_this.currentView);\n            _this.animateLayout();\n            args = {\n              requestType: 'viewNavigate',\n              cancel: false,\n              event: event\n            };\n            _this.trigger(events.actionComplete, args);\n          } else {\n            _this.currentView = previousView;\n          }\n        });\n      } else {\n        _this.currentView = previousView;\n      }\n    });\n  };\n  /**\n   * Method to change the view date\n   *\n   * @param {Date} selectedDate Accepts the selected date\n   * @param {Event} event Accepts the event object\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.changeDate = function (selectedDate, event) {\n    var _this = this;\n    var args = {\n      requestType: 'dateNavigate',\n      cancel: false,\n      event: event\n    };\n    this.trigger(events.actionBegin, args, function (actionArgs) {\n      if (!actionArgs.cancel) {\n        var navArgs = {\n          action: 'date',\n          cancel: false,\n          previousDate: _this.selectedDate,\n          currentDate: selectedDate\n        };\n        _this.trigger(events.navigating, navArgs, function (navigationArgs) {\n          if (!navigationArgs.cancel) {\n            _this.uiStateValues.isInitial = _this.activeView.isTimelineView() && _this.currentView !== 'TimelineYear';\n            _this.validateDate(navigationArgs.currentDate);\n            if (_this.headerModule) {\n              _this.headerModule.setCalendarDate(navigationArgs.currentDate);\n            }\n            if (_this.currentView === 'MonthAgenda' && _this.monthAgendaModule) {\n              _this.monthAgendaModule.monthAgendaDate = new Date('' + _this.selectedDate);\n            }\n            _this.initializeView(_this.currentView);\n            _this.animateLayout();\n            args = {\n              requestType: 'dateNavigate',\n              cancel: false,\n              event: event\n            };\n            _this.trigger(events.actionComplete, args);\n          }\n        });\n      }\n    });\n  };\n  /**\n   * Method to validate min and max date\n   *\n   * @param {Date} date Accepts the date object\n   * @returns {boolean} Returns the boolean result to validate the min and max date\n   * @private\n   */\n  Schedule.prototype.isMinMaxDate = function (date) {\n    if (date === void 0) {\n      date = this.selectedDate;\n    }\n    var maxDate = isNullOrUndefined(this.maxDate) ? new Date(2099, 11, 31) : this.maxDate;\n    var minDate = isNullOrUndefined(this.minDate) ? new Date(1900, 0, 1) : this.minDate;\n    return date.getTime() >= minDate.getTime() && date.getTime() <= maxDate.getTime();\n  };\n  /**\n   * Method to validate the selected date\n   *\n   * @param {Date} date Accepts the date object\n   * @returns {boolean} Returns the boolean value for given date is selected date or not\n   * @private\n   */\n  Schedule.prototype.isSelectedDate = function (date) {\n    return date.setHours(0, 0, 0, 0) === new Date('' + this.selectedDate).setHours(0, 0, 0, 0);\n  };\n  /**\n   * Method to get the current time\n   *\n   * @param {Date} date Accepts the date object\n   * @returns {Date} Returns the date object after performing the timezone conversion\n   * @private\n   */\n  Schedule.prototype.getCurrentTime = function (date) {\n    if (date === void 0) {\n      date = new Date();\n    }\n    if (this.timezone) {\n      return this.tzModule.convert(date, this.tzModule.getLocalTimezoneName(), this.timezone);\n    }\n    return date;\n  };\n  /** Method to get navigate view\n   *\n   * @returns {View} Return the navigate view name\n   * @private\n   */\n  Schedule.prototype.getNavigateView = function () {\n    if (this.activeView.isTimelineView()) {\n      return this.currentView === 'TimelineMonth' || this.currentView === 'TimelineYear' ? 'TimelineDay' : 'Agenda';\n    }\n    return 'Day';\n  };\n  Schedule.prototype.animateLayout = function () {\n    if (!this.activeView.element) {\n      return;\n    }\n    new Animation({\n      duration: 600,\n      name: 'FadeIn',\n      timingFunction: 'easeIn'\n    }).animate(this.activeView.element);\n  };\n  /**\n   * To provide the array of modules needed for control rendering\n   *\n   * @returns {ModuleDeclaration[]} Returns the declared modules\n   * @private\n   */\n  Schedule.prototype.requiredModules = function () {\n    var modules = [];\n    this.setViewOptions(true);\n    for (var _i = 0, _a = Object.keys(this.viewOptions); _i < _a.length; _i++) {\n      var view = _a[_i];\n      view = view === 'timelineDay' || view === 'timelineWeek' || view === 'timelineWorkWeek' ? 'timelineViews' : view;\n      modules.push({\n        member: view,\n        args: [this]\n      });\n    }\n    if (this.allowDragAndDrop) {\n      modules.push({\n        member: 'dragAndDrop',\n        args: [this]\n      });\n    }\n    if (this.allowResizing) {\n      modules.push({\n        member: 'resize',\n        args: [this]\n      });\n    }\n    modules.push({\n      member: 'excelExport',\n      args: [this]\n    });\n    modules.push({\n      member: 'iCalendarExport',\n      args: [this]\n    });\n    modules.push({\n      member: 'iCalendarImport',\n      args: [this]\n    });\n    modules.push({\n      member: 'print',\n      args: [this]\n    });\n    return modules;\n  };\n  /**\n   * Initializes the values of private members.\n   *\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.preRender = function () {\n    this.isAdaptive = Browser.isDevice || util.isIPadDevice();\n    this.globalize = new Internationalization(this.locale);\n    this.tzModule = new Timezone();\n    if (this && isNullOrUndefined(this.uiStateValues) || !this.enablePersistence) {\n      this.uiStateValues = {\n        expand: false,\n        isInitial: true,\n        left: 0,\n        top: 0,\n        isGroupAdaptive: false,\n        isIgnoreOccurrence: false,\n        groupIndex: this.adaptiveGroupIndex,\n        action: false,\n        isBlock: false,\n        isCustomMonth: true,\n        isPreventTimezone: false,\n        isTransformed: false\n      };\n    }\n    this.currentTimezoneDate = this.getCurrentTime();\n    this.activeCellsData = {\n      startTime: new Date(this.currentTimezoneDate),\n      endTime: new Date(this.currentTimezoneDate),\n      isAllDay: false\n    };\n    this.activeEventData = {\n      event: undefined,\n      element: undefined\n    };\n    this.getDefaultLocale();\n    this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    this.setCldrTimeFormat();\n    this.setCalendarMode();\n    this.eventsData = [];\n    this.eventsProcessed = [];\n    this.blockData = [];\n    this.blockProcessed = [];\n    this.resourceCollection = [];\n    this.currentAction = null;\n    this.selectedElements = [];\n    this.activeEventTemplates = [];\n    this.setViewOptions();\n  };\n  Schedule.prototype.getDefaultLocale = function () {\n    this.defaultLocale = {\n      day: 'Day',\n      week: 'Week',\n      workWeek: 'Work Week',\n      month: 'Month',\n      year: 'Year',\n      agenda: 'Agenda',\n      weekAgenda: 'Week Agenda',\n      workWeekAgenda: 'Work Week Agenda',\n      monthAgenda: 'Month Agenda',\n      today: 'Today',\n      noEvents: 'No events',\n      emptyContainer: 'There are no events scheduled on this day.',\n      allDay: 'All day',\n      start: 'Start',\n      end: 'End',\n      more: 'more',\n      close: 'Close',\n      cancel: 'Cancel',\n      noTitle: '(No Title)',\n      delete: 'Delete',\n      deleteEvent: 'Delete Event',\n      deleteMultipleEvent: 'Delete Multiple Events',\n      selectedItems: 'Items selected',\n      deleteSeries: 'Entire Series',\n      edit: 'Edit',\n      editSeries: 'Entire Series',\n      editEvent: 'Edit Event',\n      createEvent: 'Create',\n      subject: 'Subject',\n      addTitle: 'Add title',\n      moreDetails: 'More Details',\n      moreEvents: 'More Events',\n      save: 'Save',\n      editContent: 'How would you like to change the appointment in the series?',\n      deleteContent: 'Are you sure you want to delete this event?',\n      deleteMultipleContent: 'Are you sure you want to delete the selected events?',\n      newEvent: 'New Event',\n      title: 'Title',\n      location: 'Location',\n      description: 'Description',\n      timezone: 'Timezone',\n      startTimezone: 'Start Timezone',\n      endTimezone: 'End Timezone',\n      repeat: 'Repeat',\n      saveButton: 'Save',\n      cancelButton: 'Cancel',\n      deleteButton: 'Delete',\n      recurrence: 'Recurrence',\n      wrongPattern: 'The recurrence pattern is not valid.',\n      seriesChangeAlert: 'Do you want to cancel the changes made to specific ' + 'instances of this series and match it to the whole series again?',\n      createError: 'The duration of the event must be shorter than how frequently it occurs. ' + 'Shorten the duration, or change the recurrence pattern in the recurrence event editor.',\n      sameDayAlert: 'Two occurrences of the same event cannot occur on the same day.',\n      occurenceAlert: 'Cannot reschedule an occurrence of the recurring appointment if it skips over ' + 'a later occurrence of the same appointment.',\n      editRecurrence: 'Edit Recurrence',\n      recurringEvent: 'Recurring Event',\n      repeats: 'Repeats',\n      alert: 'Alert',\n      startEndError: 'The selected end date occurs before the start date.',\n      invalidDateError: 'The entered date value is invalid.',\n      blockAlert: 'Events cannot be scheduled within the blocked time range.',\n      overlapAlert: 'Events cannot be scheduled during the chosen time as it overlaps with another event.',\n      ok: 'Ok',\n      yes: 'Yes',\n      no: 'No',\n      of: 'of',\n      occurrence: 'Occurrence',\n      series: 'Series',\n      previous: 'Previous',\n      next: 'Next',\n      timelineDay: 'Timeline Day',\n      timelineWeek: 'Timeline Week',\n      timelineWorkWeek: 'Timeline Work Week',\n      timelineMonth: 'Timeline Month',\n      timelineYear: 'Timeline Year',\n      editFollowingEvent: 'Following Events',\n      deleteTitle: 'Delete Event',\n      editTitle: 'Edit Event',\n      beginFrom: 'Begin From',\n      endAt: 'Ends At',\n      expandAllDaySection: 'Expand-all-day-section',\n      collapseAllDaySection: 'Collapse-all-day-section',\n      searchTimezone: 'Search Timezone',\n      noRecords: 'No records found'\n    };\n  };\n  Schedule.prototype.wireEvents = function () {\n    EventHandler.add(window, 'resize', this.onScheduleResize, this);\n    EventHandler.add(window, 'orientationchange', this.onScheduleResize, this);\n    EventHandler.add(document, Browser.touchStartEvent, this.onDocumentClick, this);\n    if (this.allowClipboard) {\n      EventHandler.add(document, 'paste', this.onDocumentPaste, this);\n    }\n  };\n  /**\n   * Method to remove selected class\n   *\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.removeSelectedClass = function () {\n    var selectedCells = this.getSelectedCells();\n    for (var _i = 0, selectedCells_1 = selectedCells; _i < selectedCells_1.length; _i++) {\n      var cell = selectedCells_1[_i];\n      cell.removeAttribute('tabindex');\n    }\n    removeClass(selectedCells, cls.SELECTED_CELL_CLASS);\n    if (this.keyboardInteractionModule && this.keyboardInteractionModule.selectedCells.length > 0) {\n      this.keyboardInteractionModule.selectedCells = [];\n    }\n  };\n  /**\n   * Method to add selected class\n   *\n   * @param {HTMLTableCellElement[]} cells Accepts the collection of elements\n   * @param {HTMLTableCellElement} focusCell Accepts the focus element\n   * @param {boolean} isPreventScroll Accepts the boolean value to prevent scroll\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.addSelectedClass = function (cells, focusCell, isPreventScroll) {\n    addClass(cells, cls.SELECTED_CELL_CLASS);\n    if (focusCell) {\n      focusCell.setAttribute('tabindex', '0');\n      focusCell.focus({\n        preventScroll: isPreventScroll || false\n      });\n    }\n  };\n  /**\n   * Method to select cell\n   *\n   * @param {HTMLElement | HTMLTableCellElement} element Accepts the select element\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.selectCell = function (element) {\n    this.removeSelectedClass();\n    this.addSelectedClass([element], element);\n  };\n  /**\n   * Method to get all day row element\n   *\n   * @returns {Element} Returns the all day row element\n   * @private\n   */\n  Schedule.prototype.getAllDayRow = function () {\n    return this.element.querySelector('.' + cls.ALLDAY_ROW_CLASS);\n  };\n  /**\n   * Method to get content table element\n   *\n   * @returns {HTMLElement} Returns the content table element\n   * @private\n   */\n  Schedule.prototype.getContentTable = function () {\n    return this.activeView.element.querySelector('.' + cls.CONTENT_TABLE_CLASS + ' tbody');\n  };\n  /**\n   * Method to get all content table rows\n   *\n   * @returns {HTMLElement[]} Returns the content table rows\n   * @private\n   */\n  Schedule.prototype.getTableRows = function () {\n    return [].slice.call(this.element.querySelectorAll('.' + cls.CONTENT_TABLE_CLASS + ' tbody tr:not(.' + cls.HIDDEN_CLASS + ')'));\n  };\n  /**\n   * Method to get work cell elements\n   *\n   * @returns {Element[]} Returns the all work cell elements\n   * @private\n   */\n  Schedule.prototype.getWorkCellElements = function () {\n    return [].slice.call(this.element.querySelectorAll('.' + cls.WORK_CELLS_CLASS));\n  };\n  /**\n   * Method to get the index from date collection\n   *\n   * @param {Date[]} collection Accepts the collections of date\n   * @param {Date} date Accepts the date object\n   * @returns {number} Returns the index compared date with date collections\n   * @private\n   */\n  Schedule.prototype.getIndexOfDate = function (collection, date) {\n    return collection.map(Number).indexOf(+date);\n  };\n  /**\n   * Method to find all day cell\n   *\n   * @param {Element} td Accepts the DOM Element\n   * @returns {boolean} Returns the boolean value\n   * @private\n   */\n  Schedule.prototype.isAllDayCell = function (td) {\n    if (['Month', 'TimelineMonth', 'TimelineYear', 'MonthAgenda'].indexOf(this.currentView) > -1 || td.classList.contains(cls.ALLDAY_CELLS_CLASS) || td.classList.contains(cls.HEADER_CELLS_CLASS) || !this.activeViewOptions.timeScale.enable) {\n      return true;\n    }\n    if (this.activeView.isTimelineView() && this.activeViewOptions.headerRows.length > 0 && this.activeViewOptions.headerRows.slice(-1)[0].option !== 'Hour') {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Method to get date from element\n   *\n   * @param {Element} td Accepts the DOM element\n   * @returns {Date} Returns the date object\n   * @private\n   */\n  Schedule.prototype.getDateFromElement = function (td) {\n    var dateString;\n    if (!isNullOrUndefined(td)) {\n      dateString = td.getAttribute('data-date');\n    }\n    if (!isNullOrUndefined(dateString)) {\n      var dateInMS = parseInt(dateString, 10);\n      var date = new Date(dateInMS);\n      return date;\n    }\n    return undefined;\n  };\n  /**\n   * Method to get target element from given selector\n   *\n   * @param {string} selector Accepts the element selector\n   * @param {number} left Accepts the pageX value\n   * @param {number} top Accepts the pageY value\n   * @returns {Element[]} Returns the collection of elements based on the given selector\n   * @private\n   */\n  Schedule.prototype.getTargetElement = function (selector, left, top) {\n    var element = document.elementFromPoint(left, top);\n    var targetElement;\n    if (element) {\n      targetElement = element.closest(selector);\n    }\n    return targetElement ? [targetElement] : null;\n  };\n  /**\n   * Method to process cell header template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getCellHeaderTemplate = function () {\n    return this.cellHeaderTemplateFn;\n  };\n  /**\n   * Method to process cell header template in year view.\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getDayHeaderTemplate = function () {\n    return this.dayHeaderTemplateFn;\n  };\n  /**\n   * Method to process cell header template in year view.\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getMonthHeaderTemplate = function () {\n    return this.monthHeaderTemplateFn;\n  };\n  /**\n   * Method to process cell template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getCellTemplate = function () {\n    return this.cellTemplateFn;\n  };\n  /**\n   * Method to process date header template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getDateHeaderTemplate = function () {\n    return this.dateHeaderTemplateFn;\n  };\n  /**\n   * Method to process date range template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getDateRangeTemplate = function () {\n    return this.dateRangeTemplateFn;\n  };\n  /**\n   * Method to process major slot template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getMajorSlotTemplate = function () {\n    return this.majorSlotTemplateFn;\n  };\n  /**\n   * Method to process minor slot template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getMinorSlotTemplate = function () {\n    return this.minorSlotTemplateFn;\n  };\n  /**\n   * Method to process appointment template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getAppointmentTemplate = function () {\n    return this.appointmentTemplateFn;\n  };\n  /**\n   * Method to process appointment tooltip template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getEventTooltipTemplate = function () {\n    return this.eventTooltipTemplateFn;\n  };\n  /**\n   * Method to process header tooltip template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getHeaderTooltipTemplate = function () {\n    return this.headerTooltipTemplateFn;\n  };\n  /**\n   * Method to process editor template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getEditorTemplate = function () {\n    return this.editorTemplateFn;\n  };\n  /**\n   * Method to process editor header template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getEditorHeaderTemplate = function () {\n    return this.editorHeaderTemplateFn;\n  };\n  /**\n   * Method to process editor footer template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getEditorFooterTemplate = function () {\n    return this.editorFooterTemplateFn;\n  };\n  /**\n   * Method to process quick info header template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getQuickInfoTemplatesHeader = function () {\n    return this.quickInfoTemplatesHeaderFn;\n  };\n  /**\n   * Method to process quick info content template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getQuickInfoTemplatesContent = function () {\n    return this.quickInfoTemplatesContentFn;\n  };\n  /**\n   * Method to process quick info footer template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getQuickInfoTemplatesFooter = function () {\n    return this.quickInfoTemplatesFooterFn;\n  };\n  /**\n   * Method to process resource header template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getResourceHeaderTemplate = function () {\n    return this.resourceHeaderTemplateFn;\n  };\n  /**\n   * Method to process indent template\n   *\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.getHeaderIndentTemplate = function () {\n    return this.headerIndentTemplateFn;\n  };\n  /**\n   * Method to get dynamic CSS properties\n   *\n   * @returns {ScrollCss} Returns the CSS properties dynamically\n   * @private\n   */\n  Schedule.prototype.getCssProperties = function () {\n    var cssProps = {\n      border: this.enableRtl ? 'borderLeftWidth' : 'borderRightWidth',\n      padding: this.enableRtl ? 'paddingLeft' : 'paddingRight',\n      rtlBorder: this.enableRtl ? 'borderRightWidth' : 'borderLeftWidth',\n      rtlPadding: this.enableRtl ? 'paddingRight' : 'paddingLeft'\n    };\n    return cssProps;\n  };\n  /**\n   * Method to remove new event element in adaptive mode\n   *\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.removeNewEventElement = function () {\n    var eventClone = this.element.querySelector('.' + cls.NEW_EVENT_CLASS);\n    if (!isNullOrUndefined(eventClone)) {\n      remove(eventClone);\n    }\n  };\n  /**\n   * Method to get start end time from string\n   *\n   * @param {string} startEndTime Accepts the start end time string value\n   * @returns {Date} Returns the date object\n   * @private\n   */\n  Schedule.prototype.getStartEndTime = function (startEndTime) {\n    if (!isNullOrUndefined(startEndTime) && startEndTime !== '') {\n      var startEndDate = util.resetTime(new Date(this.currentTimezoneDate) || this.getCurrentTime());\n      var timeString = startEndTime.split(':');\n      if (timeString.length === 2) {\n        startEndDate.setHours(parseInt(timeString[0], 10), parseInt(timeString[1], 10), 0);\n      }\n      return startEndDate;\n    }\n    return null;\n  };\n  Schedule.prototype.onDocumentClick = function (args) {\n    this.notify(events.documentClick, {\n      event: args\n    });\n  };\n  Schedule.prototype.onDocumentPaste = function (args) {\n    this.notify(events.documentPaste, {\n      event: args\n    });\n  };\n  Schedule.prototype.onScheduleResize = function () {\n    if (isNullOrUndefined(this.activeView) || (this.isAdaptive || util.isMobile()) && document.activeElement && (document.activeElement.classList.contains(cls.SUBJECT_CLASS) || document.activeElement.classList.contains(cls.INLINE_SUBJECT_CLASS)) || this.uiStateValues.isTapHold) {\n      return;\n    }\n    if (this.virtualScrollModule && this.activeView.isTimelineView()) {\n      this.virtualScrollModule.refreshLayout();\n    }\n    if (this.activeViewOptions.timeScale.enable && this.activeView) {\n      this.activeView.highlightCurrentTime();\n    }\n    if (this.quickPopup) {\n      this.quickPopup.onClosePopup();\n    }\n    util.resetScrollbarWidth();\n    if (this.currentView === 'Month' || this.currentView !== 'Agenda' && this.currentView !== 'MonthAgenda' && !this.activeViewOptions.timeScale.enable || this.activeView.isTimelineView()) {\n      this.activeView.resetColWidth();\n      this.notify(events.scrollUiUpdate, {\n        cssProperties: this.getCssProperties(),\n        isPreventScrollUpdate: true\n      });\n      var isRemoteRefresh = false;\n      if (this.activeViewOptions.enableLazyLoading && this.virtualScrollModule && this.virtualScrollModule.isRemoteRefresh) {\n        isRemoteRefresh = this.virtualScrollModule.isRemoteRefresh;\n        this.virtualScrollModule.isRemoteRefresh = false;\n      }\n      this.refreshEvents(isRemoteRefresh);\n      if (this.virtualScrollModule && !this.virtualScrollModule.enableTransition) {\n        var resWrap = this.element.querySelector('.' + cls.RESOURCE_COLUMN_WRAP_CLASS);\n        var conWrap = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n        this.virtualScrollModule.enableTransition = true;\n        addClass([conWrap, resWrap], 'e-transition');\n      }\n    } else {\n      this.notify(events.contentReady, {});\n    }\n  };\n  /**\n   * Method to process the templates\n   *\n   * @param {string | Function} template Accepts the template in string\n   * @returns {CallbackFunction} Returns the callback function\n   * @private\n   */\n  Schedule.prototype.templateParser = function (template) {\n    if (template) {\n      try {\n        if (typeof template === 'function') {\n          return compile(template);\n        } else {\n          if (document.querySelectorAll(template).length) {\n            return compile(document.querySelector(template).innerHTML.trim());\n          } else {\n            return compile(template);\n          }\n        }\n      } catch (error) {\n        return compile(template);\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Retrieves the selected cells.\n   *\n   * @returns {Element[]} The elements of currently selected cells will be returned.\n   * @private\n   */\n  Schedule.prototype.getSelectedCells = function () {\n    return [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_CELL_CLASS));\n  };\n  /**\n   * Method to generate the announcement string\n   *\n   * @param {Object} event Accepts the event object\n   * @param {string} subject Accepts the subject text\n   * @returns {string} Returns the announcement string\n   * @private\n   */\n  Schedule.prototype.getAnnouncementString = function (event, subject) {\n    var resourceName;\n    if (this.quickPopup && this.activeViewOptions.group.resources.length > 0) {\n      var constantText = '\"s event - ';\n      resourceName = this.quickPopup.getResourceText({\n        event: event\n      }, 'event') + constantText;\n    }\n    var recordSubject = subject || event[this.eventFields.subject] || this.eventSettings.fields.subject.default;\n    var recordLocation = event[this.eventFields.location] || this.eventSettings.fields.location.default;\n    var skeleton = 'full';\n    var startDateText = this.globalize.formatDate(event[this.eventFields.startTime], {\n      type: 'dateTime',\n      skeleton: skeleton,\n      calendar: this.getCalendarMode()\n    });\n    var endDateText = this.globalize.formatDate(event[this.eventFields.endTime], {\n      type: 'dateTime',\n      skeleton: skeleton,\n      calendar: this.getCalendarMode()\n    });\n    var announcementString = recordSubject + ' ' + this.localeObj.getConstant('beginFrom') + ' ' + startDateText + ' ' + this.localeObj.getConstant('endAt') + ' ' + endDateText;\n    if (resourceName) {\n      announcementString = resourceName + ' ' + announcementString;\n    }\n    if (recordLocation && recordLocation !== '') {\n      announcementString = announcementString + ' ' + this.localeObj.getConstant('location') + ' ' + recordLocation;\n    }\n    if (event[this.eventFields.recurrenceRule] && event[this.eventFields.recurrenceRule] !== '' && event[this.eventFields.id] === event[this.eventFields.recurrenceID]) {\n      announcementString = announcementString + ' ' + this.localeObj.getConstant('recurringEvent');\n    }\n    return announcementString;\n  };\n  /**\n   * Method to process the element boundary validation\n   *\n   * @param {number} pageY Accepts the pageY value\n   * @param {number} pageX Accepts the pageX value\n   * @returns {ResizeEdges} Returns the boundary validation object\n   * @private\n   */\n  Schedule.prototype.boundaryValidation = function (pageY, pageX) {\n    var autoScrollDistance = 30;\n    var scrollEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false\n    };\n    var viewBoundaries = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS).getBoundingClientRect();\n    if (pageY < viewBoundaries.top + autoScrollDistance + window.pageYOffset && pageY > viewBoundaries.top + window.pageYOffset) {\n      scrollEdges.top = true;\n    }\n    if (pageY > viewBoundaries.bottom - autoScrollDistance + window.pageYOffset && pageY < viewBoundaries.bottom + window.pageYOffset) {\n      scrollEdges.bottom = true;\n    }\n    if (pageX < viewBoundaries.left + autoScrollDistance + window.pageXOffset && pageX > viewBoundaries.left + window.pageXOffset) {\n      scrollEdges.left = true;\n    }\n    if (pageX > viewBoundaries.right - autoScrollDistance + window.pageXOffset && pageX < viewBoundaries.right + window.pageXOffset) {\n      scrollEdges.right = true;\n    }\n    return scrollEdges;\n  };\n  /**\n   * Method to get the week number.\n   *\n   * @param {Date[]} dates Accepts the date collections\n   * @returns {number} Returns the week number\n   * @private\n   */\n  Schedule.prototype.getWeekNumberContent = function (dates) {\n    var weekNumber;\n    if (this.weekRule === 'FirstDay') {\n      var weekNumberDate = util.getWeekLastDate(dates.slice(-1)[0], this.firstDayOfWeek);\n      weekNumber = this.globalize.formatNumber(util.getWeekNumber(weekNumberDate));\n    } else if (this.weekRule === 'FirstFourDayWeek') {\n      var weekFirstDate = util.getWeekFirstDate(dates.slice(-1)[0], this.firstDayOfWeek);\n      var weekLastDate = util.getWeekLastDate(dates.slice(-1)[0], this.firstDayOfWeek);\n      var weekMidDate = util.getWeekMiddleDate(weekFirstDate, weekLastDate);\n      weekNumber = this.globalize.formatNumber(util.getWeekNumber(weekMidDate));\n    } else if (this.weekRule === 'FirstFullWeek') {\n      var weekFirstDate = util.getWeekFirstDate(dates.slice(-1)[0], this.firstDayOfWeek);\n      weekNumber = this.globalize.formatNumber(util.getWeekNumber(weekFirstDate));\n    }\n    return weekNumber;\n  };\n  /**\n   * Method to render the header indent template.\n   *\n   * @param {TdData} data Accepts the td data\n   * @param {Element} td Accepts the td element\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.renderHeaderIndentTemplate = function (data, td) {\n    if (this.activeViewOptions.headerIndentTemplate) {\n      var scheduleId = this.element.id + '_';\n      var viewName = this.activeViewOptions.headerIndentTemplateName;\n      var templateId = scheduleId + viewName + 'headerIndentTemplate';\n      var indentTemplate = [].slice.call(this.getHeaderIndentTemplate()(data, this, 'headerIndentTemplate', templateId, false, undefined, undefined, this.root));\n      append(indentTemplate, td);\n    }\n  };\n  /**\n   * Method to check for refreshing the targeted resource row events.\n   *\n   * @returns {boolean} Returns the boolean value\n   * @private\n   */\n  Schedule.prototype.isSpecificResourceEvents = function () {\n    return this.activeViewOptions.group.resources.length > 0 && !this.activeViewOptions.group.allowGroupEdit && !this.rowAutoHeight && !this.virtualScrollModule && this.activeViewOptions.group.byGroupID;\n  };\n  Schedule.prototype.unWireEvents = function () {\n    EventHandler.remove(window, 'resize', this.onScheduleResize);\n    EventHandler.remove(window, 'orientationchange', this.onScheduleResize);\n    EventHandler.remove(document, Browser.touchStartEvent, this.onDocumentClick);\n    EventHandler.remove(document, 'paste', this.onDocumentPaste);\n  };\n  /**\n   * Core method to return the component name.\n   *\n   * @returns {string} Returns the module name\n   * @private\n   */\n  Schedule.prototype.getModuleName = function () {\n    return 'schedule';\n  };\n  /**\n   * Returns the properties to be maintained in the persisted state.\n   *\n   * @returns {string} Returns the persistance data\n   * @private\n   */\n  Schedule.prototype.getPersistData = function () {\n    return this.addOnPersist(['currentView', 'selectedDate', 'scrollTop', 'scrollLeft', 'adaptiveGroupIndex']);\n  };\n  /**\n   * Called internally, if any of the property value changed.\n   *\n   * @returns {void}\n   * @private\n   */\n  Schedule.prototype.onPropertyChanged = function (newProp, oldProp) {\n    if (this.isReact && isNullOrUndefined(this.activeView)) {\n      return;\n    }\n    var state = {\n      isRefresh: false,\n      isResource: false,\n      isDate: false,\n      isView: false,\n      isLayout: false,\n      isDataManager: false\n    };\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'views':\n          this.setViewOptions();\n          if (this.headerModule) {\n            this.headerModule.updateItems();\n          }\n          state.isView = true;\n          break;\n        case 'currentView':\n          state.isView = true;\n          break;\n        case 'minDate':\n        case 'maxDate':\n        case 'selectedDate':\n          state.isDate = true;\n          break;\n        case 'dateFormat':\n          this.activeViewOptions = this.getActiveViewOptions();\n          if (this.headerModule) {\n            this.headerModule.updateDateRange();\n          }\n          break;\n        case 'showHeaderBar':\n        case 'toolbarItems':\n          this.destroyHeaderModule();\n          if (newProp.showHeaderBar) {\n            this.headerModule = new HeaderRenderer(this);\n            this.headerModule.updateDateRange();\n          }\n          this.notify(events.scrollUiUpdate, {\n            cssProperties: this.getCssProperties()\n          });\n          if (this.activeView.isTimelineView()) {\n            this.refreshEvents(false);\n          }\n          break;\n        case 'workDays':\n          if (JSON.stringify(oldProp.workDays) !== JSON.stringify(newProp.workDays)) {\n            state.isLayout = true;\n          }\n          break;\n        case 'showWeekend':\n        case 'startHour':\n        case 'endHour':\n        case 'workHours':\n        case 'readonly':\n        case 'headerRows':\n        case 'showWeekNumber':\n        case 'rowAutoHeight':\n          state.isLayout = true;\n          break;\n        case 'locale':\n        case 'calendarMode':\n          this.globalize = new Internationalization(this.locale);\n          this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n          this.setCldrTimeFormat();\n          this.setCalendarMode();\n          state.isRefresh = true;\n          break;\n        case 'firstDayOfWeek':\n          this.activeViewOptions.firstDayOfWeek = newProp.firstDayOfWeek;\n          if (this.eventWindow) {\n            this.eventWindow.refreshRecurrenceEditor();\n          }\n          state.isLayout = true;\n          break;\n        case 'showTimeIndicator':\n          if (this.activeViewOptions.timeScale.enable && this.activeView) {\n            this.activeView.highlightCurrentTime();\n          }\n          break;\n        case 'cellHeaderTemplate':\n          this.activeViewOptions.cellHeaderTemplate = newProp.cellHeaderTemplate;\n          this.cellHeaderTemplateFn = this.templateParser(this.activeViewOptions.cellHeaderTemplate);\n          state.isLayout = true;\n          break;\n        case 'cellTemplate':\n          this.activeViewOptions.cellTemplate = newProp.cellTemplate;\n          this.cellTemplateFn = this.templateParser(this.activeViewOptions.cellTemplate);\n          state.isLayout = true;\n          break;\n        case 'dateHeaderTemplate':\n          this.activeViewOptions.dateHeaderTemplate = newProp.dateHeaderTemplate;\n          this.dateHeaderTemplateFn = this.templateParser(this.activeViewOptions.dateHeaderTemplate);\n          state.isLayout = true;\n          break;\n        case 'dateRangeTemplate':\n          this.activeViewOptions.dateRangeTemplate = newProp.dateRangeTemplate;\n          this.dateRangeTemplateFn = this.templateParser(this.activeViewOptions.dateRangeTemplate);\n          if (this.headerModule) {\n            this.headerModule.updateDateRange();\n          }\n          break;\n        case 'dayHeaderTemplate':\n          this.activeViewOptions.dayHeaderTemplate = newProp.dayHeaderTemplate;\n          this.dayHeaderTemplateFn = this.templateParser(this.activeViewOptions.dayHeaderTemplate);\n          state.isLayout = true;\n          break;\n        case 'monthHeaderTemplate':\n          this.activeViewOptions.monthHeaderTemplate = newProp.monthHeaderTemplate;\n          this.monthHeaderTemplateFn = this.templateParser(this.activeViewOptions.monthHeaderTemplate);\n          state.isLayout = true;\n          break;\n        case 'resourceHeaderTemplate':\n          this.activeViewOptions.resourceHeaderTemplate = newProp.resourceHeaderTemplate;\n          this.resourceHeaderTemplateFn = this.templateParser(this.activeViewOptions.resourceHeaderTemplate);\n          state.isLayout = true;\n          break;\n        case 'timezone':\n          this.eventBase.timezonePropertyChange(oldProp.timezone);\n          if (this.headerModule) {\n            this.headerModule.setCalendarTimezone();\n          }\n          break;\n        case 'enableRtl':\n          this.setRtlClass();\n          state.isRefresh = true;\n          break;\n        default:\n          this.extendedPropertyChange(prop, newProp, oldProp, state);\n          break;\n      }\n    }\n    this.propertyChangeAction(state);\n  };\n  Schedule.prototype.propertyChangeAction = function (state) {\n    if (state.isRefresh) {\n      this.refresh();\n    } else if (state.isResource) {\n      this.initializeResources(true);\n    } else if (state.isView) {\n      this.changeView(this.currentView, null, true);\n    } else if (state.isDate) {\n      if (isNullOrUndefined(this.selectedDate)) {\n        this.setProperties({\n          selectedDate: this.getCurrentTime()\n        }, true);\n      }\n      this.changeDate(this.selectedDate);\n    } else if (state.isLayout) {\n      this.activeCellsData = null;\n      this.initializeView(this.currentView);\n    } else if (state.isDataManager && this.crudModule) {\n      if (this.dragAndDropModule) {\n        this.dragAndDropModule.actionObj.action = '';\n        removeClass([this.element], cls.EVENT_ACTION_CLASS);\n      }\n      this.crudModule.refreshDataManager();\n    }\n  };\n  Schedule.prototype.allDayRowScrollUpdate = function () {\n    var dateHeader = this.element.querySelector('.' + cls.DATE_HEADER_WRAP_CLASS);\n    var allDayRow = this.element.querySelector('.' + cls.ALLDAY_ROW_CLASS);\n    if (this.height === 'auto' || !this.enableAllDayScroll) {\n      addClass([dateHeader], cls.ALLDAY_APPOINTMENT_AUTO);\n      if (dateHeader.classList.contains(cls.ALLDAY_APPOINTMENT_SCROLL)) {\n        removeClass([dateHeader], cls.ALLDAY_APPOINTMENT_SCROLL);\n      }\n      if (this.uiStateValues.expand) {\n        var allDayCells = [].slice.call(this.element.querySelectorAll('.' + cls.ALLDAY_CELLS_CLASS));\n        allDayCells[0].style.height = allDayRow.style.height ? allDayRow.style.height : allDayCells[1].style.height;\n      }\n    } else {\n      if (dateHeader.classList.contains(cls.ALLDAY_APPOINTMENT_AUTO)) {\n        removeClass([dateHeader], cls.ALLDAY_APPOINTMENT_AUTO);\n      }\n      this.eventBase.allDayExpandScroll(dateHeader);\n    }\n    if (!this.uiStateValues.expand) {\n      allDayRow.style.height = '';\n    }\n  };\n  Schedule.prototype.extendedPropertyChange = function (prop, newProp, oldProp, state) {\n    switch (prop) {\n      case 'width':\n      case 'height':\n      case 'enableAllDayScroll':\n        if (['Day', 'Week', 'WorkWeek'].indexOf(this.currentView) > -1) {\n          this.allDayRowScrollUpdate();\n        }\n        this.notify(events.uiUpdate, {\n          module: 'scroll',\n          properties: {\n            width: newProp.width,\n            height: newProp.height\n          }\n        });\n        break;\n      case 'cssClass':\n        if (oldProp.cssClass) {\n          removeClass([this.element], oldProp.cssClass.split(' '));\n        }\n        if (newProp.cssClass) {\n          addClass([this.element], newProp.cssClass.split(' '));\n        }\n        break;\n      case 'hideEmptyAgendaDays':\n      case 'agendaDaysCount':\n        this.activeViewOptions = this.getActiveViewOptions();\n        state.isView = true;\n        break;\n      case 'eventSettings':\n        this.onEventSettingsPropertyChanged(newProp.eventSettings, oldProp.eventSettings, state);\n        break;\n      case 'allowKeyboardInteraction':\n      case 'allowClipboard':\n        if (this.keyboardInteractionModule) {\n          this.keyboardInteractionModule.destroy();\n          this.keyboardInteractionModule = null;\n        }\n        if (newProp.allowKeyboardInteraction || newProp.allowClipboard) {\n          this.keyboardInteractionModule = new KeyboardInteraction(this);\n        }\n        break;\n      case 'timezoneDataSource':\n        if (this.eventWindow) {\n          this.eventWindow.refresh();\n        }\n        break;\n      case 'editorTemplate':\n        if (!isNullOrUndefined(this.editorTemplate)) {\n          this.editorTemplateFn = this.templateParser(this.editorTemplate);\n        }\n        if (this.eventWindow) {\n          this.eventWindow.setDialogContent();\n        }\n        break;\n      case 'editorHeaderTemplate':\n        if (!isNullOrUndefined(this.editorHeaderTemplate)) {\n          this.editorHeaderTemplateFn = this.templateParser(this.editorHeaderTemplate);\n        }\n        if (this.eventWindow) {\n          this.eventWindow.setDialogHeader();\n        }\n        break;\n      case 'editorFooterTemplate':\n        if (!isNullOrUndefined(this.editorFooterTemplate)) {\n          this.editorFooterTemplateFn = this.templateParser(this.editorFooterTemplate);\n        }\n        if (this.eventWindow) {\n          this.eventWindow.setDialogFooter();\n        }\n        break;\n      case 'quickInfoTemplates':\n        if (this.quickInfoTemplates.header) {\n          this.quickInfoTemplatesHeaderFn = this.templateParser(this.quickInfoTemplates.header);\n        }\n        if (this.quickInfoTemplates.content) {\n          this.quickInfoTemplatesContentFn = this.templateParser(this.quickInfoTemplates.content);\n        }\n        if (this.quickInfoTemplates.footer) {\n          this.quickInfoTemplatesFooterFn = this.templateParser(this.quickInfoTemplates.footer);\n        }\n        break;\n      case 'group':\n        this.onGroupSettingsPropertyChanged(newProp.group, oldProp.group, state);\n        break;\n      case 'resources':\n        state.isResource = true;\n        break;\n      case 'timeScale':\n        this.activeViewOptions.timeScale.interval = newProp.timeScale.interval || this.activeViewOptions.timeScale.interval;\n        this.activeViewOptions.timeScale.slotCount = newProp.timeScale.slotCount || this.activeViewOptions.timeScale.slotCount;\n        if (this.eventWindow) {\n          this.eventWindow.refreshDateTimePicker();\n        }\n        state.isLayout = true;\n        break;\n      case 'allowDragAndDrop':\n      case 'allowResizing':\n      case 'eventDragArea':\n      case 'allowOverlap':\n        this.refreshEvents(false);\n        break;\n      case 'weekRule':\n        state.isLayout = true;\n        break;\n      case 'firstMonthOfYear':\n        this.activeViewOptions.firstMonthOfYear = newProp.firstMonthOfYear;\n        this.viewIndex = this.activeView.viewIndex;\n        state.isLayout = true;\n        break;\n      case 'monthsCount':\n        this.activeViewOptions.monthsCount = newProp.monthsCount;\n        this.viewIndex = this.activeView.viewIndex;\n        state.isLayout = true;\n        break;\n      case 'timeFormat':\n        this.internalTimeFormat = newProp.timeFormat || this.activeViewOptions.timeFormat;\n        if (this.eventWindow) {\n          this.eventWindow.refreshDateTimePicker();\n        }\n        state.isLayout = true;\n        break;\n      case 'enableAdaptiveUI':\n        if (this.showHeaderBar && this.headerModule) {\n          this.destroyHeaderModule();\n          this.headerModule = new HeaderRenderer(this);\n          this.headerModule.updateDateRange();\n        }\n        state.isLayout = true;\n        break;\n      case 'headerIndentTemplate':\n        this.activeViewOptions.headerIndentTemplate = newProp.headerIndentTemplate;\n        this.headerIndentTemplateFn = this.templateParser(this.activeViewOptions.headerIndentTemplate);\n        state.isLayout = true;\n        break;\n    }\n  };\n  Schedule.prototype.setRtlClass = function () {\n    if (this.enableRtl) {\n      addClass([this.element], 'e-rtl');\n    } else {\n      removeClass([this.element], 'e-rtl');\n    }\n  };\n  Schedule.prototype.onGroupSettingsPropertyChanged = function (newProp, oldProp, state) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      if (prop === 'headerTooltipTemplate') {\n        this.headerTooltipTemplateFn = this.templateParser(newProp.headerTooltipTemplate);\n      } else {\n        state.isLayout = true;\n        if (this.eventWindow) {\n          this.eventWindow.refresh();\n        }\n      }\n    }\n  };\n  Schedule.prototype.onEventSettingsPropertyChanged = function (newProp, oldProp, state) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'dataSource':\n        case 'query':\n        case 'fields':\n        case 'includeFiltersInQuery':\n          this.initializeDataModule();\n          state.isDataManager = true;\n          break;\n        case 'template':\n          this.activeViewOptions.eventTemplate = newProp.template;\n          this.appointmentTemplateFn = this.templateParser(this.activeViewOptions.eventTemplate);\n          state.isDataManager = true;\n          break;\n        case 'enableTooltip':\n          if (this.eventTooltip) {\n            this.eventTooltip.destroy();\n            this.eventTooltip = null;\n          }\n          if (newProp.enableTooltip) {\n            this.eventTooltip = new EventTooltip(this);\n          }\n          break;\n        case 'tooltipTemplate':\n          this.eventTooltipTemplateFn = this.templateParser(this.eventSettings.tooltipTemplate);\n          break;\n        case 'resourceColorField':\n          if (this.resourceBase) {\n            this.resourceBase.setResourceCollection();\n          }\n          state.isDataManager = true;\n          break;\n        case 'editFollowingEvents':\n          if (this.quickPopup) {\n            this.quickPopup.refreshQuickDialog();\n          }\n          break;\n        case 'allowAdding':\n        case 'allowEditing':\n        case 'allowDeleting':\n          if (this.showHeaderBar && this.headerModule) {\n            this.headerModule.updateAddIcon();\n          }\n          if (this.eventWindow) {\n            this.eventWindow.refresh();\n          }\n          break;\n        case 'spannedEventPlacement':\n        case 'minimumEventDuration':\n        case 'enableMaxHeight':\n        case 'enableIndicator':\n          this.refreshEvents(false);\n          break;\n        case 'ignoreWhitespace':\n          state.isLayout = true;\n          break;\n      }\n    }\n  };\n  Schedule.prototype.destroyHeaderModule = function () {\n    if (this.headerModule) {\n      this.headerModule.destroy();\n      this.headerModule = null;\n    }\n  };\n  Schedule.prototype.destroyPopups = function () {\n    if (this.quickPopup) {\n      this.quickPopup.destroy();\n      this.quickPopup = null;\n    }\n    if (this.eventWindow) {\n      this.eventWindow.destroy();\n      this.eventWindow = null;\n    }\n  };\n  /**\n   * Allows to show the spinner on schedule at the required scenarios.\n   *\n   * @function showSpinner\n   * @returns {void}\n   */\n  Schedule.prototype.showSpinner = function () {\n    showSpinner(this.element);\n  };\n  /**\n   * When the spinner is shown manually using `showSpinner` method, it can be hidden using this `hideSpinner` method.\n   *\n   * @function hideSpinner\n   * @returns {void}\n   */\n  Schedule.prototype.hideSpinner = function () {\n    hideSpinner(this.element);\n  };\n  /**\n   * Sets different working hours on the required working days by accepting the required start and end time as well as the date collection\n   *  as its parameters.\n   *\n   * @function setWorkHours\n   * @param {Date} dates Collection of dates on which the given start and end hour range needs to be applied.\n   * @param {string} start Defines the work start hour.\n   * @param {string} end Defines the work end hour.\n   * @param {number} groupIndex Defines the resource index from last level.\n   * @returns {void}\n   */\n  Schedule.prototype.setWorkHours = function (dates, start, end, groupIndex) {\n    var cells = [];\n    cells = this.getWorkHourCells(dates, start, end, groupIndex);\n    addClass(cells, cls.WORK_HOURS_CLASS);\n  };\n  /**\n   * Removes or resets different working hours on the required working days by accepting the required start and end time as well as the\n   * date collection as its parameters.\n   * if no parameters has been passed to this function, it will remove all the work hours.\n   *\n   * @param {Date} dates Collection of dates on which the given start and end hour range need to be applied.\n   * @param {string} start Defines the work start hour.\n   * @param {string} end Defines the work end hour.\n   * @param {number} groupIndex Defines the resource index from last level.\n   * @returns {void}\n   */\n  Schedule.prototype.resetWorkHours = function (dates, start, end, groupIndex) {\n    if (dates === void 0) {\n      dates = this.activeView.renderDates;\n    }\n    if (dates && start && end) {\n      var cells = this.getWorkHourCells(dates, start, end, groupIndex);\n      removeClass(cells, cls.WORK_HOURS_CLASS);\n    } else {\n      var workHourCells = [].slice.call(this.element.querySelectorAll('.' + cls.WORK_HOURS_CLASS));\n      removeClass(workHourCells, cls.WORK_HOURS_CLASS);\n    }\n  };\n  Schedule.prototype.getWorkHourCells = function (dates, start, end, groupIndex) {\n    if (['Agenda', 'MonthAgenda', 'Month', 'TimelineMonth'].indexOf(this.currentView) > -1) {\n      return [];\n    }\n    var startHour = this.getStartEndTime(start);\n    var endHour = this.getStartEndTime(end);\n    var tableEle = this.getContentTable();\n    if (isNullOrUndefined(startHour) || isNullOrUndefined(endHour) || !tableEle) {\n      return [];\n    }\n    startHour.setMilliseconds(0);\n    endHour.setMilliseconds(0);\n    var viewStartHour = this.activeView.getStartHour();\n    if (startHour < viewStartHour) {\n      startHour = viewStartHour;\n    }\n    var viewEndHour = this.activeView.getEndHour();\n    if (endHour > viewEndHour) {\n      endHour = viewEndHour;\n    }\n    var msMajorInterval = this.activeViewOptions.timeScale.interval * util.MS_PER_MINUTE;\n    var msInterval = msMajorInterval / this.activeViewOptions.timeScale.slotCount;\n    var offsetDiff = (viewStartHour.getTimezoneOffset() - startHour.getTimezoneOffset()) * util.MS_PER_MINUTE;\n    var endOffsetDiff = Math.abs((viewStartHour.getTimezoneOffset() - endHour.getTimezoneOffset()) * util.MS_PER_MINUTE);\n    var startIndex = Math.round((startHour.getTime() - viewStartHour.getTime() + offsetDiff) / msInterval);\n    var endIndex = Math.ceil((endHour.getTime() - viewStartHour.getTime() - endOffsetDiff) / msInterval);\n    var tempStartIndex = startIndex;\n    var tempEndIndex = endIndex;\n    var cells = [];\n    for (var _i = 0, dates_1 = dates; _i < dates_1.length; _i++) {\n      var date = dates_1[_i];\n      date = this.getDateTime(date);\n      util.resetTime(date);\n      var renderDates = this.activeView.renderDates;\n      if (!isNullOrUndefined(groupIndex) && this.resourceBase && !this.activeView.isTimelineView()) {\n        renderDates = this.resourceBase.lastResourceLevel[parseInt(groupIndex.toString(), 10)].renderDates;\n      }\n      var colIndex = this.getIndexOfDate(renderDates, date);\n      if (colIndex >= 0) {\n        if (this.activeView.isTimelineView()) {\n          var slotsPerDay = Math.round((viewEndHour.getTime() - viewStartHour.getTime()) / msInterval);\n          startIndex = tempStartIndex + colIndex * slotsPerDay;\n          endIndex = tempEndIndex + colIndex * slotsPerDay;\n        }\n        for (var i = startIndex; i < endIndex; i++) {\n          if (this.activeView.isTimelineView()) {\n            var rowIndex = !isNullOrUndefined(groupIndex) ? groupIndex : 0;\n            cells.push(tableEle.rows[parseInt(rowIndex.toString(), 10)].cells[parseInt(i.toString(), 10)]);\n          } else {\n            if (!isNullOrUndefined(groupIndex)) {\n              var selector = '.' + cls.WORK_CELLS_CLASS + '[data-group-index=\"' + groupIndex + '\"]';\n              var tds = [].slice.call(tableEle.rows[parseInt(i.toString(), 10)].querySelectorAll(selector));\n              cells.push(tds[parseInt(colIndex.toString(), 10)]);\n            } else {\n              cells.push(tableEle.rows[parseInt(i.toString(), 10)].cells[parseInt(colIndex.toString(), 10)]);\n            }\n          }\n        }\n      }\n    }\n    return cells;\n  };\n  /**\n   * Retrieves the start and end time information of the specific cell element.\n   *\n   * @function getCellDetails\n   * @param {Element | Element[]} tdCol Accepts the single or collection of elements.\n   * @returns {CellClickEventArgs} Object An object holding the startTime, endTime and all-day information along with the target HTML element will be returned.\n   */\n  Schedule.prototype.getCellDetails = function (tdCol) {\n    var td = tdCol instanceof Array ? tdCol : [tdCol];\n    var firstTd = getElement(td[0]);\n    var lastTd = getElement(td.slice(-1)[0]);\n    var startTime = this.getDateFromElement(firstTd);\n    var endTime = this.getDateFromElement(lastTd);\n    if (isNullOrUndefined(startTime) || isNullOrUndefined(endTime)) {\n      return undefined;\n    }\n    var endDateFromColSpan = this.activeView.isTimelineView() && !isNullOrUndefined(lastTd.getAttribute('colSpan')) && this.headerRows.length > 0;\n    var duration = endDateFromColSpan ? parseInt(lastTd.getAttribute('colSpan'), 10) : 1;\n    if (!this.activeViewOptions.timeScale.enable || endDateFromColSpan || lastTd.classList.contains(cls.ALLDAY_CELLS_CLASS) || lastTd.classList.contains(cls.HEADER_CELLS_CLASS)) {\n      endTime = util.addDays(new Date(endTime.getTime()), duration);\n    } else {\n      endTime = this.activeView.getEndDateFromStartDate(endTime);\n    }\n    var data = {\n      startTime: startTime,\n      endTime: endTime,\n      isAllDay: this.isAllDayCell(firstTd),\n      element: tdCol\n    };\n    var groupIndex = firstTd.getAttribute('data-group-index');\n    if (!isNullOrUndefined(groupIndex)) {\n      data.groupIndex = parseInt(groupIndex, 10);\n    }\n    return data;\n  };\n  /**\n   * Retrieves the selected cell elements.\n   *\n   * @function getSelectedElements\n   * @returns {Element[]} The elements of currently selected cells will be returned.\n   */\n  Schedule.prototype.getSelectedElements = function () {\n    if (this.keyboardInteractionModule && this.keyboardInteractionModule.selectedCells.length > 0) {\n      return this.keyboardInteractionModule.selectedCells;\n    }\n    return this.getSelectedCells();\n  };\n  /**\n   * To get the resource collection\n   *\n   * @function getResourceCollections\n   * @returns {ResourcesModel[]} Returns the resource collections\n   */\n  Schedule.prototype.getResourceCollections = function () {\n    return this.resourceCollection;\n  };\n  /**\n   * To set the resource collection\n   *\n   * @function setResourceCollections\n   * @param {ResourcesModel[]} resourceCol Accepts the resource collections in ResourcesModel type\n   * @param {boolean} isEventDataRefresh Accepts the boolean to refresh the appointment data source from remote or local\n   * @returns {void}\n   */\n  Schedule.prototype.setResourceCollections = function (resourceCol, isEventDataRefresh) {\n    if (isEventDataRefresh === void 0) {\n      isEventDataRefresh = true;\n    }\n    if (!isEventDataRefresh && this.uiStateValues) {\n      this.uiStateValues.isPreventEventRefresh = true;\n    }\n    this.setProperties({\n      resources: resourceCol\n    }, false);\n  };\n  /**\n   * Current View could be change based on the provided parameters.\n   *\n   * @function changeCurrentView\n   * @param {View} viewName Accept the view in the viewCollections.\n   * @param {number} viewIndex Accept the viewIndex in the viewCollections.\n   * @returns {void}\n   */\n  Schedule.prototype.changeCurrentView = function (viewName, viewIndex) {\n    var index = this.getViewIndex(viewName);\n    var view = viewName.charAt(0).toLowerCase() + viewName.slice(1);\n    var viewOptions = this.viewOptions[\"\" + view];\n    if (viewOptions) {\n      index = this.viewCollections.indexOf(viewOptions[viewIndex || 0]);\n    }\n    if (index === -1 || index === this.viewIndex) {\n      return;\n    }\n    this.changeView(viewName, null, null, index);\n  };\n  /**\n   * Return the current view Index.\n   *\n   * @function getCurrentViewIndex\n   * @returns {number} Returns the view index\n   */\n  Schedule.prototype.getCurrentViewIndex = function () {\n    return this.viewIndex;\n  };\n  /**\n   * Retrieves the resource details based on the provided resource index.\n   *\n   * @param {number} index index of the resources at the last level.\n   * @returns {ResourceDetails} Object An object holding the details of resource and resourceData.\n   */\n  Schedule.prototype.getResourcesByIndex = function (index) {\n    if (this.resourceBase && this.resourceBase.lastResourceLevel) {\n      if (index < 0 || index >= this.resourceBase.lastResourceLevel.length) {\n        return undefined;\n      }\n      var data = this.resourceBase.lastResourceLevel[parseInt(index.toString(), 10)];\n      var groupData = {};\n      this.resourceBase.setResourceValues(groupData, index);\n      return {\n        resource: data.resource,\n        resourceData: data.resourceData,\n        groupData: groupData\n      };\n    }\n    return undefined;\n  };\n  /**\n   * This method allows to expand the resource that available on the scheduler.\n   *\n   * @function expandResource\n   * @param {string | number} resourceId Accepts the resource id in either string or number type\n   * @param {string} name Accepts the name of the resource collection\n   * @returns {void}\n   */\n  Schedule.prototype.expandResource = function (resourceId, name) {\n    if (this.activeView.isTimelineView() && this.resourceBase && this.resourceCollection.length > 1) {\n      this.resourceBase.resourceExpand(resourceId, name, false);\n    }\n  };\n  /**\n   * This method allows to collapse the resource that available on the scheduler.\n   *\n   * @function collapseResource\n   * @param {string | number} resourceId Accepts the resource id in either string or number type\n   * @param {string} name Accepts the name of the resource collection\n   * @returns {void}\n   */\n  Schedule.prototype.collapseResource = function (resourceId, name) {\n    if (this.activeView.isTimelineView() && this.resourceBase && this.resourceCollection.length > 1) {\n      this.resourceBase.resourceExpand(resourceId, name, true);\n    }\n  };\n  /**\n   * Scrolls the Schedule content area to the specified time.\n   *\n   * @function scrollTo\n   * @param {string} hour Accepts the time value in the skeleton format of 'Hm'.\n   * @param {Date} scrollDate Accepts the date object value.\n   * @returns {void}\n   */\n  Schedule.prototype.scrollTo = function (hour, scrollDate) {\n    if (this.currentView.indexOf('Agenda') < 0 && isNullOrUndefined(this.element.querySelector('.e-work-cells'))) {\n      return;\n    }\n    if (this.activeView.scrollToDate && isNullOrUndefined(hour) && scrollDate) {\n      this.activeView.scrollToDate(scrollDate);\n    } else if (this.activeView.scrollToHour) {\n      this.activeView.scrollToHour(hour, scrollDate);\n    }\n  };\n  /**\n   * This method allows scroll to the position of the any resources that available on the scheduler.\n   * This method is applicable for without Agenda and Month agenda views of the schedule.\n   *\n   * @function scrollToResource\n   * @param {string | number} resourceId Accepts the resource id in either string or number type\n   * @param {string} groupName Accepts the name of the resource collection\n   * @returns {void}\n   */\n  Schedule.prototype.scrollToResource = function (resourceId, groupName) {\n    if (this.resourceBase && this.resourceBase.lastResourceLevel) {\n      this.resourceBase.resourceScroll(resourceId, groupName);\n    }\n  };\n  /**\n   * Exports the Scheduler events to a calendar (.ics) file. By default, the calendar is exported with a file name `Calendar.ics`.\n   * To change this file name on export, pass the custom string value as `fileName` to get the file downloaded with this provided name.\n   *\n   * @function exportToICalendar\n   * @param {string} fileName Accepts the string value.\n   * @param {Object[]} customData Accepts the collection of objects.\n   * @returns {void}\n   */\n  Schedule.prototype.exportToICalendar = function (fileName, customData) {\n    if (this.iCalendarExportModule) {\n      this.iCalendarExportModule.initializeCalendarExport(fileName, customData);\n    } else {\n      console.warn('[WARNING] :: Module \"ICalendarExport\" is not available in Schedule component!' + ' You either misspelled the module name or forgot to load it.');\n      throw Error('Inject ICalendarExport module');\n    }\n  };\n  /**\n   * Imports the events from an .ics file downloaded from any of the calendars like Google or Outlook into the Scheduler.\n   * This method accepts the blob object or string format of an .ics file to be imported as a mandatory argument.\n   *\n   * @function importICalendar\n   * @param {Blob | string} fileContent Accepts the file object or string format of an .ics file.\n   * @returns {void}\n   */\n  Schedule.prototype.importICalendar = function (fileContent) {\n    if (this.iCalendarImportModule) {\n      this.iCalendarImportModule.initializeCalendarImport(fileContent);\n    } else {\n      console.warn('[WARNING] :: Module \"ICalendarImport\" is not available in Schedule component!' + ' You either misspelled the module name or forgot to load it.');\n      throw Error('Inject ICalendarImport module');\n    }\n  };\n  /**\n   * Adds the newly created event into the Schedule dataSource.\n   *\n   * @function addEvent\n   * @param {Object | Object[]} data Single or collection of event objects to be added into Schedule.\n   * @returns {void}\n   */\n  Schedule.prototype.addEvent = function (data) {\n    this.crudModule.addEvent(data);\n  };\n  /**\n   * Generates the occurrences of a single recurrence event based on the provided event.\n   *\n   * @function generateEventOccurrences\n   * @param {Object} event Accepts the parent recurrence event from which the occurrences are generated.\n   * @param {Date} startDate Accepts the start date for the event occurrences. If not provided, the event's start date will be used.\n   * @returns {Object[]} Returns the collection of occurrence event objects.\n   */\n  Schedule.prototype.generateEventOccurrences = function (event, startDate) {\n    return this.eventBase ? this.eventBase.generateOccurrence(event, startDate) : [];\n  };\n  /**\n   * Allows the Scheduler events data to be exported as an Excel file either in .xlsx or .csv file formats.\n   * By default, the whole event collection bound to the Scheduler gets exported as an Excel file.\n   * To export only the specific events of Scheduler, you need to pass the custom data collection as\n   * a parameter to this `exportToExcel` method. This method accepts the export options as arguments such as fileName,\n   * exportType, fields, customData, and includeOccurrences. The `fileName` denotes the name to be given for the exported\n   * file and the `exportType` allows you to set the format of an Excel file to be exported either as .xlsx or .csv.\n   * The custom or specific field collection of event dataSource to be exported can be provided through `fields` option\n   * and the custom data collection can be exported by passing them through the `customData` option. There also exists\n   * option to export each individual instances of the recurring events to an Excel file, by setting true or false to the\n   * `includeOccurrences` option, denoting either to include or exclude the occurrences as separate instances on an exported Excel file.\n   *\n   * @function exportToExcel\n   * @param {ExportOptions} excelExportOptions The export options to be set before start with exporting the Scheduler events to an Excel file.\n   * @returns {void}\n   */\n  Schedule.prototype.exportToExcel = function (excelExportOptions) {\n    if (this.excelExportModule) {\n      this.excelExportModule.initializeExcelExport(excelExportOptions);\n    } else {\n      console.warn('[WARNING] :: Module \"ExcelExport\" is not available in Schedule component!' + ' You either misspelled the module name or forgot to load it.');\n      throw Error('Inject ExcelExport module');\n    }\n  };\n  /**\n   * Method allows to print the scheduler.\n   *\n   * @function print\n   * @param {ScheduleModel} printOptions The export options to be set before start with exporting\n   * the Scheduler events to the print window.\n   * @returns {void}\n   */\n  Schedule.prototype.print = function (printOptions) {\n    if (this.printModule) {\n      this.printModule.print(printOptions);\n    } else {\n      console.warn('[WARNING] :: Module \"Print\" is not available in Schedule component!' + ' You either misspelled the module name or forgot to load it.');\n      throw Error('Inject Print module');\n    }\n  };\n  /**\n   * Updates the changes made in the event object by passing it as an parameter into the dataSource.\n   *\n   * @function saveEvent\n   * @param {Object | Object[]} data Single or collection of event objects to be saved into Schedule.\n   * @param {CurrentAction} currentAction Denotes the action that takes place either for editing occurrence or series.\n   *  The valid current action names are `EditOccurrence` or `EditSeries`.\n   * @returns {void}\n   */\n  Schedule.prototype.saveEvent = function (data, currentAction) {\n    this.crudModule.saveEvent(data, currentAction);\n  };\n  /**\n   * Deletes the events based on the provided ID or event collection in the argument list.\n   *\n   * @function deleteEvent\n   * @param {string | number | Object | Object[]} id Accepts the ID as string or number type or single or collection of the event object which needs to be removed from the Schedule.\n   * @param {CurrentAction} currentAction Denotes the delete action that takes place either on occurrence or series events.\n   *  The valid current action names are `Delete`, `DeleteOccurrence` or `DeleteSeries`.\n   * @returns {void}\n   */\n  Schedule.prototype.deleteEvent = function (id, currentAction) {\n    this.crudModule.deleteEvent(id, currentAction);\n  };\n  /**\n   * Retrieves the entire collection of events bound to the Schedule.\n   *\n   * @function getEvents\n   * @param {Date} startDate Accepts the start date.\n   * @param {Date} endDate Accepts te end date.\n   * @param {boolean} includeOccurrences Accepts the boolean value to process the occurrence from recurrence series.\n   * @returns {Object[]} Returns the collection of event objects from the Schedule.\n   */\n  Schedule.prototype.getEvents = function (startDate, endDate, includeOccurrences) {\n    var eventCollections = [];\n    if (includeOccurrences) {\n      eventCollections = this.eventBase.getProcessedEvents();\n    } else {\n      eventCollections = this.eventsData;\n    }\n    if (startDate) {\n      startDate = this.getDateTime(startDate);\n    }\n    if (endDate) {\n      endDate = this.getDateTime(endDate);\n    }\n    eventCollections = this.eventBase.filterEventsByRange(eventCollections, startDate, endDate);\n    return eventCollections;\n  };\n  /**\n   * Retrieves the entire collection of block events bound to the Schedule.\n   *\n   * @function getBlockEvents\n   * @param {Date} startDate Accepts the start date.\n   * @param {Date} endDate Accepts te end date.\n   * @param {boolean} includeOccurrences Accepts the boolean value to process the occurrence from recurrence series.\n   * @returns {Object[]} Returns the collection of block event objects from the Schedule.\n   */\n  Schedule.prototype.getBlockEvents = function (startDate, endDate, includeOccurrences) {\n    var eventCollections = [];\n    if (includeOccurrences) {\n      eventCollections = this.eventBase.getProcessedEvents(this.blockData);\n    } else {\n      eventCollections = this.blockData;\n    }\n    if (startDate) {\n      startDate = this.getDateTime(startDate);\n    }\n    if (endDate) {\n      endDate = this.getDateTime(endDate);\n    }\n    eventCollections = this.eventBase.filterEventsByRange(eventCollections, startDate, endDate);\n    return eventCollections;\n  };\n  /**\n   * Retrieves the occurrences of a single recurrence event based on the provided parent ID.\n   *\n   * @function getOccurrencesByID\n   * @param {number} eventID ID of the parent recurrence data from which the occurrences are fetched.\n   * @returns {Object[]} Returns the collection of occurrence event objects.\n   */\n  Schedule.prototype.getOccurrencesByID = function (eventID) {\n    return this.eventBase.getOccurrencesByID(eventID);\n  };\n  /**\n   * Retrieves all the occurrences that lies between the specific start and end time range.\n   *\n   * @function getOccurrencesByRange\n   * @param {Date} startTime Denotes the start time range.\n   * @param {Date} endTime Denotes the end time range.\n   * @returns {Object[]} Returns the collection of occurrence event objects that lies between the provided start and end time.\n   */\n  Schedule.prototype.getOccurrencesByRange = function (startTime, endTime) {\n    startTime = this.getDateTime(startTime);\n    endTime = this.getDateTime(endTime);\n    return this.eventBase.getOccurrencesByRange(startTime, endTime);\n  };\n  /**\n   * Retrieves the dates that lies on active view of Schedule.\n   *\n   * @function getCurrentViewDates\n   * @returns {Date[]} Returns the collection of dates.\n   */\n  Schedule.prototype.getCurrentViewDates = function () {\n    return this.activeView ? this.activeView.renderDates : [];\n  };\n  /**\n   * Set the recurrence editor instance from custom editor template.\n   *\n   * @function setRecurrenceEditor\n   * @param {RecurrenceEditor} recurrenceEditor instance has passed to fetch the instance in event window.\n   * @returns {void}\n   */\n  Schedule.prototype.setRecurrenceEditor = function (recurrenceEditor) {\n    this.eventWindow.setRecurrenceEditor(recurrenceEditor);\n  };\n  /**\n   * Get the maximum id of an event.\n   *\n   * @function getEventMaxID\n   * @returns {number | string} Returns the maximum ID from scheduler data collections.\n   */\n  Schedule.prototype.getEventMaxID = function () {\n    return this.eventBase.getEventMaxID();\n  };\n  /**\n   * Get deleted occurrences from given recurrence series.\n   *\n   * @function getDeletedOccurrences\n   * @param {string | number | Object} recurrenceData Accepts the parent ID of the event object or parent event object\n   * @returns {Object[]} Returns the collection of deleted occurrence events.\n   */\n  Schedule.prototype.getDeletedOccurrences = function (recurrenceData) {\n    return this.eventBase.getDeletedOccurrences(recurrenceData);\n  };\n  /**\n   * Retrieves the events that lies on the current date range of the active view of Schedule.\n   *\n   * @function getCurrentViewEvents\n   * @returns {Object[]} Returns the collection of events.\n   */\n  Schedule.prototype.getCurrentViewEvents = function () {\n    return this.eventsProcessed;\n  };\n  /**\n   * Refreshes the event dataSource. This method may be useful when the events alone in the schedule needs to be re-rendered.\n   *\n   * @function refreshEvents\n   * @param {boolean} isRemoteRefresh Accepts the boolean to refresh data from remote or local\n   * @returns {void}\n   */\n  Schedule.prototype.refreshEvents = function (isRemoteRefresh) {\n    if (isRemoteRefresh === void 0) {\n      isRemoteRefresh = true;\n    }\n    if (isRemoteRefresh) {\n      if (this.dragAndDropModule) {\n        this.dragAndDropModule.actionObj.action = '';\n        removeClass([this.element], cls.EVENT_ACTION_CLASS);\n      }\n      this.crudModule.refreshDataManager();\n    } else {\n      if (this.uiStateValues) {\n        this.uiStateValues.isPreventTimezone = true;\n      }\n      if (this.crudModule) {\n        this.crudModule.refreshProcessedData();\n      }\n      if (this.uiStateValues) {\n        this.uiStateValues.isPreventTimezone = false;\n      }\n    }\n  };\n  /**\n   * Method to refresh the given Schedule templates\n   *\n   * @param {string} templateName Accepts the template name\n   * @returns {void}\n   */\n  Schedule.prototype.refreshTemplates = function (templateName) {\n    if (templateName) {\n      this.resetTemplates([templateName]);\n    } else {\n      this.resetTemplates();\n    }\n    switch (templateName) {\n      case 'eventTemplate':\n        this.appointmentTemplateFn = this.templateParser(this.activeViewOptions.eventTemplate);\n        this.refreshEvents(false);\n        break;\n      case 'dateHeaderTemplate':\n        this.dateHeaderTemplateFn = this.templateParser(this.activeViewOptions.dateHeaderTemplate);\n        this.activeView.refreshHeader();\n        break;\n      case 'dateRangeTemplate':\n        this.dateRangeTemplateFn = this.templateParser(this.activeViewOptions.dateRangeTemplate);\n        if (this.headerModule) {\n          this.headerModule.refresh();\n        }\n        break;\n      case 'resourceHeaderTemplate':\n        this.resourceHeaderTemplateFn = this.templateParser(this.activeViewOptions.resourceHeaderTemplate);\n        if (this.activeView.isTimelineView()) {\n          this.activeView.refreshResourceHeader();\n        } else {\n          this.activeView.refreshHeader();\n        }\n        break;\n      case 'quickInfoTemplates':\n        if (this.quickPopup) {\n          this.quickPopup.destroy();\n          this.quickPopup = null;\n        }\n        this.quickPopup = new QuickPopups(this);\n        this.quickInfoTemplatesHeaderFn = this.templateParser(this.quickInfoTemplates.header);\n        this.quickInfoTemplatesContentFn = this.templateParser(this.quickInfoTemplates.content);\n        this.quickInfoTemplatesFooterFn = this.templateParser(this.quickInfoTemplates.footer);\n        break;\n      case 'editorTemplate':\n        this.destroyEditorWindow();\n        this.editorTemplateFn = this.templateParser(this.editorTemplate);\n        break;\n      case 'editorHeaderTemplate':\n        this.destroyEditorWindow();\n        this.editorHeaderTemplateFn = this.templateParser(this.editorHeaderTemplate);\n        break;\n      case 'editorFooterTemplate':\n        this.destroyEditorWindow();\n        this.editorFooterTemplateFn = this.templateParser(this.editorFooterTemplate);\n        break;\n      case 'tooltipTemplate':\n      case 'headerTooltipTemplate':\n        if (this.eventTooltip) {\n          this.eventTooltip.destroy();\n          this.eventTooltip = null;\n        }\n        this.eventTooltip = new EventTooltip(this);\n        this.eventTooltipTemplateFn = this.templateParser(this.eventSettings.tooltipTemplate);\n        this.headerTooltipTemplateFn = this.templateParser(this.activeViewOptions.group.headerTooltipTemplate);\n        break;\n      default:\n        this.initializeView(this.currentView);\n        break;\n    }\n  };\n  /**\n   * Refreshes the Schedule layout without re-render.\n   *\n   * @function refreshLayout\n   * @returns {void}\n   */\n  Schedule.prototype.refreshLayout = function () {\n    this.onScheduleResize();\n    if (this.headerModule) {\n      this.headerModule.refresh();\n    }\n    if (this.eventWindow) {\n      this.eventWindow.refresh();\n    }\n  };\n  /**\n   * To retrieve the appointment object from element.\n   *\n   * @function getEventDetails\n   * @param {Element} element Denotes the event UI element on the Schedule.\n   * @returns {Object} Returns the event details.\n   */\n  Schedule.prototype.getEventDetails = function (element) {\n    element = getElement(element);\n    var guid = element.getAttribute('data-guid');\n    if (guid) {\n      return this.eventBase.getEventByGuid(guid);\n    }\n    return {};\n  };\n  /**\n   * To check whether the given time range slots are available for event creation or already occupied by other events.\n   * This method currently focuses on validating appointments within the current view date range.\n   * However, it does not extend this availability check to recurrence occurrences outside of the current date range.\n   *\n   * @function isSlotAvailable\n   * @param {Date | Object} startTime Denotes the start time of the slot.\n   * @param {Date} endTime Denotes the end time of the slot.\n   * @param {number} groupIndex Defines the resource index from last level.\n   * @returns {boolean} Returns true, if the slot that lies in the provided time range does not contain any other events.\n   */\n  Schedule.prototype.isSlotAvailable = function (startTime, endTime, groupIndex) {\n    var _this = this;\n    var eventStart;\n    var eventEnd;\n    var eventObj = this.activeEventData.event;\n    if (startTime instanceof Date || typeof startTime === 'string') {\n      eventStart = startTime;\n      eventEnd = endTime;\n    } else {\n      eventObj = startTime;\n      eventStart = startTime[this.eventFields.startTime];\n      eventEnd = startTime[this.eventFields.endTime];\n      if (this.resourceBase) {\n        groupIndex = this.eventBase.getGroupIndexFromEvent(startTime);\n      }\n    }\n    if (isNullOrUndefined(eventStart) || isNullOrUndefined(eventEnd)) {\n      return true;\n    }\n    eventStart = this.getDateTime(eventStart);\n    eventEnd = this.getDateTime(eventEnd);\n    var eventCollection = this.eventBase.filterEvents(eventStart, eventEnd);\n    if (!isNullOrUndefined(groupIndex) && this.resourceBase && this.resourceBase.lastResourceLevel.length > 0) {\n      eventCollection = this.eventBase.filterEventsByResource(this.resourceBase.lastResourceLevel[parseInt(groupIndex.toString(), 10)], eventCollection);\n    }\n    if (eventObj) {\n      if (eventObj.Guid) {\n        eventCollection = eventCollection.filter(function (event) {\n          return event.Guid !== eventObj.Guid;\n        });\n      } else {\n        eventCollection = eventCollection.filter(function (event) {\n          return event[_this.eventFields.id] !== eventObj[_this.eventFields.id];\n        });\n      }\n    }\n    return eventCollection.length > 0 ? false : true;\n  };\n  /**\n   * Method to copy events from an HTMLElement or an array of HTMLElements.\n   *\n   * @param { HTMLElement[] } elements Accepts an array of HTMLElement\n   * @returns {void} This method does not return a value.\n   */\n  Schedule.prototype.copy = function (elements) {\n    this.processCutCopyActions(elements, false);\n  };\n  /**\n   * Method to cut events from an HTMLElement or an array of HTMLElements.\n   *\n   * @param { HTMLElement[] } elements Accepts an array of HTMLElement\n   * @returns {void} This method does not return a value.\n   */\n  Schedule.prototype.cut = function (elements) {\n    this.processCutCopyActions(elements, true);\n  };\n  /**\n   * Method to create a paste event with clipboard data\n   *\n   * @param { HTMLElement } targetElement Accepts HTMLElement\n   * @returns {void}\n   */\n  Schedule.prototype.paste = function (targetElement) {\n    var _this = this;\n    if (!this.allowClipboard || !this.allowKeyboardInteraction) {\n      return;\n    }\n    if (!targetElement.classList.contains('e-work-cells') && !targetElement.classList.contains('e-all-day-cells')) {\n      return;\n    }\n    var clipboardData = new DataTransfer();\n    if (!isNullOrUndefined(navigator.clipboard)) {\n      navigator.clipboard.readText().then(function (text) {\n        clipboardData.setData('text/plain', text);\n        var pasteEvent = new ClipboardEvent('paste', {\n          bubbles: true,\n          cancelable: true\n        });\n        Object.defineProperty(pasteEvent, 'clipboardData', {\n          value: clipboardData\n        });\n        _this.keyboardInteractionModule.pasteHandler(pasteEvent, targetElement);\n      }).catch(function (err) {\n        throw err;\n      });\n    }\n  };\n  Schedule.prototype.processCutCopyActions = function (elements, isCut) {\n    var _this = this;\n    if (!elements || !this.allowClipboard || !this.allowKeyboardInteraction) {\n      return;\n    }\n    var elementArray = elements;\n    var eventDetailsArray = [];\n    elementArray.forEach(function (element) {\n      if (element.classList.contains(cls.APPOINTMENT_CLASS)) {\n        var eventDetail = _this.getEventDetails(element);\n        if (eventDetail) {\n          eventDetailsArray.push(eventDetail);\n        }\n      }\n    });\n    if (eventDetailsArray.length > 0) {\n      this.keyboardInteractionModule.processClipboardAction(isCut, eventDetailsArray);\n    }\n  };\n  /**\n   * To manually open the event editor on specific time or on certain events.\n   *\n   * @function openEditor\n   * @param {Object} data It can be either cell data or event data.\n   * @param {CurrentAction} action Defines the action for which the editor needs to be opened such as either for new event creation or\n   *  for editing of existing events. The applicable action names that can be used here are `Add`, `Save`, `EditOccurrence`\n   *  and `EditSeries`.\n   * @param {boolean} isEventData It allows to decide whether the editor needs to be opened with the clicked cell details or with the\n   *  passed event details.\n   * @param {number} repeatType It opens the editor with the recurrence options based on the provided repeat type.\n   * @returns {void}\n   */\n  Schedule.prototype.openEditor = function (data, action, isEventData, repeatType) {\n    if (action === 'Add' && !isEventData) {\n      data.startTime = this.getDateTime(data.startTime);\n      data.endTime = this.getDateTime(data.endTime);\n      if (!isNullOrUndefined(data.element)) {\n        data.element = getElement(data.element);\n      }\n    } else {\n      data[this.eventFields.startTime] = this.getDateTime(data[this.eventFields.startTime]);\n      data[this.eventFields.endTime] = this.getDateTime(data[this.eventFields.endTime]);\n    }\n    this.currentAction = action;\n    if (action !== 'Add') {\n      this.activeEventData.event = data;\n    }\n    this.eventWindow.openEditor(data, action, isEventData, repeatType);\n  };\n  /**\n   * To manually close the event editor window\n   *\n   * @function closeEditor\n   * @returns {void}\n   */\n  Schedule.prototype.closeEditor = function () {\n    if (this.eventWindow) {\n      this.eventWindow.dialogClose();\n    }\n  };\n  /**\n   * To manually open the quick info popup based on cell or event details.\n   *\n   * @param {object} data Defines the cell or event data. If the data contains valid ID, it will open event quick info popup,\n   * otherwise cell quick info popup displayed.\n   * @returns {void}\n   */\n  Schedule.prototype.openQuickInfoPopup = function (data) {\n    var _this = this;\n    if (this.currentView === 'Year' || isNullOrUndefined(data)) {\n      return;\n    }\n    if (isNullOrUndefined(data[this.eventFields.id])) {\n      if (this.currentView === 'Agenda' || this.currentView === 'MonthAgenda' || isNullOrUndefined(this.activeView)) {\n        return;\n      }\n      var cellData = {\n        startTime: this.activeCellsData.startTime = this.getDateTime(data[this.eventFields.startTime]),\n        endTime: this.activeCellsData.endTime = this.getDateTime(data[this.eventFields.endTime]),\n        isAllDay: this.activeCellsData.isAllDay = !isNullOrUndefined(data[this.eventFields.isAllDay]) ? data[this.eventFields.isAllDay] : false\n      };\n      var startTime = this.activeView.getAdjustedDate(new Date(cellData.startTime));\n      if (startTime) {\n        var query = '.' + cls.WORK_CELLS_CLASS + '[data-date=\"' + startTime.getTime() + '\"]';\n        if (this.activeViewOptions.group.resources.length > 0 && !this.uiStateValues.isGroupAdaptive && this.resourceBase && this.eventBase) {\n          cellData.groupIndex = this.eventBase.getGroupIndexFromEvent(data);\n          query = '.' + cls.WORK_CELLS_CLASS + '[data-date=\"' + startTime.getTime() + '\"][data-group-index=\"' + cellData.groupIndex + '\"]';\n        }\n        var workCell = this.element.querySelector(query);\n        if (workCell) {\n          workCell.focus();\n          cellData.element = workCell;\n          this.notify(events.cellClick, cellData);\n        }\n      }\n    } else {\n      var app = this.getCurrentViewEvents().filter(function (item) {\n        return data[_this.eventFields.id] === item[_this.eventFields.id];\n      });\n      if (app.length <= 0) {\n        return;\n      }\n      var selectEvent = app[0];\n      if (data[this.eventFields.recurrenceRule]) {\n        var occurence = app.filter(function (x) {\n          return x[_this.eventFields.startTime].getTime() === data[_this.eventFields.startTime].getTime();\n        });\n        if (occurence.length > 0) {\n          selectEvent = occurence[0];\n        }\n      }\n      var element = this.element.querySelector('div[data-guid=\"' + selectEvent.Guid + '\"]');\n      if (element) {\n        this.eventBase.removeSelectedAppointmentClass();\n        this.eventBase.addSelectedAppointments([element], false);\n        this.activeEventData = {\n          event: selectEvent,\n          element: element\n        };\n        if (this.currentView === 'Agenda' || this.currentView === 'MonthAgenda') {\n          addClass([this.activeEventData.element], cls.AGENDA_SELECTED_CELL);\n        }\n        this.notify(events.eventClick, this.activeEventData);\n      }\n    }\n  };\n  /**\n   * To manually close the quick info popup\n   *\n   * @function closeQuickInfoPopup\n   * @returns {void}\n   */\n  Schedule.prototype.closeQuickInfoPopup = function () {\n    if (this.quickPopup) {\n      this.quickPopup.quickPopupHide(true);\n    }\n  };\n  /**\n   * To manually open the overlap validation Alert.\n   *\n   * @param {PopupOpenEventArgs} args The arguments for opening the popup.\n   * @param {string} args.type Defines the type of overlap alert (e.g., 'OverlapAlert').\n   * @param {Record<string, any>} args.data The data associated with the popup.\n   * @param {Record<string, any>[]} args.overlapEvents The overlap events.\n   * @returns {void}\n   */\n  Schedule.prototype.openOverlapAlert = function (args) {\n    var _this = this;\n    if (this.quickPopup) {\n      var eventProp = {\n        type: 'OverlapAlert',\n        cancel: false,\n        element: this.quickPopup.quickDialog.element,\n        data: args.data,\n        overlapEvents: args.overlapEvents\n      };\n      this.trigger(events.popupOpen, eventProp, function (popupArgs) {\n        if (!popupArgs.cancel) {\n          _this.quickPopup.openValidationError('overlapAlert', args.data);\n        }\n      });\n    }\n  };\n  /**\n   * To manually close the overlap validation Alert.\n   *\n   * @function closeOverlapValidationAlert\n   * @returns {void}\n   */\n  Schedule.prototype.closeOverlapAlert = function () {\n    var _this = this;\n    if (this.quickPopup) {\n      var args = {\n        type: 'OverlapAlert',\n        cancel: false,\n        data: this.activeEventData.event,\n        element: this.quickPopup.quickDialog.element\n      };\n      this.trigger(events.popupClose, args, function (popupArgs) {\n        if (!popupArgs.cancel) {\n          _this.quickPopup.quickDialog.hide();\n        }\n      });\n    }\n  };\n  /**\n   * Closes the tooltip.\n   * For example, when the context menu is opened for an event,\n   * the tooltip can be closed by calling this method.\n   *\n   * @function closeTooltip\n   * @returns {void}\n   */\n  Schedule.prototype.closeTooltip = function () {\n    if (this.eventTooltip) {\n      this.eventTooltip.close();\n    }\n  };\n  /**\n   * Retrieves a formatted string representing the date range of the given date collection.\n   *\n   * @param {Date[]} dates - An array of Date objects representing the date range.\n   * @returns {string} A formatted string describing the date range.\n   *   If the dates is empty, returns an empty string.\n   *   Otherwise, delegates to the active view to generate the appropriate date range text.\n   *\n   * @example\n   * // Assuming dates contains dates from May 1, 2023 to May 7, 2023\n   * const rangeText = schedule.getDateRangeText(schedule.getViewDates());\n   * // rangeText might be \"May 1 - 7, 2023\" (actual format depends on the active view)\n   *\n   * @remarks\n   * The actual format of the returned string depends on the implementation\n   * of the getDateRangeText method in the active view.\n   */\n  Schedule.prototype.getDateRangeText = function (dates) {\n    if (isNullOrUndefined(dates) && dates.length === 0 || !this.activeView) {\n      return '';\n    }\n    return this.activeView.getDateRangeText(dates[0], dates);\n  };\n  /**\n   * Retrieves an array of dates based on the specified date collection direction.\n   *\n   * @param {NavigationDirection} type - The direction for date collection. Options are:\n   *   - 'Previous': Returns the previous date range collection from the current rendered date.\n   *   - 'Next': Returns the next date range collection from the current rendered date.\n   *   - 'Current': Returns the current rendered date collection.\n   *\n   * @returns {Date[]} An array of Date objects representing the view dates.\n   */\n  Schedule.prototype.getViewDates = function (type) {\n    if (type === void 0) {\n      type = 'Current';\n    }\n    if (!this.activeView) {\n      return [];\n    }\n    switch (type) {\n      case 'Previous':\n      case 'Next':\n        return this.activeView.getRenderDates(undefined, this.activeView.getNextPreviousDate(type));\n      case 'Current':\n        return this.getCurrentViewDates();\n    }\n  };\n  /**\n   * Select the resource based on group index in mobile mode.\n   *\n   * @param {number} groupIndex Defines the resource index based on last level.\n   * @returns {void}\n   */\n  Schedule.prototype.selectResourceByIndex = function (groupIndex) {\n    if (this.resourceBase && this.uiStateValues.isGroupAdaptive) {\n      this.resourceBase.selectResourceByIndex(groupIndex);\n    }\n  };\n  /**\n   * Select the resources to the based on id.\n   *\n   * @param {string | number} id id of the resource defined in resources collection.\n   * @param {string} name Name of the resource defined in resources collection.\n   * @returns {number} Returns the group index\n   */\n  Schedule.prototype.getIndexFromResourceId = function (id, name) {\n    if (this.resourceBase) {\n      return this.resourceBase.getIndexFromResourceId(id, name);\n    }\n    return null;\n  };\n  /**\n   * Adds the resources to the specified index.\n   *\n   * @param {Object | Object[]} resources Accepts the resource data in single or collection of data.\n   * @param {string} name Name of the resource defined in resources collection.\n   * @param {number} index Index or position where the resource should be added.\n   * @returns {void}\n   */\n  Schedule.prototype.addResource = function (resources, name, index) {\n    this.resourceBase.addResource(resources, name, index);\n  };\n  /**\n   * Removes the specified resource.\n   *\n   * @param {string | string[] | number | number[]} resourceId Specifies the resource id to be removed.\n   * @param {string} name Specifies the resource name from which the id should be referred.\n   * @returns {void}\n   */\n  Schedule.prototype.removeResource = function (resourceId, name) {\n    this.resourceBase.removeResource(resourceId, name);\n  };\n  /**\n   * Destroys the Schedule component.\n   *\n   * @function destroy\n   * @returns {void}\n   */\n  Schedule.prototype.destroy = function () {\n    if (this.eventTooltip) {\n      this.eventTooltip.destroy();\n      this.eventTooltip = null;\n    }\n    this.destroyPopups();\n    this.hideSpinner();\n    this.unWireEvents();\n    this.destroyHeaderModule();\n    if (this.eventBase) {\n      this.eventBase.destroy();\n      this.eventBase = null;\n    }\n    if (this.workCellAction) {\n      this.workCellAction.destroy();\n      this.workCellAction = null;\n    }\n    if (this.inlineModule) {\n      this.inlineModule.destroy();\n      this.inlineModule = null;\n    }\n    if (this.keyboardInteractionModule) {\n      this.keyboardInteractionModule.destroy();\n      this.keyboardInteractionModule = null;\n    }\n    if (this.scrollModule) {\n      this.scrollModule.destroy();\n      this.scrollModule = null;\n    }\n    if (this.printModule) {\n      this.printModule.destroy();\n    }\n    if (this.activeView) {\n      this.resetTemplates();\n      this.activeView.removeEventListener();\n      this.activeView.destroy();\n      this.activeView = null;\n    }\n    if (this.scheduleTouchModule) {\n      this.scheduleTouchModule.destroy();\n      this.scheduleTouchModule = null;\n    }\n    if (this.crudModule) {\n      this.crudModule.destroy();\n      this.crudModule = null;\n    }\n    if (this.dataModule) {\n      this.dataModule.destroy();\n      this.dataModule = null;\n    }\n    _super.prototype.destroy.call(this);\n    var modules = ['dayModule', 'weekModule', 'workWeekModule', 'monthModule', 'monthAgendaModule', 'yearModule', 'agendaModule', 'timelineViewsModule', 'timelineMonthModule', 'timelineYearModule', 'resizeModule', 'dragAndDropModule', 'excelExportModule', 'printModule', 'iCalendarExportModule', 'iCalendarImportModule', 'tzModule', 'eventsData', 'eventsProcessed', 'blockData', 'blockProcessed', 'uiStateValues', 'viewCollections', 'viewOptions', 'defaultLocale', 'localeObj', 'selectedElements', 'resourceCollection', 'editorTitles', 'eventFields', 'activeViewOptions', 'activeEventData', 'activeCellsData', 'renderModule'];\n    for (var _i = 0, modules_1 = modules; _i < modules_1.length; _i++) {\n      var module = modules_1[_i];\n      this[\"\" + module] = null;\n    }\n    util.removeChildren(this.element);\n    var removeClasses = [cls.ROOT, cls.RTL, cls.DEVICE_CLASS, cls.MULTI_DRAG];\n    if (this.cssClass) {\n      removeClasses = removeClasses.concat(this.cssClass.split(' '));\n    }\n    removeClass([this.element], removeClasses);\n  };\n  __decorate([Property('auto')], Schedule.prototype, \"width\", void 0);\n  __decorate([Property('auto')], Schedule.prototype, \"height\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"showHeaderBar\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"showTimeIndicator\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"allowSwiping\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"allowOverlap\", void 0);\n  __decorate([Property(3)], Schedule.prototype, \"overscanCount\", void 0);\n  __decorate([Collection([], ToolbarItem)], Schedule.prototype, \"toolbarItems\", void 0);\n  __decorate([Property('Week')], Schedule.prototype, \"currentView\", void 0);\n  __decorate([Property(['Day', 'Week', 'WorkWeek', 'Month', 'Agenda'])], Schedule.prototype, \"views\", void 0);\n  __decorate([Property(new Date())], Schedule.prototype, \"selectedDate\", void 0);\n  __decorate([Property(new Date(1900, 0, 1))], Schedule.prototype, \"minDate\", void 0);\n  __decorate([Property(new Date(2099, 11, 31))], Schedule.prototype, \"maxDate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"dateFormat\", void 0);\n  __decorate([Property('Gregorian')], Schedule.prototype, \"calendarMode\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"showWeekend\", void 0);\n  __decorate([Property(0)], Schedule.prototype, \"firstDayOfWeek\", void 0);\n  __decorate([Property('FirstDay')], Schedule.prototype, \"weekRule\", void 0);\n  __decorate([Property([1, 2, 3, 4, 5])], Schedule.prototype, \"workDays\", void 0);\n  __decorate([Property(12)], Schedule.prototype, \"monthsCount\", void 0);\n  __decorate([Property('00:00')], Schedule.prototype, \"startHour\", void 0);\n  __decorate([Property('24:00')], Schedule.prototype, \"endHour\", void 0);\n  __decorate([Property(null)], Schedule.prototype, \"timeFormat\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"enableAllDayScroll\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"enableAdaptiveUI\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"allowResizing\", void 0);\n  __decorate([Complex({}, WorkHours)], Schedule.prototype, \"workHours\", void 0);\n  __decorate([Complex({}, TimeScale)], Schedule.prototype, \"timeScale\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"allowKeyboardInteraction\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"allowDragAndDrop\", void 0);\n  __decorate([Property()], Schedule.prototype, \"dateHeaderTemplate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"dateRangeTemplate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"cellHeaderTemplate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"dayHeaderTemplate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"monthHeaderTemplate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"cellTemplate\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"readonly\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"showQuickInfo\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"allowInline\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"allowMultiCellSelection\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"allowMultiRowSelection\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"quickInfoOnSelectionEnd\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"showWeekNumber\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"rowAutoHeight\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"allowMultiDrag\", void 0);\n  __decorate([Property(0)], Schedule.prototype, \"firstMonthOfYear\", void 0);\n  __decorate([Property()], Schedule.prototype, \"editorTemplate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"editorHeaderTemplate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"editorFooterTemplate\", void 0);\n  __decorate([Complex({}, QuickInfoTemplates)], Schedule.prototype, \"quickInfoTemplates\", void 0);\n  __decorate([Property(7)], Schedule.prototype, \"agendaDaysCount\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"hideEmptyAgendaDays\", void 0);\n  __decorate([Property(true)], Schedule.prototype, \"enableRecurrenceValidation\", void 0);\n  __decorate([Property()], Schedule.prototype, \"timezone\", void 0);\n  __decorate([Complex({}, EventSettings)], Schedule.prototype, \"eventSettings\", void 0);\n  __decorate([Property(timezoneData)], Schedule.prototype, \"timezoneDataSource\", void 0);\n  __decorate([Property()], Schedule.prototype, \"resourceHeaderTemplate\", void 0);\n  __decorate([Property()], Schedule.prototype, \"headerIndentTemplate\", void 0);\n  __decorate([Complex({}, Group)], Schedule.prototype, \"group\", void 0);\n  __decorate([Collection([], Resources)], Schedule.prototype, \"resources\", void 0);\n  __decorate([Collection([], HeaderRows)], Schedule.prototype, \"headerRows\", void 0);\n  __decorate([Property()], Schedule.prototype, \"cssClass\", void 0);\n  __decorate([Property(false)], Schedule.prototype, \"allowClipboard\", void 0);\n  __decorate([Property()], Schedule.prototype, \"eventDragArea\", void 0);\n  __decorate([Event()], Schedule.prototype, \"created\", void 0);\n  __decorate([Event()], Schedule.prototype, \"destroyed\", void 0);\n  __decorate([Event()], Schedule.prototype, \"cellClick\", void 0);\n  __decorate([Event()], Schedule.prototype, \"cellDoubleClick\", void 0);\n  __decorate([Event()], Schedule.prototype, \"moreEventsClick\", void 0);\n  __decorate([Event()], Schedule.prototype, \"hover\", void 0);\n  __decorate([Event()], Schedule.prototype, \"select\", void 0);\n  __decorate([Event()], Schedule.prototype, \"actionBegin\", void 0);\n  __decorate([Event()], Schedule.prototype, \"actionComplete\", void 0);\n  __decorate([Event()], Schedule.prototype, \"actionFailure\", void 0);\n  __decorate([Event()], Schedule.prototype, \"navigating\", void 0);\n  __decorate([Event()], Schedule.prototype, \"renderCell\", void 0);\n  __decorate([Event()], Schedule.prototype, \"eventClick\", void 0);\n  __decorate([Event()], Schedule.prototype, \"eventDoubleClick\", void 0);\n  __decorate([Event()], Schedule.prototype, \"eventRendered\", void 0);\n  __decorate([Event()], Schedule.prototype, \"dataBinding\", void 0);\n  __decorate([Event()], Schedule.prototype, \"popupOpen\", void 0);\n  __decorate([Event()], Schedule.prototype, \"popupClose\", void 0);\n  __decorate([Event()], Schedule.prototype, \"dragStart\", void 0);\n  __decorate([Event()], Schedule.prototype, \"drag\", void 0);\n  __decorate([Event()], Schedule.prototype, \"dragStop\", void 0);\n  __decorate([Event()], Schedule.prototype, \"resizeStart\", void 0);\n  __decorate([Event()], Schedule.prototype, \"resizing\", void 0);\n  __decorate([Event()], Schedule.prototype, \"resizeStop\", void 0);\n  __decorate([Event()], Schedule.prototype, \"virtualScrollStart\", void 0);\n  __decorate([Event()], Schedule.prototype, \"virtualScrollStop\", void 0);\n  __decorate([Event()], Schedule.prototype, \"dataBound\", void 0);\n  __decorate([Event()], Schedule.prototype, \"beforePaste\", void 0);\n  __decorate([Event()], Schedule.prototype, \"beforePrint\", void 0);\n  __decorate([Event()], Schedule.prototype, \"excelExport\", void 0);\n  __decorate([Event()], Schedule.prototype, \"tooltipOpen\", void 0);\n  Schedule = __decorate([NotifyPropertyChanges], Schedule);\n  return Schedule;\n}(Component);\nexport { Schedule };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","Event","Animation","Collection","append","EventHandler","Browser","Internationalization","getDefaultDateObject","cldrData","L10n","getValue","compile","extend","isNullOrUndefined","NotifyPropertyChanges","Complex","getElement","removeClass","addClass","classList","remove","SanitizeHtmlHelper","createSpinner","hideSpinner","showSpinner","HeaderRenderer","Scroll","ScheduleTouch","KeyboardInteraction","Data","EventBase","InlineEdit","QuickPopups","EventTooltip","EventWindow","Render","WorkHours","TimeScale","QuickInfoTemplates","HeaderRows","Crud","WorkCellInteraction","EventSettings","Group","Resources","Gregorian","Islamic","ResourceBase","Timezone","timezoneData","events","cls","util","ToolbarItem","Schedule","_super","options","element","_this","call","adaptiveGroupIndex","render","addClasses","removeClasses","push","ROOT","enableRtl","RTL","isAdaptive","DEVICE_CLASS","enableAdaptiveUI","ADAPTIVE_CLASS","allowMultiDrag","MULTI_DRAG","cssClass","split","_i","cssClass_1","cls_1","validateDate","scrollModule","setWidth","setHeight","renderModule","eventBase","workCellAction","allowKeyboardInteraction","keyboardInteractionModule","inlineModule","initializeDataModule","renderTableContainer","activeViewOptions","getActiveViewOptions","initializeResources","wireEvents","querySelector","TABLE_CONTAINER_CLASS","appendChild","createElement","className","getEventTemplateName","resIndex","templateName","activeEventTemplates","indexOf","getElementWidth","uiStateValues","isTransformed","getElementHeight","getElementHeightFromClass","elementClass","renderTemplates","callback","isReact","renderReactTemplates","resetTemplates","templates","isAngular","clearTemplate","sanitize","value","enableHtmlSanitizer","innerText","innerHTML","isSetModel","resources","resourceBase","bindResourcesData","resourceCollection","renderElements","destroyEditorWindow","eventWindow","destroy","isLayoutOnly","initializeView","currentView","refresh","destroyHeaderModule","showHeaderBar","headerModule","Math","round","getBoundingClientRect","width","offsetWidth","isDevice","isTouch","scheduleTouchModule","destroyPopups","isPrinting","initializePopups","selectedDate","date","Date","getTime","minDate","maxDate","setProperties","updateMinMaxDateToEditor","Error","getViewIndex","viewName","item","viewCollections","checkIndex","parseInt","toString","option","setViewOptions","isModuleLoad","views","viewOptions","selectedView","prevIndex","viewIndex","count","_a","view","isOptions","isSelected","obj","fieldViewName","charAt","toLowerCase","slice","cellHeaderTemplateName","cellHeaderTemplate","dateHeaderTemplateName","dateHeaderTemplate","dateRangeTemplateName","dateRangeTemplate","cellTemplateName","cellTemplate","dayHeaderTemplateName","dayHeaderTemplate","monthHeaderTemplateName","monthHeaderTemplate","resourceHeaderTemplateName","resourceHeaderTemplate","headerIndentTemplateName","headerIndentTemplate","eventTemplateName","eventTemplate","firstDayOfWeek","interval","currentIndex","timeScale","enable","slotCount","majorSlotTemplate","minorSlotTemplate","isYearView","group","byDate","byGroupID","allowGroupEdit","headerTooltipTemplate","enableCompactView","hideNonWorkingDays","workDays","scheduleOptions","dateFormat","endHour","readonly","startHour","allowVirtualScrolling","allowOverlap","overscanCount","eventSettings","template","firstMonthOfYear","monthsCount","showWeekend","showWeekNumber","displayName","timeFormat","internalTimeFormat","headerRows","orientation","numberOfWeeks","displayDate","enableLazyLoading","viewsData","undefined","eventFields","id","fields","isBlock","subject","name","startTime","endTime","startTimezone","endTimezone","location","description","isAllDay","recurrenceID","recurrenceRule","recurrenceException","isReadonly","followingID","setEditorTitles","dataModule","dataSource","query","crudModule","editorTitles","title","localeObj","getConstant","setResourceCollection","initializeTemplates","cellHeaderTemplateFn","templateParser","dayHeaderTemplateFn","monthHeaderTemplateFn","cellTemplateFn","dateHeaderTemplateFn","dateRangeTemplateFn","majorSlotTemplateFn","minorSlotTemplateFn","appointmentTemplateFn","resourceHeaderTemplateFn","headerIndentTemplateFn","headerTooltipTemplateFn","eventTooltipTemplateFn","tooltipTemplate","editorTemplateFn","editorTemplate","editorHeaderTemplateFn","editorHeaderTemplate","editorFooterTemplateFn","editorFooterTemplate","quickInfoTemplatesHeaderFn","quickInfoTemplates","header","quickInfoTemplatesContentFn","content","quickInfoTemplatesFooterFn","footer","quickPopup","getDayNames","type","culShortNames","cldrObj","nameSpace","locale","getCalendarMode","keys","setCldrTimeFormat","calendarMode","getTimeString","time","globalize","formatDate","format","calendar","toLocaleUpperCase","getDateTime","setCalendarMode","calendarUtil","changeView","event","muteOnChange","index","previousView","args","requestType","cancel","trigger","actionBegin","actionArgs","navArgs","action","currentDate","navigating","navigationArgs","isVertical","isInitial","top","updateActiveView","setCalendarDate","setCalendarView","animateLayout","actionComplete","changeDate","previousDate","activeView","isTimelineView","monthAgendaModule","monthAgendaDate","isMinMaxDate","isSelectedDate","setHours","getCurrentTime","timezone","tzModule","convert","getLocalTimezoneName","getNavigateView","duration","timingFunction","animate","requiredModules","modules","member","allowDragAndDrop","allowResizing","preRender","isIPadDevice","enablePersistence","expand","left","isGroupAdaptive","isIgnoreOccurrence","groupIndex","isCustomMonth","isPreventTimezone","currentTimezoneDate","activeCellsData","activeEventData","getDefaultLocale","getModuleName","defaultLocale","eventsData","eventsProcessed","blockData","blockProcessed","currentAction","selectedElements","day","week","workWeek","month","year","agenda","weekAgenda","workWeekAgenda","monthAgenda","today","noEvents","emptyContainer","allDay","start","end","more","close","noTitle","delete","deleteEvent","deleteMultipleEvent","selectedItems","deleteSeries","edit","editSeries","editEvent","createEvent","addTitle","moreDetails","moreEvents","save","editContent","deleteContent","deleteMultipleContent","newEvent","repeat","saveButton","cancelButton","deleteButton","recurrence","wrongPattern","seriesChangeAlert","createError","sameDayAlert","occurenceAlert","editRecurrence","recurringEvent","repeats","alert","startEndError","invalidDateError","blockAlert","overlapAlert","ok","yes","no","of","occurrence","series","previous","next","timelineDay","timelineWeek","timelineWorkWeek","timelineMonth","timelineYear","editFollowingEvent","deleteTitle","editTitle","beginFrom","endAt","expandAllDaySection","collapseAllDaySection","searchTimezone","noRecords","add","window","onScheduleResize","document","touchStartEvent","onDocumentClick","allowClipboard","onDocumentPaste","removeSelectedClass","selectedCells","getSelectedCells","selectedCells_1","cell","removeAttribute","SELECTED_CELL_CLASS","addSelectedClass","cells","focusCell","isPreventScroll","setAttribute","focus","preventScroll","selectCell","getAllDayRow","ALLDAY_ROW_CLASS","getContentTable","CONTENT_TABLE_CLASS","getTableRows","querySelectorAll","HIDDEN_CLASS","getWorkCellElements","WORK_CELLS_CLASS","getIndexOfDate","collection","map","Number","isAllDayCell","td","contains","ALLDAY_CELLS_CLASS","HEADER_CELLS_CLASS","getDateFromElement","dateString","getAttribute","dateInMS","getTargetElement","selector","elementFromPoint","targetElement","closest","getCellHeaderTemplate","getDayHeaderTemplate","getMonthHeaderTemplate","getCellTemplate","getDateHeaderTemplate","getDateRangeTemplate","getMajorSlotTemplate","getMinorSlotTemplate","getAppointmentTemplate","getEventTooltipTemplate","getHeaderTooltipTemplate","getEditorTemplate","getEditorHeaderTemplate","getEditorFooterTemplate","getQuickInfoTemplatesHeader","getQuickInfoTemplatesContent","getQuickInfoTemplatesFooter","getResourceHeaderTemplate","getHeaderIndentTemplate","getCssProperties","cssProps","border","padding","rtlBorder","rtlPadding","removeNewEventElement","eventClone","NEW_EVENT_CLASS","getStartEndTime","startEndTime","startEndDate","resetTime","timeString","notify","documentClick","documentPaste","isMobile","activeElement","SUBJECT_CLASS","INLINE_SUBJECT_CLASS","isTapHold","virtualScrollModule","refreshLayout","highlightCurrentTime","onClosePopup","resetScrollbarWidth","resetColWidth","scrollUiUpdate","cssProperties","isPreventScrollUpdate","isRemoteRefresh","refreshEvents","enableTransition","resWrap","RESOURCE_COLUMN_WRAP_CLASS","conWrap","CONTENT_WRAP_CLASS","contentReady","trim","error","getAnnouncementString","resourceName","constantText","getResourceText","recordSubject","default","recordLocation","skeleton","startDateText","endDateText","announcementString","boundaryValidation","pageY","pageX","autoScrollDistance","scrollEdges","right","bottom","viewBoundaries","pageYOffset","pageXOffset","getWeekNumberContent","dates","weekNumber","weekRule","weekNumberDate","getWeekLastDate","formatNumber","getWeekNumber","weekFirstDate","getWeekFirstDate","weekLastDate","weekMidDate","getWeekMiddleDate","renderHeaderIndentTemplate","data","scheduleId","templateId","indentTemplate","root","isSpecificResourceEvents","rowAutoHeight","unWireEvents","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","state","isRefresh","isResource","isDate","isView","isLayout","isDataManager","prop","updateItems","updateDateRange","JSON","stringify","refreshRecurrenceEditor","timezonePropertyChange","setCalendarTimezone","setRtlClass","extendedPropertyChange","propertyChangeAction","dragAndDropModule","actionObj","EVENT_ACTION_CLASS","refreshDataManager","allDayRowScrollUpdate","dateHeader","DATE_HEADER_WRAP_CLASS","allDayRow","height","enableAllDayScroll","ALLDAY_APPOINTMENT_AUTO","ALLDAY_APPOINTMENT_SCROLL","allDayCells","style","allDayExpandScroll","uiUpdate","module","properties","onEventSettingsPropertyChanged","setDialogContent","setDialogHeader","setDialogFooter","onGroupSettingsPropertyChanged","refreshDateTimePicker","eventTooltip","enableTooltip","refreshQuickDialog","updateAddIcon","setWorkHours","getWorkHourCells","WORK_HOURS_CLASS","resetWorkHours","renderDates","workHourCells","tableEle","setMilliseconds","viewStartHour","getStartHour","viewEndHour","getEndHour","msMajorInterval","MS_PER_MINUTE","msInterval","offsetDiff","getTimezoneOffset","endOffsetDiff","abs","startIndex","endIndex","ceil","tempStartIndex","tempEndIndex","dates_1","lastResourceLevel","colIndex","slotsPerDay","rowIndex","rows","tds","getCellDetails","tdCol","firstTd","lastTd","endDateFromColSpan","addDays","getEndDateFromStartDate","getSelectedElements","getResourceCollections","setResourceCollections","resourceCol","isEventDataRefresh","isPreventEventRefresh","changeCurrentView","getCurrentViewIndex","getResourcesByIndex","groupData","setResourceValues","resource","resourceData","expandResource","resourceId","resourceExpand","collapseResource","scrollTo","hour","scrollDate","scrollToDate","scrollToHour","scrollToResource","groupName","resourceScroll","exportToICalendar","fileName","customData","iCalendarExportModule","initializeCalendarExport","console","warn","importICalendar","fileContent","iCalendarImportModule","initializeCalendarImport","addEvent","generateEventOccurrences","startDate","generateOccurrence","exportToExcel","excelExportOptions","excelExportModule","initializeExcelExport","print","printOptions","printModule","saveEvent","getEvents","endDate","includeOccurrences","eventCollections","getProcessedEvents","filterEventsByRange","getBlockEvents","getOccurrencesByID","eventID","getOccurrencesByRange","getCurrentViewDates","setRecurrenceEditor","recurrenceEditor","getEventMaxID","getDeletedOccurrences","recurrenceData","getCurrentViewEvents","refreshProcessedData","refreshTemplates","refreshHeader","refreshResourceHeader","getEventDetails","guid","getEventByGuid","isSlotAvailable","eventStart","eventEnd","eventObj","getGroupIndexFromEvent","eventCollection","filterEvents","filterEventsByResource","Guid","filter","copy","elements","processCutCopyActions","cut","paste","clipboardData","DataTransfer","navigator","clipboard","readText","then","text","setData","pasteEvent","ClipboardEvent","bubbles","cancelable","pasteHandler","catch","err","isCut","elementArray","eventDetailsArray","forEach","APPOINTMENT_CLASS","eventDetail","processClipboardAction","openEditor","isEventData","repeatType","closeEditor","dialogClose","openQuickInfoPopup","cellData","getAdjustedDate","workCell","cellClick","app","selectEvent","occurence","x","removeSelectedAppointmentClass","addSelectedAppointments","AGENDA_SELECTED_CELL","eventClick","closeQuickInfoPopup","quickPopupHide","openOverlapAlert","eventProp","quickDialog","overlapEvents","popupOpen","popupArgs","openValidationError","closeOverlapAlert","popupClose","hide","closeTooltip","getDateRangeText","getViewDates","getRenderDates","getNextPreviousDate","selectResourceByIndex","getIndexFromResourceId","addResource","removeResource","removeEventListener","modules_1","removeChildren","concat"],"sources":["C:/Users/Dell/OneDrive/Desktop/Programs/soc-portal/node_modules/@syncfusion/ej2-schedule/src/schedule/base/schedule.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, Property, Event, Animation, Collection, append } from '@syncfusion/ej2-base';\nimport { EventHandler, Browser, Internationalization, getDefaultDateObject, cldrData, L10n } from '@syncfusion/ej2-base';\nimport { getValue, compile, extend, isNullOrUndefined, NotifyPropertyChanges, Complex } from '@syncfusion/ej2-base';\nimport { getElement, removeClass, addClass, classList, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { HeaderRenderer } from '../renderer/header-renderer';\nimport { Scroll } from '../actions/scroll';\nimport { ScheduleTouch } from '../actions/touch';\nimport { KeyboardInteraction } from '../actions/keyboard';\nimport { Data } from '../actions/data';\nimport { EventBase } from '../event-renderer/event-base';\nimport { InlineEdit } from '../event-renderer/inline-edit';\nimport { QuickPopups } from '../popups/quick-popups';\nimport { EventTooltip } from '../popups/event-tooltip';\nimport { EventWindow } from '../popups/event-window';\nimport { Render } from '../renderer/renderer';\nimport { WorkHours } from '../models/work-hours';\nimport { TimeScale } from '../models/time-scale';\nimport { QuickInfoTemplates } from '../models/quick-info-templates';\nimport { HeaderRows } from '../models/header-rows';\nimport { Crud } from '../actions/crud';\nimport { WorkCellInteraction } from '../actions/work-cells';\nimport { EventSettings } from '../models/event-settings';\nimport { Group } from '../models/group';\nimport { Resources } from '../models/resources';\nimport { Gregorian, Islamic } from '../../common/calendar-util';\nimport { ResourceBase } from '../base/resource';\nimport { Timezone, timezoneData } from '../timezone/timezone';\nimport * as events from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport * as util from '../base/util';\nimport { ToolbarItem } from '../models/toolbar';\n/**\n * Represents the Schedule component that displays a list of events scheduled against specific date and timings,\n * thus helping us to plan and manage it properly.\n * ```html\n * <div id=\"schedule\"></div>\n * ```\n * ```typescript\n * <script>\n *   var scheduleObj = new Schedule();\n *   scheduleObj.appendTo(\"#schedule\");\n * </script>\n * ```\n */\nvar Schedule = /** @class */ (function (_super) {\n    __extends(Schedule, _super);\n    /**\n     * Constructor for creating the Schedule widget\n     *\n     * @param {ScheduleModel} options Accepts the schedule model properties to initiate the rendering\n     * @param {string | HTMLElement} element Accepts the DOM element reference\n     */\n    function Schedule(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.adaptiveGroupIndex = 0;\n        return _this;\n    }\n    /**\n     * Core method that initializes the control rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.render = function () {\n        var addClasses = [];\n        var removeClasses = [];\n        addClasses.push(cls.ROOT);\n        if (this.enableRtl) {\n            addClasses.push(cls.RTL);\n        }\n        else {\n            removeClasses.push(cls.RTL);\n        }\n        if (this.isAdaptive) {\n            addClasses.push(cls.DEVICE_CLASS);\n        }\n        else {\n            removeClasses.push(cls.DEVICE_CLASS);\n        }\n        if (this.enableAdaptiveUI) {\n            addClasses.push(cls.ADAPTIVE_CLASS);\n        }\n        else {\n            removeClasses.push(cls.ADAPTIVE_CLASS);\n        }\n        if (this.allowMultiDrag) {\n            addClasses.push(cls.MULTI_DRAG);\n        }\n        else {\n            removeClasses.push(cls.MULTI_DRAG);\n        }\n        if (this.cssClass) {\n            var cssClass = this.cssClass.split(' ');\n            for (var _i = 0, cssClass_1 = cssClass; _i < cssClass_1.length; _i++) {\n                var cls_1 = cssClass_1[_i];\n                addClasses.push(cls_1);\n            }\n        }\n        classList(this.element, addClasses, removeClasses);\n        this.validateDate();\n        createSpinner({ target: this.element });\n        this.scrollModule = new Scroll(this);\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        this.renderModule = new Render(this);\n        this.eventBase = new EventBase(this);\n        this.workCellAction = new WorkCellInteraction(this);\n        if (this.allowKeyboardInteraction) {\n            this.keyboardInteractionModule = new KeyboardInteraction(this);\n        }\n        this.inlineModule = new InlineEdit(this);\n        this.initializeDataModule();\n        this.renderTableContainer();\n        this.activeViewOptions = this.getActiveViewOptions();\n        this.initializeResources();\n        this.wireEvents();\n    };\n    Schedule.prototype.renderTableContainer = function () {\n        if (!this.element.querySelector('.' + cls.TABLE_CONTAINER_CLASS)) {\n            this.element.appendChild(this.createElement('div', { className: cls.TABLE_CONTAINER_CLASS }));\n        }\n    };\n    Schedule.prototype.getEventTemplateName = function (resIndex) {\n        var templateName = 'eventTemplate_' + resIndex;\n        if (this.activeEventTemplates.indexOf(templateName) < 0) {\n            this.activeEventTemplates.push(templateName);\n        }\n        return templateName;\n    };\n    /**\n     * Method to get element width\n     *\n     * @param {HTMLElement} element Accepts the DOM element\n     * @returns {number} Returns the width of the given element\n     * @private\n     */\n    Schedule.prototype.getElementWidth = function (element) {\n        return util.getElementWidth(element, this.uiStateValues.isTransformed);\n    };\n    /**\n     * Method to get element height\n     *\n     * @param {HTMLElement} element Accepts the DOM element\n     * @returns {number} Returns the Height of the given element\n     * @private\n     */\n    Schedule.prototype.getElementHeight = function (element) {\n        return util.getElementHeight(element, this.uiStateValues.isTransformed);\n    };\n    /**\n     * Method to get height from element\n     *\n     * @param {Element} element Accepts the DOM element\n     * @param {string} elementClass Accepts the element class\n     * @returns {number} Returns the height of the element\n     * @private\n     */\n    Schedule.prototype.getElementHeightFromClass = function (element, elementClass) {\n        return util.getElementHeightFromClass(element, elementClass, this.uiStateValues.isTransformed);\n    };\n    /**\n     * Method to render react templates\n     *\n     * @param {Function} callback - Specifies the callBack method\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.renderTemplates = function (callback) {\n        if (this.isReact) {\n            this.renderReactTemplates(callback);\n        }\n        else if (callback) {\n            callback();\n        }\n    };\n    /**\n     * Method to reset react templates\n     *\n     * @param {string[]} templates Accepts the template ID\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.resetTemplates = function (templates) {\n        if (this.isAngular || this.isReact) {\n            this.clearTemplate(templates);\n        }\n    };\n    /**\n     * This method renders untrusted strings and scripts securely by sanitizing them first.\n     *\n     * @param {string} value - A string value representing the HTML string value to be sanitized.\n     * @param {HTMLElement} element - An HTML element to which the sanitized or unsanitized HTML string will be assigned.\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.sanitize = function (value, element) {\n        if (this.enableHtmlSanitizer) {\n            element.innerText = SanitizeHtmlHelper.sanitize(value);\n        }\n        else {\n            element.innerHTML = value;\n        }\n    };\n    Schedule.prototype.initializeResources = function (isSetModel) {\n        if (isSetModel === void 0) { isSetModel = false; }\n        if (this.resources.length > 0) {\n            this.resourceBase = new ResourceBase(this);\n            this.resourceBase.bindResourcesData(isSetModel);\n        }\n        else {\n            this.resourceBase = null;\n            this.resourceCollection = [];\n            this.renderElements(isSetModel);\n        }\n    };\n    Schedule.prototype.destroyEditorWindow = function () {\n        if (this.eventWindow) {\n            this.eventWindow.destroy();\n            this.eventWindow = null;\n        }\n        this.eventWindow = new EventWindow(this);\n    };\n    /**\n     * Method to render the layout elements\n     *\n     * @param {boolean} isLayoutOnly Accepts the boolean value to render layout or not\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.renderElements = function (isLayoutOnly) {\n        if (isLayoutOnly) {\n            this.initializeView(this.currentView);\n            this.eventWindow.refresh();\n            return;\n        }\n        this.destroyHeaderModule();\n        if (this.showHeaderBar) {\n            this.headerModule = new HeaderRenderer(this);\n        }\n        this.renderTableContainer();\n        this.uiStateValues.isTransformed = Math.round(this.element.getBoundingClientRect().width) !== this.element.offsetWidth;\n        if (Browser.isDevice || Browser.isTouch) {\n            this.scheduleTouchModule = new ScheduleTouch(this);\n        }\n        this.initializeView(this.currentView);\n        this.destroyPopups();\n        if (!this.isPrinting) {\n            this.initializePopups();\n        }\n    };\n    Schedule.prototype.validateDate = function (selectedDate) {\n        if (selectedDate === void 0) { selectedDate = this.selectedDate; }\n        // persist the selected date value\n        var date = selectedDate instanceof Date ? new Date(selectedDate.getTime()) : new Date(selectedDate);\n        var minDate = isNullOrUndefined(this.minDate) ? new Date(1900, 0, 1) :\n            this.minDate instanceof Date ? new Date(this.minDate.getTime()) : new Date(this.minDate);\n        var maxDate = isNullOrUndefined(this.maxDate) ? new Date(2099, 11, 31) :\n            this.maxDate instanceof Date ? new Date(this.maxDate.getTime()) : new Date(this.maxDate);\n        if (minDate <= maxDate) {\n            if (date < minDate) {\n                date = minDate;\n            }\n            if (date > maxDate) {\n                date = maxDate;\n            }\n            this.setProperties({ selectedDate: new Date('' + date), minDate: new Date('' + minDate), maxDate: new Date('' + maxDate) }, true);\n            if (this.eventWindow) {\n                this.eventWindow.updateMinMaxDateToEditor();\n            }\n        }\n        else {\n            throw Error('minDate should be equal or less than maxDate');\n        }\n    };\n    Schedule.prototype.getViewIndex = function (viewName) {\n        for (var item = 0; item < this.viewCollections.length; item++) {\n            var checkIndex = this.viewCollections[parseInt(item.toString(), 10)].option;\n            if (checkIndex === viewName) {\n                return item;\n            }\n        }\n        return -1;\n    };\n    Schedule.prototype.setViewOptions = function (isModuleLoad) {\n        if (isModuleLoad === void 0) { isModuleLoad = false; }\n        if (isNullOrUndefined(this.views) || this.views.length === 0) {\n            return;\n        }\n        this.viewOptions = {};\n        this.viewCollections = [];\n        var viewName;\n        var selectedView;\n        var prevIndex = this.viewIndex;\n        var count = 0;\n        this.viewIndex = -1;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var view = _a[_i];\n            var isOptions = (typeof view === 'string') ? false : true;\n            if (typeof view === 'string') {\n                viewName = view;\n                if (this.currentView === viewName) {\n                    selectedView = viewName;\n                    this.viewIndex = count;\n                }\n            }\n            else {\n                viewName = view.option;\n                if (view.isSelected) {\n                    selectedView = viewName;\n                    this.viewIndex = count;\n                }\n            }\n            var obj = extend({ option: viewName }, isOptions ? view : {});\n            var fieldViewName = viewName.charAt(0).toLowerCase() + viewName.slice(1);\n            obj.cellHeaderTemplateName = obj.cellHeaderTemplate ? obj.option : '';\n            obj.dateHeaderTemplateName = obj.dateHeaderTemplate ? obj.option : '';\n            obj.dateRangeTemplateName = obj.dateRangeTemplate ? obj.option : '';\n            obj.cellTemplateName = obj.cellTemplate ? obj.option : '';\n            obj.dayHeaderTemplateName = obj.dayHeaderTemplate ? obj.option : '';\n            obj.monthHeaderTemplateName = obj.monthHeaderTemplate ? obj.option : '';\n            obj.resourceHeaderTemplateName = obj.resourceHeaderTemplate ? obj.option : '';\n            obj.headerIndentTemplateName = obj.headerIndentTemplate ? obj.option : '';\n            obj.eventTemplateName = obj.eventTemplate ? obj.option : '';\n            if (!isNullOrUndefined(obj.firstDayOfWeek) && obj.firstDayOfWeek === 0) {\n                delete obj.firstDayOfWeek;\n            }\n            if (!isNullOrUndefined(obj.interval) && obj.interval === 1) {\n                delete obj.interval;\n            }\n            this.viewCollections.push(obj);\n            if (isNullOrUndefined(this.viewOptions[\"\" + fieldViewName])) {\n                this.viewOptions[\"\" + fieldViewName] = [obj];\n            }\n            else {\n                this.viewOptions[\"\" + fieldViewName].push(obj);\n            }\n            count++;\n        }\n        if (!isModuleLoad && selectedView) {\n            this.setProperties({ currentView: selectedView }, true);\n        }\n        if (this.viewIndex === -1) {\n            var currentIndex = this.getViewIndex(this.currentView);\n            this.viewIndex = ((typeof this.views[0] !== 'string') && (!isNullOrUndefined(prevIndex) && prevIndex !== -1)) ? prevIndex :\n                (currentIndex === -1) ? 0 : currentIndex;\n        }\n    };\n    Schedule.prototype.getActiveViewOptions = function () {\n        var timeScale = {\n            enable: this.timeScale.enable,\n            interval: this.timeScale.interval,\n            slotCount: this.timeScale.slotCount,\n            majorSlotTemplate: this.timeScale.majorSlotTemplate,\n            minorSlotTemplate: this.timeScale.minorSlotTemplate\n        };\n        var isYearView = this.viewCollections[this.viewIndex].option.indexOf('Year') > -1;\n        var group = {\n            byDate: isYearView ? false : this.group.byDate,\n            byGroupID: this.group.byGroupID,\n            allowGroupEdit: this.group.allowGroupEdit,\n            resources: isNullOrUndefined(this.group.resources) ? [] : this.group.resources,\n            headerTooltipTemplate: this.group.headerTooltipTemplate,\n            enableCompactView: this.group.enableCompactView,\n            hideNonWorkingDays: ['Day', 'Week', 'WorkWeek', 'Month'].indexOf(this.currentView) > -1 ? this.group.hideNonWorkingDays : false\n        };\n        var workDays = this.viewCollections[this.viewIndex].workDays ? [] : this.workDays;\n        var scheduleOptions = {\n            dateFormat: this.dateFormat,\n            endHour: this.endHour,\n            isSelected: false,\n            option: null,\n            readonly: this.readonly,\n            startHour: this.startHour,\n            allowVirtualScrolling: false,\n            allowOverlap: this.allowOverlap,\n            overscanCount: this.overscanCount,\n            cellHeaderTemplate: this.cellHeaderTemplate,\n            dayHeaderTemplate: this.dayHeaderTemplate,\n            monthHeaderTemplate: this.monthHeaderTemplate,\n            cellTemplate: this.cellTemplate,\n            eventTemplate: this.eventSettings.template,\n            dateHeaderTemplate: this.dateHeaderTemplate,\n            dateRangeTemplate: this.dateRangeTemplate,\n            resourceHeaderTemplate: this.resourceHeaderTemplate,\n            headerIndentTemplate: this.headerIndentTemplate,\n            firstMonthOfYear: this.firstMonthOfYear,\n            firstDayOfWeek: this.firstDayOfWeek,\n            workDays: workDays,\n            monthsCount: this.monthsCount,\n            showWeekend: this.showWeekend,\n            showWeekNumber: this.showWeekNumber,\n            displayName: null,\n            interval: 1,\n            timeScale: timeScale,\n            timeFormat: this.internalTimeFormat,\n            group: group,\n            headerRows: this.headerRows,\n            orientation: 'Horizontal',\n            numberOfWeeks: 0,\n            displayDate: null,\n            enableLazyLoading: false\n        };\n        var viewOptions = this.viewCollections[this.viewIndex];\n        var viewsData = extend(scheduleOptions, viewOptions, undefined, true);\n        if (this.firstDayOfWeek !== 0 && viewOptions.firstDayOfWeek && this.firstDayOfWeek !== viewOptions.firstDayOfWeek) {\n            viewsData.firstDayOfWeek = this.firstDayOfWeek;\n        }\n        if (viewsData.displayDate) {\n            viewsData.displayDate = viewsData.displayDate instanceof Date ? new Date(viewsData.displayDate.getTime()) :\n                new Date(viewsData.displayDate);\n        }\n        if (viewsData.enableLazyLoading && !isNullOrUndefined(viewsData.group.resources) && viewsData.group.resources.length > 0 &&\n            (['Agenda', 'MonthAgenda', 'Year', 'TimelineYear'].indexOf(viewsData.option) === -1 ||\n                (viewsData.option === 'TimelineYear' && viewsData.orientation === 'Vertical'))) {\n            viewsData.allowVirtualScrolling = true;\n        }\n        return viewsData;\n    };\n    Schedule.prototype.initializeDataModule = function () {\n        this.eventFields = {\n            id: this.eventSettings.fields.id,\n            isBlock: this.eventSettings.fields.isBlock,\n            subject: this.eventSettings.fields.subject.name,\n            startTime: this.eventSettings.fields.startTime.name,\n            endTime: this.eventSettings.fields.endTime.name,\n            startTimezone: this.eventSettings.fields.startTimezone.name,\n            endTimezone: this.eventSettings.fields.endTimezone.name,\n            location: this.eventSettings.fields.location.name,\n            description: this.eventSettings.fields.description.name,\n            isAllDay: this.eventSettings.fields.isAllDay.name,\n            recurrenceID: this.eventSettings.fields.recurrenceID.name,\n            recurrenceRule: this.eventSettings.fields.recurrenceRule.name,\n            recurrenceException: this.eventSettings.fields.recurrenceException.name,\n            isReadonly: this.eventSettings.fields.isReadonly,\n            followingID: this.eventSettings.fields.followingID\n        };\n        this.setEditorTitles();\n        this.dataModule = new Data(this, this.eventSettings.dataSource, this.eventSettings.query);\n        this.crudModule = new Crud(this);\n    };\n    Schedule.prototype.setEditorTitles = function () {\n        this.editorTitles = {\n            subject: this.eventSettings.fields.subject.title || this.localeObj.getConstant('title'),\n            startTime: this.eventSettings.fields.startTime.title || this.localeObj.getConstant('start'),\n            endTime: this.eventSettings.fields.endTime.title || this.localeObj.getConstant('end'),\n            isAllDay: this.eventSettings.fields.isAllDay.title || this.localeObj.getConstant('allDay'),\n            startTimezone: this.eventSettings.fields.startTimezone.title || this.localeObj.getConstant('startTimezone'),\n            endTimezone: this.eventSettings.fields.endTimezone.title || this.localeObj.getConstant('endTimezone'),\n            location: this.eventSettings.fields.location.title || this.localeObj.getConstant('location'),\n            description: this.eventSettings.fields.description.title || this.localeObj.getConstant('description'),\n            recurrenceRule: this.eventSettings.fields.recurrenceRule.title || this.localeObj.getConstant('repeat')\n        };\n    };\n    Schedule.prototype.initializeView = function (viewName) {\n        this.showSpinner();\n        this.activeViewOptions = this.getActiveViewOptions();\n        if (this.resourceBase) {\n            this.resourceBase.setResourceCollection();\n        }\n        this.initializeTemplates();\n        this.renderModule.render(viewName);\n    };\n    Schedule.prototype.initializeTemplates = function () {\n        this.cellHeaderTemplateFn = this.templateParser(this.activeViewOptions.cellHeaderTemplate);\n        this.dayHeaderTemplateFn = this.templateParser(this.activeViewOptions.dayHeaderTemplate);\n        this.monthHeaderTemplateFn = this.templateParser(this.activeViewOptions.monthHeaderTemplate);\n        this.cellTemplateFn = this.templateParser(this.activeViewOptions.cellTemplate);\n        this.dateHeaderTemplateFn = this.templateParser(this.activeViewOptions.dateHeaderTemplate);\n        this.dateRangeTemplateFn = this.templateParser(this.activeViewOptions.dateRangeTemplate);\n        this.majorSlotTemplateFn = this.templateParser(this.activeViewOptions.timeScale.majorSlotTemplate);\n        this.minorSlotTemplateFn = this.templateParser(this.activeViewOptions.timeScale.minorSlotTemplate);\n        this.appointmentTemplateFn = this.templateParser(this.activeViewOptions.eventTemplate);\n        this.resourceHeaderTemplateFn = this.templateParser(this.activeViewOptions.resourceHeaderTemplate);\n        this.headerIndentTemplateFn = this.templateParser(this.activeViewOptions.headerIndentTemplate);\n        this.headerTooltipTemplateFn = this.templateParser(this.activeViewOptions.group.headerTooltipTemplate);\n        this.eventTooltipTemplateFn = this.templateParser(this.eventSettings.tooltipTemplate);\n        this.editorTemplateFn = this.templateParser(this.editorTemplate);\n        this.editorHeaderTemplateFn = this.templateParser(this.editorHeaderTemplate);\n        this.editorFooterTemplateFn = this.templateParser(this.editorFooterTemplate);\n        this.quickInfoTemplatesHeaderFn = this.templateParser(this.quickInfoTemplates.header);\n        this.quickInfoTemplatesContentFn = this.templateParser(this.quickInfoTemplates.content);\n        this.quickInfoTemplatesFooterFn = this.templateParser(this.quickInfoTemplates.footer);\n    };\n    Schedule.prototype.initializePopups = function () {\n        this.eventWindow = new EventWindow(this);\n        this.quickPopup = new QuickPopups(this);\n    };\n    /**\n     * Method to get day names\n     *\n     * @param {string} type Accepts the day name\n     * @returns {string[]} Returns the collection of day names\n     * @private\n     */\n    Schedule.prototype.getDayNames = function (type) {\n        var culShortNames = [];\n        var cldrObj;\n        var nameSpace = '';\n        if (isNullOrUndefined(this.locale) || this.locale === 'en' || this.locale === 'en-US') {\n            nameSpace = 'days.stand-alone.';\n            cldrObj = (getValue(nameSpace + type, getDefaultDateObject(this.getCalendarMode())));\n        }\n        else {\n            nameSpace = 'main.' + '' + this.locale + '.dates.calendars.' + this.getCalendarMode() + '.days.format.' + type;\n            cldrObj = (getValue(nameSpace, cldrData));\n        }\n        for (var _i = 0, _a = Object.keys(cldrObj); _i < _a.length; _i++) {\n            var obj = _a[_i];\n            culShortNames.push(getValue(obj, cldrObj));\n        }\n        return culShortNames;\n    };\n    Schedule.prototype.setCldrTimeFormat = function () {\n        if (!isNullOrUndefined(this.timeFormat)) {\n            this.internalTimeFormat = this.timeFormat;\n            return;\n        }\n        if (isNullOrUndefined(this.locale) || this.locale === 'en' || this.locale === 'en-US') {\n            this.internalTimeFormat = (getValue('timeFormats.short', getDefaultDateObject(this.getCalendarMode())));\n        }\n        else {\n            this.internalTimeFormat = (getValue('main.' + '' + this.locale + '.dates.calendars.' + this.getCalendarMode() + '.timeFormats.short', cldrData));\n        }\n    };\n    /**\n     * Method to get calendar mode\n     *\n     * @returns {string} Returns the calendar mode\n     * @private\n     */\n    Schedule.prototype.getCalendarMode = function () {\n        return !isNullOrUndefined(this.calendarMode) ? this.calendarMode.toLowerCase() : 'gregorian';\n    };\n    /**\n     * Method to get time in string\n     *\n     * @param {Date} date Accepts the date object\n     * @returns {string} Returns the time in string\n     * @private\n     */\n    Schedule.prototype.getTimeString = function (date) {\n        var time = this.globalize.formatDate(date, {\n            format: this.activeViewOptions.timeFormat,\n            type: 'time', calendar: this.getCalendarMode()\n        });\n        return time.toLocaleUpperCase();\n    };\n    /**\n     * Method to get  date object\n     *\n     * @param {Date} date Accepts the date object\n     * @returns {Date} Returns the date object\n     * @private\n     */\n    Schedule.prototype.getDateTime = function (date) {\n        return date instanceof Date ? new Date(date.getTime()) : new Date(date);\n    };\n    Schedule.prototype.setCalendarMode = function () {\n        if (this.calendarMode === 'Islamic') {\n            this.calendarUtil = new Islamic();\n        }\n        else {\n            this.calendarUtil = new Gregorian();\n        }\n    };\n    /**\n     * Method to change the current view\n     *\n     * @param {View} view Accepts the view name\n     * @param {Event} event Accepts the event object\n     * @param {boolean} muteOnChange Accepts the value to enable or disable mute on change\n     * @param {number} index Accepts the index value\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.changeView = function (view, event, muteOnChange, index) {\n        var _this = this;\n        if (isNullOrUndefined(index)) {\n            index = this.getViewIndex(view);\n        }\n        if (!muteOnChange && index === this.viewIndex && this.currentView === view || index < 0) {\n            return;\n        }\n        var previousView = this.activeViewOptions ? this.activeViewOptions.option : this.currentView;\n        var args = { requestType: 'viewNavigate', cancel: false, event: event };\n        this.trigger(events.actionBegin, args, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                var navArgs = {\n                    action: 'view', cancel: false, currentDate: _this.selectedDate, previousView: previousView, currentView: view, viewIndex: index\n                };\n                _this.trigger(events.navigating, navArgs, function (navigationArgs) {\n                    if (!navigationArgs.cancel) {\n                        var isVertical = ['Day', 'Week', 'WorkWeek'].indexOf(view) > -1 && ['Day', 'Week', 'WorkWeek'].indexOf(previousView) < 0;\n                        _this.uiStateValues.isInitial = isVertical || view.indexOf('Timeline') > -1 || view.indexOf('Year') > -1;\n                        _this.uiStateValues.top = view.indexOf('Timeline') > -1 && previousView.indexOf('Timeline') < 0 ? 0 : _this.uiStateValues.top;\n                        _this.viewIndex = navigationArgs.viewIndex;\n                        _this.setProperties({ currentView: view }, true);\n                        if (_this.headerModule) {\n                            _this.headerModule.updateActiveView();\n                            _this.headerModule.setCalendarDate(_this.selectedDate);\n                            _this.headerModule.setCalendarView();\n                        }\n                        _this.initializeView(_this.currentView);\n                        _this.animateLayout();\n                        args = { requestType: 'viewNavigate', cancel: false, event: event };\n                        _this.trigger(events.actionComplete, args);\n                    }\n                    else {\n                        _this.currentView = previousView;\n                    }\n                });\n            }\n            else {\n                _this.currentView = previousView;\n            }\n        });\n    };\n    /**\n     * Method to change the view date\n     *\n     * @param {Date} selectedDate Accepts the selected date\n     * @param {Event} event Accepts the event object\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.changeDate = function (selectedDate, event) {\n        var _this = this;\n        var args = { requestType: 'dateNavigate', cancel: false, event: event };\n        this.trigger(events.actionBegin, args, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                var navArgs = {\n                    action: 'date', cancel: false, previousDate: _this.selectedDate, currentDate: selectedDate\n                };\n                _this.trigger(events.navigating, navArgs, function (navigationArgs) {\n                    if (!navigationArgs.cancel) {\n                        _this.uiStateValues.isInitial = _this.activeView.isTimelineView() && _this.currentView !== 'TimelineYear';\n                        _this.validateDate(navigationArgs.currentDate);\n                        if (_this.headerModule) {\n                            _this.headerModule.setCalendarDate(navigationArgs.currentDate);\n                        }\n                        if (_this.currentView === 'MonthAgenda' && _this.monthAgendaModule) {\n                            _this.monthAgendaModule.monthAgendaDate = new Date('' + _this.selectedDate);\n                        }\n                        _this.initializeView(_this.currentView);\n                        _this.animateLayout();\n                        args = { requestType: 'dateNavigate', cancel: false, event: event };\n                        _this.trigger(events.actionComplete, args);\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * Method to validate min and max date\n     *\n     * @param {Date} date Accepts the date object\n     * @returns {boolean} Returns the boolean result to validate the min and max date\n     * @private\n     */\n    Schedule.prototype.isMinMaxDate = function (date) {\n        if (date === void 0) { date = this.selectedDate; }\n        var maxDate = isNullOrUndefined(this.maxDate) ? new Date(2099, 11, 31) : this.maxDate;\n        var minDate = isNullOrUndefined(this.minDate) ? new Date(1900, 0, 1) : this.minDate;\n        return ((date.getTime() >= minDate.getTime()) && (date.getTime() <= maxDate.getTime()));\n    };\n    /**\n     * Method to validate the selected date\n     *\n     * @param {Date} date Accepts the date object\n     * @returns {boolean} Returns the boolean value for given date is selected date or not\n     * @private\n     */\n    Schedule.prototype.isSelectedDate = function (date) {\n        return date.setHours(0, 0, 0, 0) === new Date('' + this.selectedDate).setHours(0, 0, 0, 0);\n    };\n    /**\n     * Method to get the current time\n     *\n     * @param {Date} date Accepts the date object\n     * @returns {Date} Returns the date object after performing the timezone conversion\n     * @private\n     */\n    Schedule.prototype.getCurrentTime = function (date) {\n        if (date === void 0) { date = new Date(); }\n        if (this.timezone) {\n            return this.tzModule.convert(date, this.tzModule.getLocalTimezoneName(), this.timezone);\n        }\n        return date;\n    };\n    /** Method to get navigate view\n     *\n     * @returns {View} Return the navigate view name\n     * @private\n     */\n    Schedule.prototype.getNavigateView = function () {\n        if (this.activeView.isTimelineView()) {\n            return this.currentView === 'TimelineMonth' || this.currentView === 'TimelineYear' ? 'TimelineDay' : 'Agenda';\n        }\n        return 'Day';\n    };\n    Schedule.prototype.animateLayout = function () {\n        if (!this.activeView.element) {\n            return;\n        }\n        new Animation({ duration: 600, name: 'FadeIn', timingFunction: 'easeIn' }).animate(this.activeView.element);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the declared modules\n     * @private\n     */\n    Schedule.prototype.requiredModules = function () {\n        var modules = [];\n        this.setViewOptions(true);\n        for (var _i = 0, _a = Object.keys(this.viewOptions); _i < _a.length; _i++) {\n            var view = _a[_i];\n            view = (view === 'timelineDay' || view === 'timelineWeek' || view === 'timelineWorkWeek') ? 'timelineViews' : view;\n            modules.push({ member: view, args: [this] });\n        }\n        if (this.allowDragAndDrop) {\n            modules.push({ member: 'dragAndDrop', args: [this] });\n        }\n        if (this.allowResizing) {\n            modules.push({ member: 'resize', args: [this] });\n        }\n        modules.push({ member: 'excelExport', args: [this] });\n        modules.push({ member: 'iCalendarExport', args: [this] });\n        modules.push({ member: 'iCalendarImport', args: [this] });\n        modules.push({ member: 'print', args: [this] });\n        return modules;\n    };\n    /**\n     * Initializes the values of private members.\n     *\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.preRender = function () {\n        this.isAdaptive = Browser.isDevice || util.isIPadDevice();\n        this.globalize = new Internationalization(this.locale);\n        this.tzModule = new Timezone();\n        if (this && isNullOrUndefined(this.uiStateValues) || !(this.enablePersistence)) {\n            this.uiStateValues = {\n                expand: false, isInitial: true, left: 0, top: 0, isGroupAdaptive: false,\n                isIgnoreOccurrence: false, groupIndex: this.adaptiveGroupIndex, action: false,\n                isBlock: false, isCustomMonth: true, isPreventTimezone: false, isTransformed: false\n            };\n        }\n        this.currentTimezoneDate = this.getCurrentTime();\n        this.activeCellsData = {\n            startTime: new Date(this.currentTimezoneDate),\n            endTime: new Date(this.currentTimezoneDate),\n            isAllDay: false\n        };\n        this.activeEventData = { event: undefined, element: undefined };\n        this.getDefaultLocale();\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n        this.setCldrTimeFormat();\n        this.setCalendarMode();\n        this.eventsData = [];\n        this.eventsProcessed = [];\n        this.blockData = [];\n        this.blockProcessed = [];\n        this.resourceCollection = [];\n        this.currentAction = null;\n        this.selectedElements = [];\n        this.activeEventTemplates = [];\n        this.setViewOptions();\n    };\n    Schedule.prototype.getDefaultLocale = function () {\n        this.defaultLocale = {\n            day: 'Day',\n            week: 'Week',\n            workWeek: 'Work Week',\n            month: 'Month',\n            year: 'Year',\n            agenda: 'Agenda',\n            weekAgenda: 'Week Agenda',\n            workWeekAgenda: 'Work Week Agenda',\n            monthAgenda: 'Month Agenda',\n            today: 'Today',\n            noEvents: 'No events',\n            emptyContainer: 'There are no events scheduled on this day.',\n            allDay: 'All day',\n            start: 'Start',\n            end: 'End',\n            more: 'more',\n            close: 'Close',\n            cancel: 'Cancel',\n            noTitle: '(No Title)',\n            delete: 'Delete',\n            deleteEvent: 'Delete Event',\n            deleteMultipleEvent: 'Delete Multiple Events',\n            selectedItems: 'Items selected',\n            deleteSeries: 'Entire Series',\n            edit: 'Edit',\n            editSeries: 'Entire Series',\n            editEvent: 'Edit Event',\n            createEvent: 'Create',\n            subject: 'Subject',\n            addTitle: 'Add title',\n            moreDetails: 'More Details',\n            moreEvents: 'More Events',\n            save: 'Save',\n            editContent: 'How would you like to change the appointment in the series?',\n            deleteContent: 'Are you sure you want to delete this event?',\n            deleteMultipleContent: 'Are you sure you want to delete the selected events?',\n            newEvent: 'New Event',\n            title: 'Title',\n            location: 'Location',\n            description: 'Description',\n            timezone: 'Timezone',\n            startTimezone: 'Start Timezone',\n            endTimezone: 'End Timezone',\n            repeat: 'Repeat',\n            saveButton: 'Save',\n            cancelButton: 'Cancel',\n            deleteButton: 'Delete',\n            recurrence: 'Recurrence',\n            wrongPattern: 'The recurrence pattern is not valid.',\n            seriesChangeAlert: 'Do you want to cancel the changes made to specific ' +\n                'instances of this series and match it to the whole series again?',\n            createError: 'The duration of the event must be shorter than how frequently it occurs. ' +\n                'Shorten the duration, or change the recurrence pattern in the recurrence event editor.',\n            sameDayAlert: 'Two occurrences of the same event cannot occur on the same day.',\n            occurenceAlert: 'Cannot reschedule an occurrence of the recurring appointment if it skips over ' +\n                'a later occurrence of the same appointment.',\n            editRecurrence: 'Edit Recurrence',\n            recurringEvent: 'Recurring Event',\n            repeats: 'Repeats',\n            alert: 'Alert',\n            startEndError: 'The selected end date occurs before the start date.',\n            invalidDateError: 'The entered date value is invalid.',\n            blockAlert: 'Events cannot be scheduled within the blocked time range.',\n            overlapAlert: 'Events cannot be scheduled during the chosen time as it overlaps with another event.',\n            ok: 'Ok',\n            yes: 'Yes',\n            no: 'No',\n            of: 'of',\n            occurrence: 'Occurrence',\n            series: 'Series',\n            previous: 'Previous',\n            next: 'Next',\n            timelineDay: 'Timeline Day',\n            timelineWeek: 'Timeline Week',\n            timelineWorkWeek: 'Timeline Work Week',\n            timelineMonth: 'Timeline Month',\n            timelineYear: 'Timeline Year',\n            editFollowingEvent: 'Following Events',\n            deleteTitle: 'Delete Event',\n            editTitle: 'Edit Event',\n            beginFrom: 'Begin From',\n            endAt: 'Ends At',\n            expandAllDaySection: 'Expand-all-day-section',\n            collapseAllDaySection: 'Collapse-all-day-section',\n            searchTimezone: 'Search Timezone',\n            noRecords: 'No records found'\n        };\n    };\n    Schedule.prototype.wireEvents = function () {\n        EventHandler.add(window, 'resize', this.onScheduleResize, this);\n        EventHandler.add(window, 'orientationchange', this.onScheduleResize, this);\n        EventHandler.add(document, Browser.touchStartEvent, this.onDocumentClick, this);\n        if (this.allowClipboard) {\n            EventHandler.add(document, 'paste', this.onDocumentPaste, this);\n        }\n    };\n    /**\n     * Method to remove selected class\n     *\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.removeSelectedClass = function () {\n        var selectedCells = this.getSelectedCells();\n        for (var _i = 0, selectedCells_1 = selectedCells; _i < selectedCells_1.length; _i++) {\n            var cell = selectedCells_1[_i];\n            cell.removeAttribute('tabindex');\n        }\n        removeClass(selectedCells, cls.SELECTED_CELL_CLASS);\n        if (this.keyboardInteractionModule && this.keyboardInteractionModule.selectedCells.length > 0) {\n            this.keyboardInteractionModule.selectedCells = [];\n        }\n    };\n    /**\n     * Method to add selected class\n     *\n     * @param {HTMLTableCellElement[]} cells Accepts the collection of elements\n     * @param {HTMLTableCellElement} focusCell Accepts the focus element\n     * @param {boolean} isPreventScroll Accepts the boolean value to prevent scroll\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.addSelectedClass = function (cells, focusCell, isPreventScroll) {\n        addClass(cells, cls.SELECTED_CELL_CLASS);\n        if (focusCell) {\n            focusCell.setAttribute('tabindex', '0');\n            focusCell.focus({ preventScroll: isPreventScroll || false });\n        }\n    };\n    /**\n     * Method to select cell\n     *\n     * @param {HTMLElement | HTMLTableCellElement} element Accepts the select element\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.selectCell = function (element) {\n        this.removeSelectedClass();\n        this.addSelectedClass([element], element);\n    };\n    /**\n     * Method to get all day row element\n     *\n     * @returns {Element} Returns the all day row element\n     * @private\n     */\n    Schedule.prototype.getAllDayRow = function () {\n        return this.element.querySelector('.' + cls.ALLDAY_ROW_CLASS);\n    };\n    /**\n     * Method to get content table element\n     *\n     * @returns {HTMLElement} Returns the content table element\n     * @private\n     */\n    Schedule.prototype.getContentTable = function () {\n        return this.activeView.element.querySelector('.' + cls.CONTENT_TABLE_CLASS + ' tbody');\n    };\n    /**\n     * Method to get all content table rows\n     *\n     * @returns {HTMLElement[]} Returns the content table rows\n     * @private\n     */\n    Schedule.prototype.getTableRows = function () {\n        return [].slice.call(this.element.querySelectorAll('.' + cls.CONTENT_TABLE_CLASS + ' tbody tr:not(.' + cls.HIDDEN_CLASS + ')'));\n    };\n    /**\n     * Method to get work cell elements\n     *\n     * @returns {Element[]} Returns the all work cell elements\n     * @private\n     */\n    Schedule.prototype.getWorkCellElements = function () {\n        return [].slice.call(this.element.querySelectorAll('.' + cls.WORK_CELLS_CLASS));\n    };\n    /**\n     * Method to get the index from date collection\n     *\n     * @param {Date[]} collection Accepts the collections of date\n     * @param {Date} date Accepts the date object\n     * @returns {number} Returns the index compared date with date collections\n     * @private\n     */\n    Schedule.prototype.getIndexOfDate = function (collection, date) {\n        return collection.map(Number).indexOf(+date);\n    };\n    /**\n     * Method to find all day cell\n     *\n     * @param {Element} td Accepts the DOM Element\n     * @returns {boolean} Returns the boolean value\n     * @private\n     */\n    Schedule.prototype.isAllDayCell = function (td) {\n        if (['Month', 'TimelineMonth', 'TimelineYear', 'MonthAgenda'].indexOf(this.currentView) > -1 ||\n            td.classList.contains(cls.ALLDAY_CELLS_CLASS) ||\n            td.classList.contains(cls.HEADER_CELLS_CLASS) || !this.activeViewOptions.timeScale.enable) {\n            return true;\n        }\n        if (this.activeView.isTimelineView() && this.activeViewOptions.headerRows.length > 0 &&\n            this.activeViewOptions.headerRows.slice(-1)[0].option !== 'Hour') {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Method to get date from element\n     *\n     * @param {Element} td Accepts the DOM element\n     * @returns {Date} Returns the date object\n     * @private\n     */\n    Schedule.prototype.getDateFromElement = function (td) {\n        var dateString;\n        if (!isNullOrUndefined(td)) {\n            dateString = td.getAttribute('data-date');\n        }\n        if (!isNullOrUndefined(dateString)) {\n            var dateInMS = parseInt(dateString, 10);\n            var date = new Date(dateInMS);\n            return date;\n        }\n        return undefined;\n    };\n    /**\n     * Method to get target element from given selector\n     *\n     * @param {string} selector Accepts the element selector\n     * @param {number} left Accepts the pageX value\n     * @param {number} top Accepts the pageY value\n     * @returns {Element[]} Returns the collection of elements based on the given selector\n     * @private\n     */\n    Schedule.prototype.getTargetElement = function (selector, left, top) {\n        var element = document.elementFromPoint(left, top);\n        var targetElement;\n        if (element) {\n            targetElement = element.closest(selector);\n        }\n        return (targetElement) ? [targetElement] : null;\n    };\n    /**\n     * Method to process cell header template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getCellHeaderTemplate = function () {\n        return this.cellHeaderTemplateFn;\n    };\n    /**\n     * Method to process cell header template in year view.\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getDayHeaderTemplate = function () {\n        return this.dayHeaderTemplateFn;\n    };\n    /**\n     * Method to process cell header template in year view.\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getMonthHeaderTemplate = function () {\n        return this.monthHeaderTemplateFn;\n    };\n    /**\n     * Method to process cell template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getCellTemplate = function () {\n        return this.cellTemplateFn;\n    };\n    /**\n     * Method to process date header template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getDateHeaderTemplate = function () {\n        return this.dateHeaderTemplateFn;\n    };\n    /**\n     * Method to process date range template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getDateRangeTemplate = function () {\n        return this.dateRangeTemplateFn;\n    };\n    /**\n     * Method to process major slot template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getMajorSlotTemplate = function () {\n        return this.majorSlotTemplateFn;\n    };\n    /**\n     * Method to process minor slot template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getMinorSlotTemplate = function () {\n        return this.minorSlotTemplateFn;\n    };\n    /**\n     * Method to process appointment template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getAppointmentTemplate = function () {\n        return this.appointmentTemplateFn;\n    };\n    /**\n     * Method to process appointment tooltip template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getEventTooltipTemplate = function () {\n        return this.eventTooltipTemplateFn;\n    };\n    /**\n     * Method to process header tooltip template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getHeaderTooltipTemplate = function () {\n        return this.headerTooltipTemplateFn;\n    };\n    /**\n     * Method to process editor template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getEditorTemplate = function () {\n        return this.editorTemplateFn;\n    };\n    /**\n     * Method to process editor header template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getEditorHeaderTemplate = function () {\n        return this.editorHeaderTemplateFn;\n    };\n    /**\n     * Method to process editor footer template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getEditorFooterTemplate = function () {\n        return this.editorFooterTemplateFn;\n    };\n    /**\n     * Method to process quick info header template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getQuickInfoTemplatesHeader = function () {\n        return this.quickInfoTemplatesHeaderFn;\n    };\n    /**\n     * Method to process quick info content template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getQuickInfoTemplatesContent = function () {\n        return this.quickInfoTemplatesContentFn;\n    };\n    /**\n     * Method to process quick info footer template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getQuickInfoTemplatesFooter = function () {\n        return this.quickInfoTemplatesFooterFn;\n    };\n    /**\n     * Method to process resource header template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getResourceHeaderTemplate = function () {\n        return this.resourceHeaderTemplateFn;\n    };\n    /**\n     * Method to process indent template\n     *\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.getHeaderIndentTemplate = function () {\n        return this.headerIndentTemplateFn;\n    };\n    /**\n     * Method to get dynamic CSS properties\n     *\n     * @returns {ScrollCss} Returns the CSS properties dynamically\n     * @private\n     */\n    Schedule.prototype.getCssProperties = function () {\n        var cssProps = {\n            border: this.enableRtl ? 'borderLeftWidth' : 'borderRightWidth',\n            padding: this.enableRtl ? 'paddingLeft' : 'paddingRight',\n            rtlBorder: this.enableRtl ? 'borderRightWidth' : 'borderLeftWidth',\n            rtlPadding: this.enableRtl ? 'paddingRight' : 'paddingLeft'\n        };\n        return cssProps;\n    };\n    /**\n     * Method to remove new event element in adaptive mode\n     *\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.removeNewEventElement = function () {\n        var eventClone = this.element.querySelector('.' + cls.NEW_EVENT_CLASS);\n        if (!isNullOrUndefined(eventClone)) {\n            remove(eventClone);\n        }\n    };\n    /**\n     * Method to get start end time from string\n     *\n     * @param {string} startEndTime Accepts the start end time string value\n     * @returns {Date} Returns the date object\n     * @private\n     */\n    Schedule.prototype.getStartEndTime = function (startEndTime) {\n        if (!isNullOrUndefined(startEndTime) && startEndTime !== '') {\n            var startEndDate = util.resetTime(new Date(this.currentTimezoneDate) || this.getCurrentTime());\n            var timeString = startEndTime.split(':');\n            if (timeString.length === 2) {\n                startEndDate.setHours(parseInt(timeString[0], 10), parseInt(timeString[1], 10), 0);\n            }\n            return startEndDate;\n        }\n        return null;\n    };\n    Schedule.prototype.onDocumentClick = function (args) {\n        this.notify(events.documentClick, { event: args });\n    };\n    Schedule.prototype.onDocumentPaste = function (args) {\n        this.notify(events.documentPaste, { event: args });\n    };\n    Schedule.prototype.onScheduleResize = function () {\n        if (isNullOrUndefined(this.activeView) || ((this.isAdaptive || util.isMobile()) && document.activeElement\n            && (document.activeElement.classList.contains(cls.SUBJECT_CLASS) ||\n                document.activeElement.classList.contains(cls.INLINE_SUBJECT_CLASS))) || this.uiStateValues.isTapHold) {\n            return;\n        }\n        if (this.virtualScrollModule && this.activeView.isTimelineView()) {\n            this.virtualScrollModule.refreshLayout();\n        }\n        if (this.activeViewOptions.timeScale.enable && this.activeView) {\n            this.activeView.highlightCurrentTime();\n        }\n        if (this.quickPopup) {\n            this.quickPopup.onClosePopup();\n        }\n        util.resetScrollbarWidth();\n        if (this.currentView === 'Month' || ((this.currentView !== 'Agenda' && this.currentView !== 'MonthAgenda')\n            && !this.activeViewOptions.timeScale.enable) || this.activeView.isTimelineView()) {\n            this.activeView.resetColWidth();\n            this.notify(events.scrollUiUpdate, { cssProperties: this.getCssProperties(), isPreventScrollUpdate: true });\n            var isRemoteRefresh = false;\n            if (this.activeViewOptions.enableLazyLoading && this.virtualScrollModule && this.virtualScrollModule.isRemoteRefresh) {\n                isRemoteRefresh = this.virtualScrollModule.isRemoteRefresh;\n                this.virtualScrollModule.isRemoteRefresh = false;\n            }\n            this.refreshEvents(isRemoteRefresh);\n            if (this.virtualScrollModule && !this.virtualScrollModule.enableTransition) {\n                var resWrap = this.element.querySelector('.' + cls.RESOURCE_COLUMN_WRAP_CLASS);\n                var conWrap = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n                this.virtualScrollModule.enableTransition = true;\n                addClass([conWrap, resWrap], 'e-transition');\n            }\n        }\n        else {\n            this.notify(events.contentReady, {});\n        }\n    };\n    /**\n     * Method to process the templates\n     *\n     * @param {string | Function} template Accepts the template in string\n     * @returns {CallbackFunction} Returns the callback function\n     * @private\n     */\n    Schedule.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (typeof template === 'function') {\n                    return compile(template);\n                }\n                else {\n                    if (document.querySelectorAll(template).length) {\n                        return compile(document.querySelector(template).innerHTML.trim());\n                    }\n                    else {\n                        return compile(template);\n                    }\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves the selected cells.\n     *\n     * @returns {Element[]} The elements of currently selected cells will be returned.\n     * @private\n     */\n    Schedule.prototype.getSelectedCells = function () {\n        return [].slice.call(this.element.querySelectorAll('.' + cls.SELECTED_CELL_CLASS));\n    };\n    /**\n     * Method to generate the announcement string\n     *\n     * @param {Object} event Accepts the event object\n     * @param {string} subject Accepts the subject text\n     * @returns {string} Returns the announcement string\n     * @private\n     */\n    Schedule.prototype.getAnnouncementString = function (event, subject) {\n        var resourceName;\n        if (this.quickPopup && this.activeViewOptions.group.resources.length > 0) {\n            var constantText = '\"s event - ';\n            resourceName = this.quickPopup.getResourceText({ event: event }, 'event') + constantText;\n        }\n        var recordSubject = (subject || (event[this.eventFields.subject] || this.eventSettings.fields.subject.default));\n        var recordLocation = (event[this.eventFields.location] || this.eventSettings.fields.location.default);\n        var skeleton = 'full';\n        var startDateText = this.globalize.formatDate(event[this.eventFields.startTime], {\n            type: 'dateTime', skeleton: skeleton, calendar: this.getCalendarMode()\n        });\n        var endDateText = this.globalize.formatDate(event[this.eventFields.endTime], {\n            type: 'dateTime', skeleton: skeleton, calendar: this.getCalendarMode()\n        });\n        var announcementString = recordSubject + ' ' + this.localeObj.getConstant('beginFrom') + ' '\n            + startDateText + ' ' + this.localeObj.getConstant('endAt') + ' ' + endDateText;\n        if (resourceName) {\n            announcementString = resourceName + ' ' + announcementString;\n        }\n        if (recordLocation && recordLocation !== '') {\n            announcementString = announcementString + ' ' + this.localeObj.getConstant('location') + ' ' + recordLocation;\n        }\n        if (event[this.eventFields.recurrenceRule] && event[this.eventFields.recurrenceRule] !== ''\n            && event[this.eventFields.id] === event[this.eventFields.recurrenceID]) {\n            announcementString = announcementString + ' ' + this.localeObj.getConstant('recurringEvent');\n        }\n        return announcementString;\n    };\n    /**\n     * Method to process the element boundary validation\n     *\n     * @param {number} pageY Accepts the pageY value\n     * @param {number} pageX Accepts the pageX value\n     * @returns {ResizeEdges} Returns the boundary validation object\n     * @private\n     */\n    Schedule.prototype.boundaryValidation = function (pageY, pageX) {\n        var autoScrollDistance = 30;\n        var scrollEdges = { left: false, right: false, top: false, bottom: false };\n        var viewBoundaries = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS).getBoundingClientRect();\n        if ((pageY < viewBoundaries.top + autoScrollDistance + window.pageYOffset) &&\n            (pageY > viewBoundaries.top + window.pageYOffset)) {\n            scrollEdges.top = true;\n        }\n        if ((pageY > (viewBoundaries.bottom - autoScrollDistance) + window.pageYOffset) &&\n            (pageY < viewBoundaries.bottom + window.pageYOffset)) {\n            scrollEdges.bottom = true;\n        }\n        if ((pageX < viewBoundaries.left + autoScrollDistance + window.pageXOffset) &&\n            (pageX > viewBoundaries.left + window.pageXOffset)) {\n            scrollEdges.left = true;\n        }\n        if ((pageX > (viewBoundaries.right - autoScrollDistance) + window.pageXOffset) &&\n            (pageX < viewBoundaries.right + window.pageXOffset)) {\n            scrollEdges.right = true;\n        }\n        return scrollEdges;\n    };\n    /**\n     * Method to get the week number.\n     *\n     * @param {Date[]} dates Accepts the date collections\n     * @returns {number} Returns the week number\n     * @private\n     */\n    Schedule.prototype.getWeekNumberContent = function (dates) {\n        var weekNumber;\n        if (this.weekRule === 'FirstDay') {\n            var weekNumberDate = util.getWeekLastDate(dates.slice(-1)[0], this.firstDayOfWeek);\n            weekNumber = this.globalize.formatNumber(util.getWeekNumber(weekNumberDate));\n        }\n        else if (this.weekRule === 'FirstFourDayWeek') {\n            var weekFirstDate = util.getWeekFirstDate(dates.slice(-1)[0], this.firstDayOfWeek);\n            var weekLastDate = util.getWeekLastDate(dates.slice(-1)[0], this.firstDayOfWeek);\n            var weekMidDate = util.getWeekMiddleDate(weekFirstDate, weekLastDate);\n            weekNumber = this.globalize.formatNumber(util.getWeekNumber(weekMidDate));\n        }\n        else if (this.weekRule === 'FirstFullWeek') {\n            var weekFirstDate = util.getWeekFirstDate(dates.slice(-1)[0], this.firstDayOfWeek);\n            weekNumber = this.globalize.formatNumber(util.getWeekNumber(weekFirstDate));\n        }\n        return weekNumber;\n    };\n    /**\n     * Method to render the header indent template.\n     *\n     * @param {TdData} data Accepts the td data\n     * @param {Element} td Accepts the td element\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.renderHeaderIndentTemplate = function (data, td) {\n        if (this.activeViewOptions.headerIndentTemplate) {\n            var scheduleId = this.element.id + '_';\n            var viewName = this.activeViewOptions.headerIndentTemplateName;\n            var templateId = scheduleId + viewName + 'headerIndentTemplate';\n            var indentTemplate = [].slice.call(this.getHeaderIndentTemplate()(data, this, 'headerIndentTemplate', templateId, false, undefined, undefined, this.root));\n            append(indentTemplate, td);\n        }\n    };\n    /**\n     * Method to check for refreshing the targeted resource row events.\n     *\n     * @returns {boolean} Returns the boolean value\n     * @private\n     */\n    Schedule.prototype.isSpecificResourceEvents = function () {\n        return this.activeViewOptions.group.resources.length > 0 && !this.activeViewOptions.group.allowGroupEdit &&\n            !this.rowAutoHeight && !this.virtualScrollModule && this.activeViewOptions.group.byGroupID;\n    };\n    Schedule.prototype.unWireEvents = function () {\n        EventHandler.remove(window, 'resize', this.onScheduleResize);\n        EventHandler.remove(window, 'orientationchange', this.onScheduleResize);\n        EventHandler.remove(document, Browser.touchStartEvent, this.onDocumentClick);\n        EventHandler.remove(document, 'paste', this.onDocumentPaste);\n    };\n    /**\n     * Core method to return the component name.\n     *\n     * @returns {string} Returns the module name\n     * @private\n     */\n    Schedule.prototype.getModuleName = function () {\n        return 'schedule';\n    };\n    /**\n     * Returns the properties to be maintained in the persisted state.\n     *\n     * @returns {string} Returns the persistance data\n     * @private\n     */\n    Schedule.prototype.getPersistData = function () {\n        return this.addOnPersist(['currentView', 'selectedDate', 'scrollTop', 'scrollLeft', 'adaptiveGroupIndex']);\n    };\n    /**\n     * Called internally, if any of the property value changed.\n     *\n     * @returns {void}\n     * @private\n     */\n    Schedule.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (this.isReact && isNullOrUndefined(this.activeView)) {\n            return;\n        }\n        var state = {\n            isRefresh: false, isResource: false, isDate: false, isView: false, isLayout: false, isDataManager: false\n        };\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'views':\n                    this.setViewOptions();\n                    if (this.headerModule) {\n                        this.headerModule.updateItems();\n                    }\n                    state.isView = true;\n                    break;\n                case 'currentView':\n                    state.isView = true;\n                    break;\n                case 'minDate':\n                case 'maxDate':\n                case 'selectedDate':\n                    state.isDate = true;\n                    break;\n                case 'dateFormat':\n                    this.activeViewOptions = this.getActiveViewOptions();\n                    if (this.headerModule) {\n                        this.headerModule.updateDateRange();\n                    }\n                    break;\n                case 'showHeaderBar':\n                case 'toolbarItems':\n                    this.destroyHeaderModule();\n                    if (newProp.showHeaderBar) {\n                        this.headerModule = new HeaderRenderer(this);\n                        this.headerModule.updateDateRange();\n                    }\n                    this.notify(events.scrollUiUpdate, { cssProperties: this.getCssProperties() });\n                    if (this.activeView.isTimelineView()) {\n                        this.refreshEvents(false);\n                    }\n                    break;\n                case 'workDays':\n                    if (JSON.stringify(oldProp.workDays) !== JSON.stringify(newProp.workDays)) {\n                        state.isLayout = true;\n                    }\n                    break;\n                case 'showWeekend':\n                case 'startHour':\n                case 'endHour':\n                case 'workHours':\n                case 'readonly':\n                case 'headerRows':\n                case 'showWeekNumber':\n                case 'rowAutoHeight':\n                    state.isLayout = true;\n                    break;\n                case 'locale':\n                case 'calendarMode':\n                    this.globalize = new Internationalization(this.locale);\n                    this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n                    this.setCldrTimeFormat();\n                    this.setCalendarMode();\n                    state.isRefresh = true;\n                    break;\n                case 'firstDayOfWeek':\n                    this.activeViewOptions.firstDayOfWeek = newProp.firstDayOfWeek;\n                    if (this.eventWindow) {\n                        this.eventWindow.refreshRecurrenceEditor();\n                    }\n                    state.isLayout = true;\n                    break;\n                case 'showTimeIndicator':\n                    if (this.activeViewOptions.timeScale.enable && this.activeView) {\n                        this.activeView.highlightCurrentTime();\n                    }\n                    break;\n                case 'cellHeaderTemplate':\n                    this.activeViewOptions.cellHeaderTemplate = newProp.cellHeaderTemplate;\n                    this.cellHeaderTemplateFn = this.templateParser(this.activeViewOptions.cellHeaderTemplate);\n                    state.isLayout = true;\n                    break;\n                case 'cellTemplate':\n                    this.activeViewOptions.cellTemplate = newProp.cellTemplate;\n                    this.cellTemplateFn = this.templateParser(this.activeViewOptions.cellTemplate);\n                    state.isLayout = true;\n                    break;\n                case 'dateHeaderTemplate':\n                    this.activeViewOptions.dateHeaderTemplate = newProp.dateHeaderTemplate;\n                    this.dateHeaderTemplateFn = this.templateParser(this.activeViewOptions.dateHeaderTemplate);\n                    state.isLayout = true;\n                    break;\n                case 'dateRangeTemplate':\n                    this.activeViewOptions.dateRangeTemplate = newProp.dateRangeTemplate;\n                    this.dateRangeTemplateFn = this.templateParser(this.activeViewOptions.dateRangeTemplate);\n                    if (this.headerModule) {\n                        this.headerModule.updateDateRange();\n                    }\n                    break;\n                case 'dayHeaderTemplate':\n                    this.activeViewOptions.dayHeaderTemplate = newProp.dayHeaderTemplate;\n                    this.dayHeaderTemplateFn = this.templateParser(this.activeViewOptions.dayHeaderTemplate);\n                    state.isLayout = true;\n                    break;\n                case 'monthHeaderTemplate':\n                    this.activeViewOptions.monthHeaderTemplate = newProp.monthHeaderTemplate;\n                    this.monthHeaderTemplateFn = this.templateParser(this.activeViewOptions.monthHeaderTemplate);\n                    state.isLayout = true;\n                    break;\n                case 'resourceHeaderTemplate':\n                    this.activeViewOptions.resourceHeaderTemplate = newProp.resourceHeaderTemplate;\n                    this.resourceHeaderTemplateFn = this.templateParser(this.activeViewOptions.resourceHeaderTemplate);\n                    state.isLayout = true;\n                    break;\n                case 'timezone':\n                    this.eventBase.timezonePropertyChange(oldProp.timezone);\n                    if (this.headerModule) {\n                        this.headerModule.setCalendarTimezone();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRtlClass();\n                    state.isRefresh = true;\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, oldProp, state);\n                    break;\n            }\n        }\n        this.propertyChangeAction(state);\n    };\n    Schedule.prototype.propertyChangeAction = function (state) {\n        if (state.isRefresh) {\n            this.refresh();\n        }\n        else if (state.isResource) {\n            this.initializeResources(true);\n        }\n        else if (state.isView) {\n            this.changeView(this.currentView, null, true);\n        }\n        else if (state.isDate) {\n            if (isNullOrUndefined(this.selectedDate)) {\n                this.setProperties({ selectedDate: this.getCurrentTime() }, true);\n            }\n            this.changeDate(this.selectedDate);\n        }\n        else if (state.isLayout) {\n            this.activeCellsData = null;\n            this.initializeView(this.currentView);\n        }\n        else if (state.isDataManager && this.crudModule) {\n            if (this.dragAndDropModule) {\n                this.dragAndDropModule.actionObj.action = '';\n                removeClass([this.element], cls.EVENT_ACTION_CLASS);\n            }\n            this.crudModule.refreshDataManager();\n        }\n    };\n    Schedule.prototype.allDayRowScrollUpdate = function () {\n        var dateHeader = this.element.querySelector('.' + cls.DATE_HEADER_WRAP_CLASS);\n        var allDayRow = this.element.querySelector('.' + cls.ALLDAY_ROW_CLASS);\n        if (this.height === 'auto' || !this.enableAllDayScroll) {\n            addClass([dateHeader], cls.ALLDAY_APPOINTMENT_AUTO);\n            if (dateHeader.classList.contains(cls.ALLDAY_APPOINTMENT_SCROLL)) {\n                removeClass([dateHeader], cls.ALLDAY_APPOINTMENT_SCROLL);\n            }\n            if (this.uiStateValues.expand) {\n                var allDayCells = [].slice.call(this.element.querySelectorAll('.' + cls.ALLDAY_CELLS_CLASS));\n                allDayCells[0].style.height = (allDayRow.style.height) ? allDayRow.style.height : allDayCells[1].style.height;\n            }\n        }\n        else {\n            if (dateHeader.classList.contains(cls.ALLDAY_APPOINTMENT_AUTO)) {\n                removeClass([dateHeader], cls.ALLDAY_APPOINTMENT_AUTO);\n            }\n            this.eventBase.allDayExpandScroll(dateHeader);\n        }\n        if (!this.uiStateValues.expand) {\n            allDayRow.style.height = '';\n        }\n    };\n    Schedule.prototype.extendedPropertyChange = function (prop, newProp, oldProp, state) {\n        switch (prop) {\n            case 'width':\n            case 'height':\n            case 'enableAllDayScroll':\n                if (['Day', 'Week', 'WorkWeek'].indexOf(this.currentView) > -1) {\n                    this.allDayRowScrollUpdate();\n                }\n                this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                break;\n            case 'cssClass':\n                if (oldProp.cssClass) {\n                    removeClass([this.element], oldProp.cssClass.split(' '));\n                }\n                if (newProp.cssClass) {\n                    addClass([this.element], newProp.cssClass.split(' '));\n                }\n                break;\n            case 'hideEmptyAgendaDays':\n            case 'agendaDaysCount':\n                this.activeViewOptions = this.getActiveViewOptions();\n                state.isView = true;\n                break;\n            case 'eventSettings':\n                this.onEventSettingsPropertyChanged(newProp.eventSettings, oldProp.eventSettings, state);\n                break;\n            case 'allowKeyboardInteraction':\n            case 'allowClipboard':\n                if (this.keyboardInteractionModule) {\n                    this.keyboardInteractionModule.destroy();\n                    this.keyboardInteractionModule = null;\n                }\n                if (newProp.allowKeyboardInteraction || newProp.allowClipboard) {\n                    this.keyboardInteractionModule = new KeyboardInteraction(this);\n                }\n                break;\n            case 'timezoneDataSource':\n                if (this.eventWindow) {\n                    this.eventWindow.refresh();\n                }\n                break;\n            case 'editorTemplate':\n                if (!isNullOrUndefined(this.editorTemplate)) {\n                    this.editorTemplateFn = this.templateParser(this.editorTemplate);\n                }\n                if (this.eventWindow) {\n                    this.eventWindow.setDialogContent();\n                }\n                break;\n            case 'editorHeaderTemplate':\n                if (!isNullOrUndefined(this.editorHeaderTemplate)) {\n                    this.editorHeaderTemplateFn = this.templateParser(this.editorHeaderTemplate);\n                }\n                if (this.eventWindow) {\n                    this.eventWindow.setDialogHeader();\n                }\n                break;\n            case 'editorFooterTemplate':\n                if (!isNullOrUndefined(this.editorFooterTemplate)) {\n                    this.editorFooterTemplateFn = this.templateParser(this.editorFooterTemplate);\n                }\n                if (this.eventWindow) {\n                    this.eventWindow.setDialogFooter();\n                }\n                break;\n            case 'quickInfoTemplates':\n                if (this.quickInfoTemplates.header) {\n                    this.quickInfoTemplatesHeaderFn = this.templateParser(this.quickInfoTemplates.header);\n                }\n                if (this.quickInfoTemplates.content) {\n                    this.quickInfoTemplatesContentFn = this.templateParser(this.quickInfoTemplates.content);\n                }\n                if (this.quickInfoTemplates.footer) {\n                    this.quickInfoTemplatesFooterFn = this.templateParser(this.quickInfoTemplates.footer);\n                }\n                break;\n            case 'group':\n                this.onGroupSettingsPropertyChanged(newProp.group, oldProp.group, state);\n                break;\n            case 'resources':\n                state.isResource = true;\n                break;\n            case 'timeScale':\n                this.activeViewOptions.timeScale.interval = newProp.timeScale.interval || this.activeViewOptions.timeScale.interval;\n                this.activeViewOptions.timeScale.slotCount = newProp.timeScale.slotCount || this.activeViewOptions.timeScale.slotCount;\n                if (this.eventWindow) {\n                    this.eventWindow.refreshDateTimePicker();\n                }\n                state.isLayout = true;\n                break;\n            case 'allowDragAndDrop':\n            case 'allowResizing':\n            case 'eventDragArea':\n            case 'allowOverlap':\n                this.refreshEvents(false);\n                break;\n            case 'weekRule':\n                state.isLayout = true;\n                break;\n            case 'firstMonthOfYear':\n                this.activeViewOptions.firstMonthOfYear = newProp.firstMonthOfYear;\n                this.viewIndex = this.activeView.viewIndex;\n                state.isLayout = true;\n                break;\n            case 'monthsCount':\n                this.activeViewOptions.monthsCount = newProp.monthsCount;\n                this.viewIndex = this.activeView.viewIndex;\n                state.isLayout = true;\n                break;\n            case 'timeFormat':\n                this.internalTimeFormat = newProp.timeFormat || this.activeViewOptions.timeFormat;\n                if (this.eventWindow) {\n                    this.eventWindow.refreshDateTimePicker();\n                }\n                state.isLayout = true;\n                break;\n            case 'enableAdaptiveUI':\n                if (this.showHeaderBar && this.headerModule) {\n                    this.destroyHeaderModule();\n                    this.headerModule = new HeaderRenderer(this);\n                    this.headerModule.updateDateRange();\n                }\n                state.isLayout = true;\n                break;\n            case 'headerIndentTemplate':\n                this.activeViewOptions.headerIndentTemplate = newProp.headerIndentTemplate;\n                this.headerIndentTemplateFn = this.templateParser(this.activeViewOptions.headerIndentTemplate);\n                state.isLayout = true;\n                break;\n        }\n    };\n    Schedule.prototype.setRtlClass = function () {\n        if (this.enableRtl) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    Schedule.prototype.onGroupSettingsPropertyChanged = function (newProp, oldProp, state) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop === 'headerTooltipTemplate') {\n                this.headerTooltipTemplateFn = this.templateParser(newProp.headerTooltipTemplate);\n            }\n            else {\n                state.isLayout = true;\n                if (this.eventWindow) {\n                    this.eventWindow.refresh();\n                }\n            }\n        }\n    };\n    Schedule.prototype.onEventSettingsPropertyChanged = function (newProp, oldProp, state) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'dataSource':\n                case 'query':\n                case 'fields':\n                case 'includeFiltersInQuery':\n                    this.initializeDataModule();\n                    state.isDataManager = true;\n                    break;\n                case 'template':\n                    this.activeViewOptions.eventTemplate = newProp.template;\n                    this.appointmentTemplateFn = this.templateParser(this.activeViewOptions.eventTemplate);\n                    state.isDataManager = true;\n                    break;\n                case 'enableTooltip':\n                    if (this.eventTooltip) {\n                        this.eventTooltip.destroy();\n                        this.eventTooltip = null;\n                    }\n                    if (newProp.enableTooltip) {\n                        this.eventTooltip = new EventTooltip(this);\n                    }\n                    break;\n                case 'tooltipTemplate':\n                    this.eventTooltipTemplateFn = this.templateParser(this.eventSettings.tooltipTemplate);\n                    break;\n                case 'resourceColorField':\n                    if (this.resourceBase) {\n                        this.resourceBase.setResourceCollection();\n                    }\n                    state.isDataManager = true;\n                    break;\n                case 'editFollowingEvents':\n                    if (this.quickPopup) {\n                        this.quickPopup.refreshQuickDialog();\n                    }\n                    break;\n                case 'allowAdding':\n                case 'allowEditing':\n                case 'allowDeleting':\n                    if (this.showHeaderBar && this.headerModule) {\n                        this.headerModule.updateAddIcon();\n                    }\n                    if (this.eventWindow) {\n                        this.eventWindow.refresh();\n                    }\n                    break;\n                case 'spannedEventPlacement':\n                case 'minimumEventDuration':\n                case 'enableMaxHeight':\n                case 'enableIndicator':\n                    this.refreshEvents(false);\n                    break;\n                case 'ignoreWhitespace':\n                    state.isLayout = true;\n                    break;\n            }\n        }\n    };\n    Schedule.prototype.destroyHeaderModule = function () {\n        if (this.headerModule) {\n            this.headerModule.destroy();\n            this.headerModule = null;\n        }\n    };\n    Schedule.prototype.destroyPopups = function () {\n        if (this.quickPopup) {\n            this.quickPopup.destroy();\n            this.quickPopup = null;\n        }\n        if (this.eventWindow) {\n            this.eventWindow.destroy();\n            this.eventWindow = null;\n        }\n    };\n    /**\n     * Allows to show the spinner on schedule at the required scenarios.\n     *\n     * @function showSpinner\n     * @returns {void}\n     */\n    Schedule.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * When the spinner is shown manually using `showSpinner` method, it can be hidden using this `hideSpinner` method.\n     *\n     * @function hideSpinner\n     * @returns {void}\n     */\n    Schedule.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Sets different working hours on the required working days by accepting the required start and end time as well as the date collection\n     *  as its parameters.\n     *\n     * @function setWorkHours\n     * @param {Date} dates Collection of dates on which the given start and end hour range needs to be applied.\n     * @param {string} start Defines the work start hour.\n     * @param {string} end Defines the work end hour.\n     * @param {number} groupIndex Defines the resource index from last level.\n     * @returns {void}\n     */\n    Schedule.prototype.setWorkHours = function (dates, start, end, groupIndex) {\n        var cells = [];\n        cells = this.getWorkHourCells(dates, start, end, groupIndex);\n        addClass(cells, cls.WORK_HOURS_CLASS);\n    };\n    /**\n     * Removes or resets different working hours on the required working days by accepting the required start and end time as well as the\n     * date collection as its parameters.\n     * if no parameters has been passed to this function, it will remove all the work hours.\n     *\n     * @param {Date} dates Collection of dates on which the given start and end hour range need to be applied.\n     * @param {string} start Defines the work start hour.\n     * @param {string} end Defines the work end hour.\n     * @param {number} groupIndex Defines the resource index from last level.\n     * @returns {void}\n     */\n    Schedule.prototype.resetWorkHours = function (dates, start, end, groupIndex) {\n        if (dates === void 0) { dates = this.activeView.renderDates; }\n        if (dates && start && end) {\n            var cells = this.getWorkHourCells(dates, start, end, groupIndex);\n            removeClass(cells, cls.WORK_HOURS_CLASS);\n        }\n        else {\n            var workHourCells = [].slice.call(this.element.querySelectorAll('.' + cls.WORK_HOURS_CLASS));\n            removeClass(workHourCells, cls.WORK_HOURS_CLASS);\n        }\n    };\n    Schedule.prototype.getWorkHourCells = function (dates, start, end, groupIndex) {\n        if (['Agenda', 'MonthAgenda', 'Month', 'TimelineMonth'].indexOf(this.currentView) > -1) {\n            return [];\n        }\n        var startHour = this.getStartEndTime(start);\n        var endHour = this.getStartEndTime(end);\n        var tableEle = this.getContentTable();\n        if (isNullOrUndefined(startHour) || isNullOrUndefined(endHour) || !tableEle) {\n            return [];\n        }\n        startHour.setMilliseconds(0);\n        endHour.setMilliseconds(0);\n        var viewStartHour = this.activeView.getStartHour();\n        if (startHour < viewStartHour) {\n            startHour = viewStartHour;\n        }\n        var viewEndHour = this.activeView.getEndHour();\n        if (endHour > viewEndHour) {\n            endHour = viewEndHour;\n        }\n        var msMajorInterval = this.activeViewOptions.timeScale.interval * util.MS_PER_MINUTE;\n        var msInterval = msMajorInterval / this.activeViewOptions.timeScale.slotCount;\n        var offsetDiff = ((viewStartHour.getTimezoneOffset() - startHour.getTimezoneOffset()) * util.MS_PER_MINUTE);\n        var endOffsetDiff = Math.abs((viewStartHour.getTimezoneOffset() - endHour.getTimezoneOffset()) * util.MS_PER_MINUTE);\n        var startIndex = Math.round((startHour.getTime() - viewStartHour.getTime() + offsetDiff) / msInterval);\n        var endIndex = Math.ceil((endHour.getTime() - viewStartHour.getTime() - endOffsetDiff) / msInterval);\n        var tempStartIndex = startIndex;\n        var tempEndIndex = endIndex;\n        var cells = [];\n        for (var _i = 0, dates_1 = dates; _i < dates_1.length; _i++) {\n            var date = dates_1[_i];\n            date = this.getDateTime(date);\n            util.resetTime(date);\n            var renderDates = this.activeView.renderDates;\n            if (!isNullOrUndefined(groupIndex) && this.resourceBase && !this.activeView.isTimelineView()) {\n                renderDates = this.resourceBase.lastResourceLevel[parseInt(groupIndex.toString(), 10)].renderDates;\n            }\n            var colIndex = this.getIndexOfDate(renderDates, date);\n            if (colIndex >= 0) {\n                if (this.activeView.isTimelineView()) {\n                    var slotsPerDay = Math.round((viewEndHour.getTime() - viewStartHour.getTime()) / msInterval);\n                    startIndex = tempStartIndex + (colIndex * slotsPerDay);\n                    endIndex = tempEndIndex + (colIndex * slotsPerDay);\n                }\n                for (var i = startIndex; i < endIndex; i++) {\n                    if (this.activeView.isTimelineView()) {\n                        var rowIndex = (!isNullOrUndefined(groupIndex)) ? groupIndex : 0;\n                        cells.push(tableEle.rows[parseInt(rowIndex.toString(), 10)].cells[parseInt(i.toString(), 10)]);\n                    }\n                    else {\n                        if (!isNullOrUndefined(groupIndex)) {\n                            var selector = '.' + cls.WORK_CELLS_CLASS + '[data-group-index=\"' + groupIndex + '\"]';\n                            var tds = [].slice.call(tableEle.rows[parseInt(i.toString(), 10)].querySelectorAll(selector));\n                            cells.push(tds[parseInt(colIndex.toString(), 10)]);\n                        }\n                        else {\n                            cells.push(tableEle.rows[parseInt(i.toString(), 10)].cells[parseInt(colIndex.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        return cells;\n    };\n    /**\n     * Retrieves the start and end time information of the specific cell element.\n     *\n     * @function getCellDetails\n     * @param {Element | Element[]} tdCol Accepts the single or collection of elements.\n     * @returns {CellClickEventArgs} Object An object holding the startTime, endTime and all-day information along with the target HTML element will be returned.\n     */\n    Schedule.prototype.getCellDetails = function (tdCol) {\n        var td = (tdCol instanceof Array) ? tdCol : [tdCol];\n        var firstTd = getElement(td[0]);\n        var lastTd = getElement(td.slice(-1)[0]);\n        var startTime = this.getDateFromElement(firstTd);\n        var endTime = this.getDateFromElement(lastTd);\n        if (isNullOrUndefined(startTime) || isNullOrUndefined(endTime)) {\n            return undefined;\n        }\n        var endDateFromColSpan = this.activeView.isTimelineView() && !isNullOrUndefined(lastTd.getAttribute('colSpan')) &&\n            this.headerRows.length > 0;\n        var duration = endDateFromColSpan ? parseInt(lastTd.getAttribute('colSpan'), 10) : 1;\n        if (!this.activeViewOptions.timeScale.enable || endDateFromColSpan || lastTd.classList.contains(cls.ALLDAY_CELLS_CLASS) ||\n            lastTd.classList.contains(cls.HEADER_CELLS_CLASS)) {\n            endTime = util.addDays(new Date(endTime.getTime()), duration);\n        }\n        else {\n            endTime = this.activeView.getEndDateFromStartDate(endTime);\n        }\n        var data = {\n            startTime: startTime,\n            endTime: endTime,\n            isAllDay: this.isAllDayCell(firstTd),\n            element: tdCol\n        };\n        var groupIndex = firstTd.getAttribute('data-group-index');\n        if (!isNullOrUndefined(groupIndex)) {\n            data.groupIndex = parseInt(groupIndex, 10);\n        }\n        return data;\n    };\n    /**\n     * Retrieves the selected cell elements.\n     *\n     * @function getSelectedElements\n     * @returns {Element[]} The elements of currently selected cells will be returned.\n     */\n    Schedule.prototype.getSelectedElements = function () {\n        if (this.keyboardInteractionModule && this.keyboardInteractionModule.selectedCells.length > 0) {\n            return this.keyboardInteractionModule.selectedCells;\n        }\n        return this.getSelectedCells();\n    };\n    /**\n     * To get the resource collection\n     *\n     * @function getResourceCollections\n     * @returns {ResourcesModel[]} Returns the resource collections\n     */\n    Schedule.prototype.getResourceCollections = function () {\n        return this.resourceCollection;\n    };\n    /**\n     * To set the resource collection\n     *\n     * @function setResourceCollections\n     * @param {ResourcesModel[]} resourceCol Accepts the resource collections in ResourcesModel type\n     * @param {boolean} isEventDataRefresh Accepts the boolean to refresh the appointment data source from remote or local\n     * @returns {void}\n     */\n    Schedule.prototype.setResourceCollections = function (resourceCol, isEventDataRefresh) {\n        if (isEventDataRefresh === void 0) { isEventDataRefresh = true; }\n        if (!isEventDataRefresh && this.uiStateValues) {\n            this.uiStateValues.isPreventEventRefresh = true;\n        }\n        this.setProperties({ resources: resourceCol }, false);\n    };\n    /**\n     * Current View could be change based on the provided parameters.\n     *\n     * @function changeCurrentView\n     * @param {View} viewName Accept the view in the viewCollections.\n     * @param {number} viewIndex Accept the viewIndex in the viewCollections.\n     * @returns {void}\n     */\n    Schedule.prototype.changeCurrentView = function (viewName, viewIndex) {\n        var index = this.getViewIndex(viewName);\n        var view = viewName.charAt(0).toLowerCase() + viewName.slice(1);\n        var viewOptions = this.viewOptions[\"\" + view];\n        if (viewOptions) {\n            index = this.viewCollections.indexOf(viewOptions[viewIndex || 0]);\n        }\n        if (index === -1 || index === this.viewIndex) {\n            return;\n        }\n        this.changeView(viewName, null, null, index);\n    };\n    /**\n     * Return the current view Index.\n     *\n     * @function getCurrentViewIndex\n     * @returns {number} Returns the view index\n     */\n    Schedule.prototype.getCurrentViewIndex = function () {\n        return this.viewIndex;\n    };\n    /**\n     * Retrieves the resource details based on the provided resource index.\n     *\n     * @param {number} index index of the resources at the last level.\n     * @returns {ResourceDetails} Object An object holding the details of resource and resourceData.\n     */\n    Schedule.prototype.getResourcesByIndex = function (index) {\n        if (this.resourceBase && this.resourceBase.lastResourceLevel) {\n            if (index < 0 || index >= this.resourceBase.lastResourceLevel.length) {\n                return undefined;\n            }\n            var data = this.resourceBase.lastResourceLevel[parseInt(index.toString(), 10)];\n            var groupData = {};\n            this.resourceBase.setResourceValues(groupData, index);\n            return { resource: data.resource, resourceData: data.resourceData, groupData: groupData };\n        }\n        return undefined;\n    };\n    /**\n     * This method allows to expand the resource that available on the scheduler.\n     *\n     * @function expandResource\n     * @param {string | number} resourceId Accepts the resource id in either string or number type\n     * @param {string} name Accepts the name of the resource collection\n     * @returns {void}\n     */\n    Schedule.prototype.expandResource = function (resourceId, name) {\n        if (this.activeView.isTimelineView() && this.resourceBase && this.resourceCollection.length > 1) {\n            this.resourceBase.resourceExpand(resourceId, name, false);\n        }\n    };\n    /**\n     * This method allows to collapse the resource that available on the scheduler.\n     *\n     * @function collapseResource\n     * @param {string | number} resourceId Accepts the resource id in either string or number type\n     * @param {string} name Accepts the name of the resource collection\n     * @returns {void}\n     */\n    Schedule.prototype.collapseResource = function (resourceId, name) {\n        if (this.activeView.isTimelineView() && this.resourceBase && this.resourceCollection.length > 1) {\n            this.resourceBase.resourceExpand(resourceId, name, true);\n        }\n    };\n    /**\n     * Scrolls the Schedule content area to the specified time.\n     *\n     * @function scrollTo\n     * @param {string} hour Accepts the time value in the skeleton format of 'Hm'.\n     * @param {Date} scrollDate Accepts the date object value.\n     * @returns {void}\n     */\n    Schedule.prototype.scrollTo = function (hour, scrollDate) {\n        if (this.currentView.indexOf('Agenda') < 0 && isNullOrUndefined(this.element.querySelector('.e-work-cells'))) {\n            return;\n        }\n        if (this.activeView.scrollToDate && isNullOrUndefined(hour) && scrollDate) {\n            this.activeView.scrollToDate(scrollDate);\n        }\n        else if (this.activeView.scrollToHour) {\n            this.activeView.scrollToHour(hour, scrollDate);\n        }\n    };\n    /**\n     * This method allows scroll to the position of the any resources that available on the scheduler.\n     * This method is applicable for without Agenda and Month agenda views of the schedule.\n     *\n     * @function scrollToResource\n     * @param {string | number} resourceId Accepts the resource id in either string or number type\n     * @param {string} groupName Accepts the name of the resource collection\n     * @returns {void}\n     */\n    Schedule.prototype.scrollToResource = function (resourceId, groupName) {\n        if (this.resourceBase && this.resourceBase.lastResourceLevel) {\n            this.resourceBase.resourceScroll(resourceId, groupName);\n        }\n    };\n    /**\n     * Exports the Scheduler events to a calendar (.ics) file. By default, the calendar is exported with a file name `Calendar.ics`.\n     * To change this file name on export, pass the custom string value as `fileName` to get the file downloaded with this provided name.\n     *\n     * @function exportToICalendar\n     * @param {string} fileName Accepts the string value.\n     * @param {Object[]} customData Accepts the collection of objects.\n     * @returns {void}\n     */\n    Schedule.prototype.exportToICalendar = function (fileName, customData) {\n        if (this.iCalendarExportModule) {\n            this.iCalendarExportModule.initializeCalendarExport(fileName, customData);\n        }\n        else {\n            console.warn('[WARNING] :: Module \"ICalendarExport\" is not available in Schedule component!' +\n                ' You either misspelled the module name or forgot to load it.');\n            throw Error('Inject ICalendarExport module');\n        }\n    };\n    /**\n     * Imports the events from an .ics file downloaded from any of the calendars like Google or Outlook into the Scheduler.\n     * This method accepts the blob object or string format of an .ics file to be imported as a mandatory argument.\n     *\n     * @function importICalendar\n     * @param {Blob | string} fileContent Accepts the file object or string format of an .ics file.\n     * @returns {void}\n     */\n    Schedule.prototype.importICalendar = function (fileContent) {\n        if (this.iCalendarImportModule) {\n            this.iCalendarImportModule.initializeCalendarImport(fileContent);\n        }\n        else {\n            console.warn('[WARNING] :: Module \"ICalendarImport\" is not available in Schedule component!' +\n                ' You either misspelled the module name or forgot to load it.');\n            throw Error('Inject ICalendarImport module');\n        }\n    };\n    /**\n     * Adds the newly created event into the Schedule dataSource.\n     *\n     * @function addEvent\n     * @param {Object | Object[]} data Single or collection of event objects to be added into Schedule.\n     * @returns {void}\n     */\n    Schedule.prototype.addEvent = function (data) {\n        this.crudModule.addEvent(data);\n    };\n    /**\n     * Generates the occurrences of a single recurrence event based on the provided event.\n     *\n     * @function generateEventOccurrences\n     * @param {Object} event Accepts the parent recurrence event from which the occurrences are generated.\n     * @param {Date} startDate Accepts the start date for the event occurrences. If not provided, the event's start date will be used.\n     * @returns {Object[]} Returns the collection of occurrence event objects.\n     */\n    Schedule.prototype.generateEventOccurrences = function (event, startDate) {\n        return (this.eventBase) ? this.eventBase.generateOccurrence(event, startDate) : [];\n    };\n    /**\n     * Allows the Scheduler events data to be exported as an Excel file either in .xlsx or .csv file formats.\n     * By default, the whole event collection bound to the Scheduler gets exported as an Excel file.\n     * To export only the specific events of Scheduler, you need to pass the custom data collection as\n     * a parameter to this `exportToExcel` method. This method accepts the export options as arguments such as fileName,\n     * exportType, fields, customData, and includeOccurrences. The `fileName` denotes the name to be given for the exported\n     * file and the `exportType` allows you to set the format of an Excel file to be exported either as .xlsx or .csv.\n     * The custom or specific field collection of event dataSource to be exported can be provided through `fields` option\n     * and the custom data collection can be exported by passing them through the `customData` option. There also exists\n     * option to export each individual instances of the recurring events to an Excel file, by setting true or false to the\n     * `includeOccurrences` option, denoting either to include or exclude the occurrences as separate instances on an exported Excel file.\n     *\n     * @function exportToExcel\n     * @param {ExportOptions} excelExportOptions The export options to be set before start with exporting the Scheduler events to an Excel file.\n     * @returns {void}\n     */\n    Schedule.prototype.exportToExcel = function (excelExportOptions) {\n        if (this.excelExportModule) {\n            this.excelExportModule.initializeExcelExport(excelExportOptions);\n        }\n        else {\n            console.warn('[WARNING] :: Module \"ExcelExport\" is not available in Schedule component!' +\n                ' You either misspelled the module name or forgot to load it.');\n            throw Error('Inject ExcelExport module');\n        }\n    };\n    /**\n     * Method allows to print the scheduler.\n     *\n     * @function print\n     * @param {ScheduleModel} printOptions The export options to be set before start with exporting\n     * the Scheduler events to the print window.\n     * @returns {void}\n     */\n    Schedule.prototype.print = function (printOptions) {\n        if (this.printModule) {\n            this.printModule.print(printOptions);\n        }\n        else {\n            console.warn('[WARNING] :: Module \"Print\" is not available in Schedule component!' +\n                ' You either misspelled the module name or forgot to load it.');\n            throw Error('Inject Print module');\n        }\n    };\n    /**\n     * Updates the changes made in the event object by passing it as an parameter into the dataSource.\n     *\n     * @function saveEvent\n     * @param {Object | Object[]} data Single or collection of event objects to be saved into Schedule.\n     * @param {CurrentAction} currentAction Denotes the action that takes place either for editing occurrence or series.\n     *  The valid current action names are `EditOccurrence` or `EditSeries`.\n     * @returns {void}\n     */\n    Schedule.prototype.saveEvent = function (data, currentAction) {\n        this.crudModule.saveEvent(data, currentAction);\n    };\n    /**\n     * Deletes the events based on the provided ID or event collection in the argument list.\n     *\n     * @function deleteEvent\n     * @param {string | number | Object | Object[]} id Accepts the ID as string or number type or single or collection of the event object which needs to be removed from the Schedule.\n     * @param {CurrentAction} currentAction Denotes the delete action that takes place either on occurrence or series events.\n     *  The valid current action names are `Delete`, `DeleteOccurrence` or `DeleteSeries`.\n     * @returns {void}\n     */\n    Schedule.prototype.deleteEvent = function (id, currentAction) {\n        this.crudModule.deleteEvent(id, currentAction);\n    };\n    /**\n     * Retrieves the entire collection of events bound to the Schedule.\n     *\n     * @function getEvents\n     * @param {Date} startDate Accepts the start date.\n     * @param {Date} endDate Accepts te end date.\n     * @param {boolean} includeOccurrences Accepts the boolean value to process the occurrence from recurrence series.\n     * @returns {Object[]} Returns the collection of event objects from the Schedule.\n     */\n    Schedule.prototype.getEvents = function (startDate, endDate, includeOccurrences) {\n        var eventCollections = [];\n        if (includeOccurrences) {\n            eventCollections = this.eventBase.getProcessedEvents();\n        }\n        else {\n            eventCollections = this.eventsData;\n        }\n        if (startDate) {\n            startDate = this.getDateTime(startDate);\n        }\n        if (endDate) {\n            endDate = this.getDateTime(endDate);\n        }\n        eventCollections = this.eventBase.filterEventsByRange(eventCollections, startDate, endDate);\n        return eventCollections;\n    };\n    /**\n     * Retrieves the entire collection of block events bound to the Schedule.\n     *\n     * @function getBlockEvents\n     * @param {Date} startDate Accepts the start date.\n     * @param {Date} endDate Accepts te end date.\n     * @param {boolean} includeOccurrences Accepts the boolean value to process the occurrence from recurrence series.\n     * @returns {Object[]} Returns the collection of block event objects from the Schedule.\n     */\n    Schedule.prototype.getBlockEvents = function (startDate, endDate, includeOccurrences) {\n        var eventCollections = [];\n        if (includeOccurrences) {\n            eventCollections = this.eventBase.getProcessedEvents(this.blockData);\n        }\n        else {\n            eventCollections = this.blockData;\n        }\n        if (startDate) {\n            startDate = this.getDateTime(startDate);\n        }\n        if (endDate) {\n            endDate = this.getDateTime(endDate);\n        }\n        eventCollections = this.eventBase.filterEventsByRange(eventCollections, startDate, endDate);\n        return eventCollections;\n    };\n    /**\n     * Retrieves the occurrences of a single recurrence event based on the provided parent ID.\n     *\n     * @function getOccurrencesByID\n     * @param {number} eventID ID of the parent recurrence data from which the occurrences are fetched.\n     * @returns {Object[]} Returns the collection of occurrence event objects.\n     */\n    Schedule.prototype.getOccurrencesByID = function (eventID) {\n        return this.eventBase.getOccurrencesByID(eventID);\n    };\n    /**\n     * Retrieves all the occurrences that lies between the specific start and end time range.\n     *\n     * @function getOccurrencesByRange\n     * @param {Date} startTime Denotes the start time range.\n     * @param {Date} endTime Denotes the end time range.\n     * @returns {Object[]} Returns the collection of occurrence event objects that lies between the provided start and end time.\n     */\n    Schedule.prototype.getOccurrencesByRange = function (startTime, endTime) {\n        startTime = this.getDateTime(startTime);\n        endTime = this.getDateTime(endTime);\n        return this.eventBase.getOccurrencesByRange(startTime, endTime);\n    };\n    /**\n     * Retrieves the dates that lies on active view of Schedule.\n     *\n     * @function getCurrentViewDates\n     * @returns {Date[]} Returns the collection of dates.\n     */\n    Schedule.prototype.getCurrentViewDates = function () {\n        return this.activeView ? this.activeView.renderDates : [];\n    };\n    /**\n     * Set the recurrence editor instance from custom editor template.\n     *\n     * @function setRecurrenceEditor\n     * @param {RecurrenceEditor} recurrenceEditor instance has passed to fetch the instance in event window.\n     * @returns {void}\n     */\n    Schedule.prototype.setRecurrenceEditor = function (recurrenceEditor) {\n        this.eventWindow.setRecurrenceEditor(recurrenceEditor);\n    };\n    /**\n     * Get the maximum id of an event.\n     *\n     * @function getEventMaxID\n     * @returns {number | string} Returns the maximum ID from scheduler data collections.\n     */\n    Schedule.prototype.getEventMaxID = function () {\n        return this.eventBase.getEventMaxID();\n    };\n    /**\n     * Get deleted occurrences from given recurrence series.\n     *\n     * @function getDeletedOccurrences\n     * @param {string | number | Object} recurrenceData Accepts the parent ID of the event object or parent event object\n     * @returns {Object[]} Returns the collection of deleted occurrence events.\n     */\n    Schedule.prototype.getDeletedOccurrences = function (recurrenceData) {\n        return this.eventBase.getDeletedOccurrences(recurrenceData);\n    };\n    /**\n     * Retrieves the events that lies on the current date range of the active view of Schedule.\n     *\n     * @function getCurrentViewEvents\n     * @returns {Object[]} Returns the collection of events.\n     */\n    Schedule.prototype.getCurrentViewEvents = function () {\n        return this.eventsProcessed;\n    };\n    /**\n     * Refreshes the event dataSource. This method may be useful when the events alone in the schedule needs to be re-rendered.\n     *\n     * @function refreshEvents\n     * @param {boolean} isRemoteRefresh Accepts the boolean to refresh data from remote or local\n     * @returns {void}\n     */\n    Schedule.prototype.refreshEvents = function (isRemoteRefresh) {\n        if (isRemoteRefresh === void 0) { isRemoteRefresh = true; }\n        if (isRemoteRefresh) {\n            if (this.dragAndDropModule) {\n                this.dragAndDropModule.actionObj.action = '';\n                removeClass([this.element], cls.EVENT_ACTION_CLASS);\n            }\n            this.crudModule.refreshDataManager();\n        }\n        else {\n            if (this.uiStateValues) {\n                this.uiStateValues.isPreventTimezone = true;\n            }\n            if (this.crudModule) {\n                this.crudModule.refreshProcessedData();\n            }\n            if (this.uiStateValues) {\n                this.uiStateValues.isPreventTimezone = false;\n            }\n        }\n    };\n    /**\n     * Method to refresh the given Schedule templates\n     *\n     * @param {string} templateName Accepts the template name\n     * @returns {void}\n     */\n    Schedule.prototype.refreshTemplates = function (templateName) {\n        if (templateName) {\n            this.resetTemplates([templateName]);\n        }\n        else {\n            this.resetTemplates();\n        }\n        switch (templateName) {\n            case 'eventTemplate':\n                this.appointmentTemplateFn = this.templateParser(this.activeViewOptions.eventTemplate);\n                this.refreshEvents(false);\n                break;\n            case 'dateHeaderTemplate':\n                this.dateHeaderTemplateFn = this.templateParser(this.activeViewOptions.dateHeaderTemplate);\n                this.activeView.refreshHeader();\n                break;\n            case 'dateRangeTemplate':\n                this.dateRangeTemplateFn = this.templateParser(this.activeViewOptions.dateRangeTemplate);\n                if (this.headerModule) {\n                    this.headerModule.refresh();\n                }\n                break;\n            case 'resourceHeaderTemplate':\n                this.resourceHeaderTemplateFn = this.templateParser(this.activeViewOptions.resourceHeaderTemplate);\n                if (this.activeView.isTimelineView()) {\n                    this.activeView.refreshResourceHeader();\n                }\n                else {\n                    this.activeView.refreshHeader();\n                }\n                break;\n            case 'quickInfoTemplates':\n                if (this.quickPopup) {\n                    this.quickPopup.destroy();\n                    this.quickPopup = null;\n                }\n                this.quickPopup = new QuickPopups(this);\n                this.quickInfoTemplatesHeaderFn = this.templateParser(this.quickInfoTemplates.header);\n                this.quickInfoTemplatesContentFn = this.templateParser(this.quickInfoTemplates.content);\n                this.quickInfoTemplatesFooterFn = this.templateParser(this.quickInfoTemplates.footer);\n                break;\n            case 'editorTemplate':\n                this.destroyEditorWindow();\n                this.editorTemplateFn = this.templateParser(this.editorTemplate);\n                break;\n            case 'editorHeaderTemplate':\n                this.destroyEditorWindow();\n                this.editorHeaderTemplateFn = this.templateParser(this.editorHeaderTemplate);\n                break;\n            case 'editorFooterTemplate':\n                this.destroyEditorWindow();\n                this.editorFooterTemplateFn = this.templateParser(this.editorFooterTemplate);\n                break;\n            case 'tooltipTemplate':\n            case 'headerTooltipTemplate':\n                if (this.eventTooltip) {\n                    this.eventTooltip.destroy();\n                    this.eventTooltip = null;\n                }\n                this.eventTooltip = new EventTooltip(this);\n                this.eventTooltipTemplateFn = this.templateParser(this.eventSettings.tooltipTemplate);\n                this.headerTooltipTemplateFn = this.templateParser(this.activeViewOptions.group.headerTooltipTemplate);\n                break;\n            default:\n                this.initializeView(this.currentView);\n                break;\n        }\n    };\n    /**\n     * Refreshes the Schedule layout without re-render.\n     *\n     * @function refreshLayout\n     * @returns {void}\n     */\n    Schedule.prototype.refreshLayout = function () {\n        this.onScheduleResize();\n        if (this.headerModule) {\n            this.headerModule.refresh();\n        }\n        if (this.eventWindow) {\n            this.eventWindow.refresh();\n        }\n    };\n    /**\n     * To retrieve the appointment object from element.\n     *\n     * @function getEventDetails\n     * @param {Element} element Denotes the event UI element on the Schedule.\n     * @returns {Object} Returns the event details.\n     */\n    Schedule.prototype.getEventDetails = function (element) {\n        element = getElement(element);\n        var guid = element.getAttribute('data-guid');\n        if (guid) {\n            return this.eventBase.getEventByGuid(guid);\n        }\n        return {};\n    };\n    /**\n     * To check whether the given time range slots are available for event creation or already occupied by other events.\n     * This method currently focuses on validating appointments within the current view date range.\n     * However, it does not extend this availability check to recurrence occurrences outside of the current date range.\n     *\n     * @function isSlotAvailable\n     * @param {Date | Object} startTime Denotes the start time of the slot.\n     * @param {Date} endTime Denotes the end time of the slot.\n     * @param {number} groupIndex Defines the resource index from last level.\n     * @returns {boolean} Returns true, if the slot that lies in the provided time range does not contain any other events.\n     */\n    Schedule.prototype.isSlotAvailable = function (startTime, endTime, groupIndex) {\n        var _this = this;\n        var eventStart;\n        var eventEnd;\n        var eventObj = this.activeEventData.event;\n        if (startTime instanceof Date || typeof (startTime) === 'string') {\n            eventStart = startTime;\n            eventEnd = endTime;\n        }\n        else {\n            eventObj = startTime;\n            eventStart = startTime[this.eventFields.startTime];\n            eventEnd = startTime[this.eventFields.endTime];\n            if (this.resourceBase) {\n                groupIndex = this.eventBase.getGroupIndexFromEvent(startTime);\n            }\n        }\n        if (isNullOrUndefined(eventStart) || isNullOrUndefined(eventEnd)) {\n            return true;\n        }\n        eventStart = this.getDateTime(eventStart);\n        eventEnd = this.getDateTime(eventEnd);\n        var eventCollection = this.eventBase.filterEvents(eventStart, eventEnd);\n        if (!isNullOrUndefined(groupIndex) && this.resourceBase && this.resourceBase.lastResourceLevel.length > 0) {\n            eventCollection =\n                this.eventBase.filterEventsByResource(this.resourceBase.lastResourceLevel[parseInt(groupIndex.toString(), 10)], eventCollection);\n        }\n        if (eventObj) {\n            if (eventObj.Guid) {\n                eventCollection = eventCollection.filter(function (event) { return event.Guid !== eventObj.Guid; });\n            }\n            else {\n                eventCollection = eventCollection.filter(function (event) {\n                    return event[_this.eventFields.id] !== eventObj[_this.eventFields.id];\n                });\n            }\n        }\n        return (eventCollection.length > 0) ? false : true;\n    };\n    /**\n     * Method to copy events from an HTMLElement or an array of HTMLElements.\n     *\n     * @param { HTMLElement[] } elements Accepts an array of HTMLElement\n     * @returns {void} This method does not return a value.\n     */\n    Schedule.prototype.copy = function (elements) {\n        this.processCutCopyActions(elements, false);\n    };\n    /**\n     * Method to cut events from an HTMLElement or an array of HTMLElements.\n     *\n     * @param { HTMLElement[] } elements Accepts an array of HTMLElement\n     * @returns {void} This method does not return a value.\n     */\n    Schedule.prototype.cut = function (elements) {\n        this.processCutCopyActions(elements, true);\n    };\n    /**\n     * Method to create a paste event with clipboard data\n     *\n     * @param { HTMLElement } targetElement Accepts HTMLElement\n     * @returns {void}\n     */\n    Schedule.prototype.paste = function (targetElement) {\n        var _this = this;\n        if (!this.allowClipboard || !this.allowKeyboardInteraction) {\n            return;\n        }\n        if (!targetElement.classList.contains('e-work-cells') && !targetElement.classList.contains('e-all-day-cells')) {\n            return;\n        }\n        var clipboardData = new DataTransfer();\n        if (!isNullOrUndefined(navigator.clipboard)) {\n            navigator.clipboard.readText()\n                .then(function (text) {\n                clipboardData.setData('text/plain', text);\n                var pasteEvent = new ClipboardEvent('paste', {\n                    bubbles: true,\n                    cancelable: true\n                });\n                Object.defineProperty(pasteEvent, 'clipboardData', {\n                    value: clipboardData\n                });\n                _this.keyboardInteractionModule.pasteHandler(pasteEvent, targetElement);\n            })\n                .catch(function (err) {\n                throw err;\n            });\n        }\n    };\n    Schedule.prototype.processCutCopyActions = function (elements, isCut) {\n        var _this = this;\n        if (!elements || !this.allowClipboard || !this.allowKeyboardInteraction) {\n            return;\n        }\n        var elementArray = elements;\n        var eventDetailsArray = [];\n        elementArray.forEach(function (element) {\n            if (element.classList.contains(cls.APPOINTMENT_CLASS)) {\n                var eventDetail = _this.getEventDetails(element);\n                if (eventDetail) {\n                    eventDetailsArray.push(eventDetail);\n                }\n            }\n        });\n        if (eventDetailsArray.length > 0) {\n            this.keyboardInteractionModule.processClipboardAction(isCut, eventDetailsArray);\n        }\n    };\n    /**\n     * To manually open the event editor on specific time or on certain events.\n     *\n     * @function openEditor\n     * @param {Object} data It can be either cell data or event data.\n     * @param {CurrentAction} action Defines the action for which the editor needs to be opened such as either for new event creation or\n     *  for editing of existing events. The applicable action names that can be used here are `Add`, `Save`, `EditOccurrence`\n     *  and `EditSeries`.\n     * @param {boolean} isEventData It allows to decide whether the editor needs to be opened with the clicked cell details or with the\n     *  passed event details.\n     * @param {number} repeatType It opens the editor with the recurrence options based on the provided repeat type.\n     * @returns {void}\n     */\n    Schedule.prototype.openEditor = function (data, action, isEventData, repeatType) {\n        if (action === 'Add' && !isEventData) {\n            data.startTime = this.getDateTime(data.startTime);\n            data.endTime = this.getDateTime(data.endTime);\n            if (!isNullOrUndefined(data.element)) {\n                data.element = getElement(data.element);\n            }\n        }\n        else {\n            data[this.eventFields.startTime] = this.getDateTime(data[this.eventFields.startTime]);\n            data[this.eventFields.endTime] = this.getDateTime(data[this.eventFields.endTime]);\n        }\n        this.currentAction = action;\n        if (action !== 'Add') {\n            this.activeEventData.event = data;\n        }\n        this.eventWindow.openEditor(data, action, isEventData, repeatType);\n    };\n    /**\n     * To manually close the event editor window\n     *\n     * @function closeEditor\n     * @returns {void}\n     */\n    Schedule.prototype.closeEditor = function () {\n        if (this.eventWindow) {\n            this.eventWindow.dialogClose();\n        }\n    };\n    /**\n     * To manually open the quick info popup based on cell or event details.\n     *\n     * @param {object} data Defines the cell or event data. If the data contains valid ID, it will open event quick info popup,\n     * otherwise cell quick info popup displayed.\n     * @returns {void}\n     */\n    Schedule.prototype.openQuickInfoPopup = function (data) {\n        var _this = this;\n        if (this.currentView === 'Year' || isNullOrUndefined(data)) {\n            return;\n        }\n        if (isNullOrUndefined(data[this.eventFields.id])) {\n            if (this.currentView === 'Agenda' || this.currentView === 'MonthAgenda' || isNullOrUndefined(this.activeView)) {\n                return;\n            }\n            var cellData = {\n                startTime: this.activeCellsData.startTime = this.getDateTime(data[this.eventFields.startTime]),\n                endTime: this.activeCellsData.endTime = this.getDateTime(data[this.eventFields.endTime]),\n                isAllDay: this.activeCellsData.isAllDay =\n                    !isNullOrUndefined(data[this.eventFields.isAllDay]) ? data[this.eventFields.isAllDay] : false\n            };\n            var startTime = this.activeView.getAdjustedDate(new Date(cellData.startTime));\n            if (startTime) {\n                var query = '.' + cls.WORK_CELLS_CLASS + '[data-date=\"' + startTime.getTime() + '\"]';\n                if (this.activeViewOptions.group.resources.length > 0 && !this.uiStateValues.isGroupAdaptive\n                    && this.resourceBase && this.eventBase) {\n                    cellData.groupIndex = this.eventBase.getGroupIndexFromEvent(data);\n                    query = '.' + cls.WORK_CELLS_CLASS + '[data-date=\"' + startTime.getTime() + '\"][data-group-index=\"' + cellData.groupIndex + '\"]';\n                }\n                var workCell = this.element.querySelector(query);\n                if (workCell) {\n                    workCell.focus();\n                    cellData.element = workCell;\n                    this.notify(events.cellClick, cellData);\n                }\n            }\n        }\n        else {\n            var app = this.getCurrentViewEvents().filter(function (item) {\n                return data[_this.eventFields.id] === item[_this.eventFields.id];\n            });\n            if (app.length <= 0) {\n                return;\n            }\n            var selectEvent = app[0];\n            if (data[this.eventFields.recurrenceRule]) {\n                var occurence = app.filter(function (x) {\n                    return x[_this.eventFields.startTime].getTime() === data[_this.eventFields.startTime].getTime();\n                });\n                if (occurence.length > 0) {\n                    selectEvent = occurence[0];\n                }\n            }\n            var element = this.element.querySelector('div[data-guid=\"' + selectEvent.Guid + '\"]');\n            if (element) {\n                this.eventBase.removeSelectedAppointmentClass();\n                this.eventBase.addSelectedAppointments([element], false);\n                this.activeEventData = { event: selectEvent, element: element };\n                if (this.currentView === 'Agenda' || this.currentView === 'MonthAgenda') {\n                    addClass([this.activeEventData.element], cls.AGENDA_SELECTED_CELL);\n                }\n                this.notify(events.eventClick, this.activeEventData);\n            }\n        }\n    };\n    /**\n     * To manually close the quick info popup\n     *\n     * @function closeQuickInfoPopup\n     * @returns {void}\n     */\n    Schedule.prototype.closeQuickInfoPopup = function () {\n        if (this.quickPopup) {\n            this.quickPopup.quickPopupHide(true);\n        }\n    };\n    /**\n     * To manually open the overlap validation Alert.\n     *\n     * @param {PopupOpenEventArgs} args The arguments for opening the popup.\n     * @param {string} args.type Defines the type of overlap alert (e.g., 'OverlapAlert').\n     * @param {Record<string, any>} args.data The data associated with the popup.\n     * @param {Record<string, any>[]} args.overlapEvents The overlap events.\n     * @returns {void}\n     */\n    Schedule.prototype.openOverlapAlert = function (args) {\n        var _this = this;\n        if (this.quickPopup) {\n            var eventProp = {\n                type: 'OverlapAlert',\n                cancel: false,\n                element: this.quickPopup.quickDialog.element,\n                data: args.data,\n                overlapEvents: args.overlapEvents\n            };\n            this.trigger(events.popupOpen, eventProp, function (popupArgs) {\n                if (!popupArgs.cancel) {\n                    _this.quickPopup.openValidationError('overlapAlert', args.data);\n                }\n            });\n        }\n    };\n    /**\n     * To manually close the overlap validation Alert.\n     *\n     * @function closeOverlapValidationAlert\n     * @returns {void}\n     */\n    Schedule.prototype.closeOverlapAlert = function () {\n        var _this = this;\n        if (this.quickPopup) {\n            var args = {\n                type: 'OverlapAlert',\n                cancel: false,\n                data: this.activeEventData.event,\n                element: this.quickPopup.quickDialog.element\n            };\n            this.trigger(events.popupClose, args, function (popupArgs) {\n                if (!popupArgs.cancel) {\n                    _this.quickPopup.quickDialog.hide();\n                }\n            });\n        }\n    };\n    /**\n     * Closes the tooltip.\n     * For example, when the context menu is opened for an event,\n     * the tooltip can be closed by calling this method.\n     *\n     * @function closeTooltip\n     * @returns {void}\n     */\n    Schedule.prototype.closeTooltip = function () {\n        if (this.eventTooltip) {\n            this.eventTooltip.close();\n        }\n    };\n    /**\n     * Retrieves a formatted string representing the date range of the given date collection.\n     *\n     * @param {Date[]} dates - An array of Date objects representing the date range.\n     * @returns {string} A formatted string describing the date range.\n     *   If the dates is empty, returns an empty string.\n     *   Otherwise, delegates to the active view to generate the appropriate date range text.\n     *\n     * @example\n     * // Assuming dates contains dates from May 1, 2023 to May 7, 2023\n     * const rangeText = schedule.getDateRangeText(schedule.getViewDates());\n     * // rangeText might be \"May 1 - 7, 2023\" (actual format depends on the active view)\n     *\n     * @remarks\n     * The actual format of the returned string depends on the implementation\n     * of the getDateRangeText method in the active view.\n     */\n    Schedule.prototype.getDateRangeText = function (dates) {\n        if ((isNullOrUndefined(dates) && dates.length === 0) || !this.activeView) {\n            return '';\n        }\n        return this.activeView.getDateRangeText(dates[0], dates);\n    };\n    /**\n     * Retrieves an array of dates based on the specified date collection direction.\n     *\n     * @param {NavigationDirection} type - The direction for date collection. Options are:\n     *   - 'Previous': Returns the previous date range collection from the current rendered date.\n     *   - 'Next': Returns the next date range collection from the current rendered date.\n     *   - 'Current': Returns the current rendered date collection.\n     *\n     * @returns {Date[]} An array of Date objects representing the view dates.\n     */\n    Schedule.prototype.getViewDates = function (type) {\n        if (type === void 0) { type = 'Current'; }\n        if (!this.activeView) {\n            return [];\n        }\n        switch (type) {\n            case 'Previous':\n            case 'Next':\n                return this.activeView.getRenderDates(undefined, this.activeView.getNextPreviousDate(type));\n            case 'Current':\n                return this.getCurrentViewDates();\n        }\n    };\n    /**\n     * Select the resource based on group index in mobile mode.\n     *\n     * @param {number} groupIndex Defines the resource index based on last level.\n     * @returns {void}\n     */\n    Schedule.prototype.selectResourceByIndex = function (groupIndex) {\n        if (this.resourceBase && this.uiStateValues.isGroupAdaptive) {\n            this.resourceBase.selectResourceByIndex(groupIndex);\n        }\n    };\n    /**\n     * Select the resources to the based on id.\n     *\n     * @param {string | number} id id of the resource defined in resources collection.\n     * @param {string} name Name of the resource defined in resources collection.\n     * @returns {number} Returns the group index\n     */\n    Schedule.prototype.getIndexFromResourceId = function (id, name) {\n        if (this.resourceBase) {\n            return this.resourceBase.getIndexFromResourceId(id, name);\n        }\n        return null;\n    };\n    /**\n     * Adds the resources to the specified index.\n     *\n     * @param {Object | Object[]} resources Accepts the resource data in single or collection of data.\n     * @param {string} name Name of the resource defined in resources collection.\n     * @param {number} index Index or position where the resource should be added.\n     * @returns {void}\n     */\n    Schedule.prototype.addResource = function (resources, name, index) {\n        this.resourceBase.addResource(resources, name, index);\n    };\n    /**\n     * Removes the specified resource.\n     *\n     * @param {string | string[] | number | number[]} resourceId Specifies the resource id to be removed.\n     * @param {string} name Specifies the resource name from which the id should be referred.\n     * @returns {void}\n     */\n    Schedule.prototype.removeResource = function (resourceId, name) {\n        this.resourceBase.removeResource(resourceId, name);\n    };\n    /**\n     * Destroys the Schedule component.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Schedule.prototype.destroy = function () {\n        if (this.eventTooltip) {\n            this.eventTooltip.destroy();\n            this.eventTooltip = null;\n        }\n        this.destroyPopups();\n        this.hideSpinner();\n        this.unWireEvents();\n        this.destroyHeaderModule();\n        if (this.eventBase) {\n            this.eventBase.destroy();\n            this.eventBase = null;\n        }\n        if (this.workCellAction) {\n            this.workCellAction.destroy();\n            this.workCellAction = null;\n        }\n        if (this.inlineModule) {\n            this.inlineModule.destroy();\n            this.inlineModule = null;\n        }\n        if (this.keyboardInteractionModule) {\n            this.keyboardInteractionModule.destroy();\n            this.keyboardInteractionModule = null;\n        }\n        if (this.scrollModule) {\n            this.scrollModule.destroy();\n            this.scrollModule = null;\n        }\n        if (this.printModule) {\n            this.printModule.destroy();\n        }\n        if (this.activeView) {\n            this.resetTemplates();\n            this.activeView.removeEventListener();\n            this.activeView.destroy();\n            this.activeView = null;\n        }\n        if (this.scheduleTouchModule) {\n            this.scheduleTouchModule.destroy();\n            this.scheduleTouchModule = null;\n        }\n        if (this.crudModule) {\n            this.crudModule.destroy();\n            this.crudModule = null;\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n            this.dataModule = null;\n        }\n        _super.prototype.destroy.call(this);\n        var modules = [\n            'dayModule', 'weekModule', 'workWeekModule', 'monthModule', 'monthAgendaModule', 'yearModule', 'agendaModule',\n            'timelineViewsModule', 'timelineMonthModule', 'timelineYearModule', 'resizeModule', 'dragAndDropModule',\n            'excelExportModule', 'printModule', 'iCalendarExportModule', 'iCalendarImportModule', 'tzModule', 'eventsData',\n            'eventsProcessed', 'blockData', 'blockProcessed', 'uiStateValues', 'viewCollections', 'viewOptions', 'defaultLocale',\n            'localeObj', 'selectedElements', 'resourceCollection', 'editorTitles', 'eventFields', 'activeViewOptions',\n            'activeEventData', 'activeCellsData', 'renderModule'\n        ];\n        for (var _i = 0, modules_1 = modules; _i < modules_1.length; _i++) {\n            var module = modules_1[_i];\n            this[\"\" + module] = null;\n        }\n        util.removeChildren(this.element);\n        var removeClasses = [cls.ROOT, cls.RTL, cls.DEVICE_CLASS, cls.MULTI_DRAG];\n        if (this.cssClass) {\n            removeClasses = removeClasses.concat(this.cssClass.split(' '));\n        }\n        removeClass([this.element], removeClasses);\n    };\n    __decorate([\n        Property('auto')\n    ], Schedule.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], Schedule.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"showHeaderBar\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"showTimeIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"allowSwiping\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"allowOverlap\", void 0);\n    __decorate([\n        Property(3)\n    ], Schedule.prototype, \"overscanCount\", void 0);\n    __decorate([\n        Collection([], ToolbarItem)\n    ], Schedule.prototype, \"toolbarItems\", void 0);\n    __decorate([\n        Property('Week')\n    ], Schedule.prototype, \"currentView\", void 0);\n    __decorate([\n        Property(['Day', 'Week', 'WorkWeek', 'Month', 'Agenda'])\n    ], Schedule.prototype, \"views\", void 0);\n    __decorate([\n        Property(new Date())\n    ], Schedule.prototype, \"selectedDate\", void 0);\n    __decorate([\n        Property(new Date(1900, 0, 1))\n    ], Schedule.prototype, \"minDate\", void 0);\n    __decorate([\n        Property(new Date(2099, 11, 31))\n    ], Schedule.prototype, \"maxDate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"dateFormat\", void 0);\n    __decorate([\n        Property('Gregorian')\n    ], Schedule.prototype, \"calendarMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"showWeekend\", void 0);\n    __decorate([\n        Property(0)\n    ], Schedule.prototype, \"firstDayOfWeek\", void 0);\n    __decorate([\n        Property('FirstDay')\n    ], Schedule.prototype, \"weekRule\", void 0);\n    __decorate([\n        Property([1, 2, 3, 4, 5])\n    ], Schedule.prototype, \"workDays\", void 0);\n    __decorate([\n        Property(12)\n    ], Schedule.prototype, \"monthsCount\", void 0);\n    __decorate([\n        Property('00:00')\n    ], Schedule.prototype, \"startHour\", void 0);\n    __decorate([\n        Property('24:00')\n    ], Schedule.prototype, \"endHour\", void 0);\n    __decorate([\n        Property(null)\n    ], Schedule.prototype, \"timeFormat\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"enableAllDayScroll\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Complex({}, WorkHours)\n    ], Schedule.prototype, \"workHours\", void 0);\n    __decorate([\n        Complex({}, TimeScale)\n    ], Schedule.prototype, \"timeScale\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"allowKeyboardInteraction\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"dateHeaderTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"dateRangeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"cellHeaderTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"dayHeaderTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"monthHeaderTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"cellTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"readonly\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"showQuickInfo\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"allowInline\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"allowMultiCellSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"allowMultiRowSelection\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"quickInfoOnSelectionEnd\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"showWeekNumber\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"rowAutoHeight\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"allowMultiDrag\", void 0);\n    __decorate([\n        Property(0)\n    ], Schedule.prototype, \"firstMonthOfYear\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"editorTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"editorHeaderTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"editorFooterTemplate\", void 0);\n    __decorate([\n        Complex({}, QuickInfoTemplates)\n    ], Schedule.prototype, \"quickInfoTemplates\", void 0);\n    __decorate([\n        Property(7)\n    ], Schedule.prototype, \"agendaDaysCount\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"hideEmptyAgendaDays\", void 0);\n    __decorate([\n        Property(true)\n    ], Schedule.prototype, \"enableRecurrenceValidation\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"timezone\", void 0);\n    __decorate([\n        Complex({}, EventSettings)\n    ], Schedule.prototype, \"eventSettings\", void 0);\n    __decorate([\n        Property(timezoneData)\n    ], Schedule.prototype, \"timezoneDataSource\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"resourceHeaderTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"headerIndentTemplate\", void 0);\n    __decorate([\n        Complex({}, Group)\n    ], Schedule.prototype, \"group\", void 0);\n    __decorate([\n        Collection([], Resources)\n    ], Schedule.prototype, \"resources\", void 0);\n    __decorate([\n        Collection([], HeaderRows)\n    ], Schedule.prototype, \"headerRows\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], Schedule.prototype, \"allowClipboard\", void 0);\n    __decorate([\n        Property()\n    ], Schedule.prototype, \"eventDragArea\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"cellDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"moreEventsClick\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"hover\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"select\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"navigating\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"renderCell\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"eventClick\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"eventDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"eventRendered\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"dataBinding\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"popupOpen\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"popupClose\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"virtualScrollStart\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"virtualScrollStop\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"excelExport\", void 0);\n    __decorate([\n        Event()\n    ], Schedule.prototype, \"tooltipOpen\", void 0);\n    Schedule = __decorate([\n        NotifyPropertyChanges\n    ], Schedule);\n    return Schedule;\n}(Component));\nexport { Schedule };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIA,CAAC,CAACM,cAAc,CAACD,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IAC9E,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnBF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASO,EAAEA,CAAA,EAAG;MAAE,IAAI,CAACC,WAAW,GAAGT,CAAC;IAAE;IACtCA,CAAC,CAACU,SAAS,GAAGT,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACS,MAAM,CAACV,CAAC,CAAC,IAAIO,EAAE,CAACE,SAAS,GAAGT,CAAC,CAACS,SAAS,EAAE,IAAIF,EAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AACL,CAAC,CAAE,CAAC;AACJ,IAAII,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGd,MAAM,CAACmB,wBAAwB,CAACP,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEhB,CAAC;EAC5H,IAAI,OAAOsB,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEH,CAAC,GAAGE,OAAO,CAACC,QAAQ,CAACV,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEK,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAC,CAAC,EAAEJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGjB,CAAC,CAACoB,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGjB,CAAC,CAACc,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGpB,CAAC,CAACc,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIlB,MAAM,CAACuB,cAAc,CAACX,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD;AACA,SAASM,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,sBAAsB;AAChG,SAASC,YAAY,EAAEC,OAAO,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,sBAAsB;AACxH,SAASC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,OAAO,QAAQ,sBAAsB;AACnH,SAASC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,kBAAkB,QAAQ,sBAAsB;AAC/G,SAASC,aAAa,EAAEC,WAAW,EAAEC,WAAW,QAAQ,wBAAwB;AAChF,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,SAAS,EAAEC,OAAO,QAAQ,4BAA4B;AAC/D,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,QAAQ,EAAEC,YAAY,QAAQ,sBAAsB;AAC7D,OAAO,KAAKC,MAAM,MAAM,kBAAkB;AAC1C,OAAO,KAAKC,GAAG,MAAM,sBAAsB;AAC3C,OAAO,KAAKC,IAAI,MAAM,cAAc;AACpC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC5CrF,SAAS,CAACoF,QAAQ,EAAEC,MAAM,CAAC;EAC3B;AACJ;AACA;AACA;AACA;AACA;EACI,SAASD,QAAQA,CAACE,OAAO,EAAEC,OAAO,EAAE;IAChC,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,EAAEH,OAAO,EAAEC,OAAO,CAAC,IAAI,IAAI;IACvDC,KAAK,CAACE,kBAAkB,GAAG,CAAC;IAC5B,OAAOF,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIJ,QAAQ,CAACxE,SAAS,CAAC+E,MAAM,GAAG,YAAY;IACpC,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,aAAa,GAAG,EAAE;IACtBD,UAAU,CAACE,IAAI,CAACb,GAAG,CAACc,IAAI,CAAC;IACzB,IAAI,IAAI,CAACC,SAAS,EAAE;MAChBJ,UAAU,CAACE,IAAI,CAACb,GAAG,CAACgB,GAAG,CAAC;IAC5B,CAAC,MACI;MACDJ,aAAa,CAACC,IAAI,CAACb,GAAG,CAACgB,GAAG,CAAC;IAC/B;IACA,IAAI,IAAI,CAACC,UAAU,EAAE;MACjBN,UAAU,CAACE,IAAI,CAACb,GAAG,CAACkB,YAAY,CAAC;IACrC,CAAC,MACI;MACDN,aAAa,CAACC,IAAI,CAACb,GAAG,CAACkB,YAAY,CAAC;IACxC;IACA,IAAI,IAAI,CAACC,gBAAgB,EAAE;MACvBR,UAAU,CAACE,IAAI,CAACb,GAAG,CAACoB,cAAc,CAAC;IACvC,CAAC,MACI;MACDR,aAAa,CAACC,IAAI,CAACb,GAAG,CAACoB,cAAc,CAAC;IAC1C;IACA,IAAI,IAAI,CAACC,cAAc,EAAE;MACrBV,UAAU,CAACE,IAAI,CAACb,GAAG,CAACsB,UAAU,CAAC;IACnC,CAAC,MACI;MACDV,aAAa,CAACC,IAAI,CAACb,GAAG,CAACsB,UAAU,CAAC;IACtC;IACA,IAAI,IAAI,CAACC,QAAQ,EAAE;MACf,IAAIA,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;MACvC,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,UAAU,GAAGH,QAAQ,EAAEE,EAAE,GAAGC,UAAU,CAACtF,MAAM,EAAEqF,EAAE,EAAE,EAAE;QAClE,IAAIE,KAAK,GAAGD,UAAU,CAACD,EAAE,CAAC;QAC1Bd,UAAU,CAACE,IAAI,CAACc,KAAK,CAAC;MAC1B;IACJ;IACA3D,SAAS,CAAC,IAAI,CAACsC,OAAO,EAAEK,UAAU,EAAEC,aAAa,CAAC;IAClD,IAAI,CAACgB,YAAY,CAAC,CAAC;IACnBzD,aAAa,CAAC;MAAEpC,MAAM,EAAE,IAAI,CAACuE;IAAQ,CAAC,CAAC;IACvC,IAAI,CAACuB,YAAY,GAAG,IAAItD,MAAM,CAAC,IAAI,CAAC;IACpC,IAAI,CAACsD,YAAY,CAACC,QAAQ,CAAC,CAAC;IAC5B,IAAI,CAACD,YAAY,CAACE,SAAS,CAAC,CAAC;IAC7B,IAAI,CAACC,YAAY,GAAG,IAAIhD,MAAM,CAAC,IAAI,CAAC;IACpC,IAAI,CAACiD,SAAS,GAAG,IAAItD,SAAS,CAAC,IAAI,CAAC;IACpC,IAAI,CAACuD,cAAc,GAAG,IAAI5C,mBAAmB,CAAC,IAAI,CAAC;IACnD,IAAI,IAAI,CAAC6C,wBAAwB,EAAE;MAC/B,IAAI,CAACC,yBAAyB,GAAG,IAAI3D,mBAAmB,CAAC,IAAI,CAAC;IAClE;IACA,IAAI,CAAC4D,YAAY,GAAG,IAAIzD,UAAU,CAAC,IAAI,CAAC;IACxC,IAAI,CAAC0D,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;IACpD,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACC,UAAU,CAAC,CAAC;EACrB,CAAC;EACDxC,QAAQ,CAACxE,SAAS,CAAC4G,oBAAoB,GAAG,YAAY;IAClD,IAAI,CAAC,IAAI,CAACjC,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAAC6C,qBAAqB,CAAC,EAAE;MAC9D,IAAI,CAACvC,OAAO,CAACwC,WAAW,CAAC,IAAI,CAACC,aAAa,CAAC,KAAK,EAAE;QAAEC,SAAS,EAAEhD,GAAG,CAAC6C;MAAsB,CAAC,CAAC,CAAC;IACjG;EACJ,CAAC;EACD1C,QAAQ,CAACxE,SAAS,CAACsH,oBAAoB,GAAG,UAAUC,QAAQ,EAAE;IAC1D,IAAIC,YAAY,GAAG,gBAAgB,GAAGD,QAAQ;IAC9C,IAAI,IAAI,CAACE,oBAAoB,CAACC,OAAO,CAACF,YAAY,CAAC,GAAG,CAAC,EAAE;MACrD,IAAI,CAACC,oBAAoB,CAACvC,IAAI,CAACsC,YAAY,CAAC;IAChD;IACA,OAAOA,YAAY;EACvB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIhD,QAAQ,CAACxE,SAAS,CAAC2H,eAAe,GAAG,UAAUhD,OAAO,EAAE;IACpD,OAAOL,IAAI,CAACqD,eAAe,CAAChD,OAAO,EAAE,IAAI,CAACiD,aAAa,CAACC,aAAa,CAAC;EAC1E,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIrD,QAAQ,CAACxE,SAAS,CAAC8H,gBAAgB,GAAG,UAAUnD,OAAO,EAAE;IACrD,OAAOL,IAAI,CAACwD,gBAAgB,CAACnD,OAAO,EAAE,IAAI,CAACiD,aAAa,CAACC,aAAa,CAAC;EAC3E,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIrD,QAAQ,CAACxE,SAAS,CAAC+H,yBAAyB,GAAG,UAAUpD,OAAO,EAAEqD,YAAY,EAAE;IAC5E,OAAO1D,IAAI,CAACyD,yBAAyB,CAACpD,OAAO,EAAEqD,YAAY,EAAE,IAAI,CAACJ,aAAa,CAACC,aAAa,CAAC;EAClG,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIrD,QAAQ,CAACxE,SAAS,CAACiI,eAAe,GAAG,UAAUC,QAAQ,EAAE;IACrD,IAAI,IAAI,CAACC,OAAO,EAAE;MACd,IAAI,CAACC,oBAAoB,CAACF,QAAQ,CAAC;IACvC,CAAC,MACI,IAAIA,QAAQ,EAAE;MACfA,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI1D,QAAQ,CAACxE,SAAS,CAACqI,cAAc,GAAG,UAAUC,SAAS,EAAE;IACrD,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACJ,OAAO,EAAE;MAChC,IAAI,CAACK,aAAa,CAACF,SAAS,CAAC;IACjC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI9D,QAAQ,CAACxE,SAAS,CAACyI,QAAQ,GAAG,UAAUC,KAAK,EAAE/D,OAAO,EAAE;IACpD,IAAI,IAAI,CAACgE,mBAAmB,EAAE;MAC1BhE,OAAO,CAACiE,SAAS,GAAGrG,kBAAkB,CAACkG,QAAQ,CAACC,KAAK,CAAC;IAC1D,CAAC,MACI;MACD/D,OAAO,CAACkE,SAAS,GAAGH,KAAK;IAC7B;EACJ,CAAC;EACDlE,QAAQ,CAACxE,SAAS,CAAC+G,mBAAmB,GAAG,UAAU+B,UAAU,EAAE;IAC3D,IAAIA,UAAU,KAAK,KAAK,CAAC,EAAE;MAAEA,UAAU,GAAG,KAAK;IAAE;IACjD,IAAI,IAAI,CAACC,SAAS,CAACtI,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAI,CAACuI,YAAY,GAAG,IAAI/E,YAAY,CAAC,IAAI,CAAC;MAC1C,IAAI,CAAC+E,YAAY,CAACC,iBAAiB,CAACH,UAAU,CAAC;IACnD,CAAC,MACI;MACD,IAAI,CAACE,YAAY,GAAG,IAAI;MACxB,IAAI,CAACE,kBAAkB,GAAG,EAAE;MAC5B,IAAI,CAACC,cAAc,CAACL,UAAU,CAAC;IACnC;EACJ,CAAC;EACDtE,QAAQ,CAACxE,SAAS,CAACoJ,mBAAmB,GAAG,YAAY;IACjD,IAAI,IAAI,CAACC,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAACD,WAAW,GAAG,IAAI;IAC3B;IACA,IAAI,CAACA,WAAW,GAAG,IAAIjG,WAAW,CAAC,IAAI,CAAC;EAC5C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIoB,QAAQ,CAACxE,SAAS,CAACmJ,cAAc,GAAG,UAAUI,YAAY,EAAE;IACxD,IAAIA,YAAY,EAAE;MACd,IAAI,CAACC,cAAc,CAAC,IAAI,CAACC,WAAW,CAAC;MACrC,IAAI,CAACJ,WAAW,CAACK,OAAO,CAAC,CAAC;MAC1B;IACJ;IACA,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,IAAI,CAACC,aAAa,EAAE;MACpB,IAAI,CAACC,YAAY,GAAG,IAAIlH,cAAc,CAAC,IAAI,CAAC;IAChD;IACA,IAAI,CAACiE,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACgB,aAAa,CAACC,aAAa,GAAGiC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACpF,OAAO,CAACqF,qBAAqB,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,IAAI,CAACtF,OAAO,CAACuF,WAAW;IACtH,IAAI3I,OAAO,CAAC4I,QAAQ,IAAI5I,OAAO,CAAC6I,OAAO,EAAE;MACrC,IAAI,CAACC,mBAAmB,GAAG,IAAIxH,aAAa,CAAC,IAAI,CAAC;IACtD;IACA,IAAI,CAAC2G,cAAc,CAAC,IAAI,CAACC,WAAW,CAAC;IACrC,IAAI,CAACa,aAAa,CAAC,CAAC;IACpB,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;MAClB,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAC3B;EACJ,CAAC;EACDhG,QAAQ,CAACxE,SAAS,CAACiG,YAAY,GAAG,UAAUwE,YAAY,EAAE;IACtD,IAAIA,YAAY,KAAK,KAAK,CAAC,EAAE;MAAEA,YAAY,GAAG,IAAI,CAACA,YAAY;IAAE;IACjE;IACA,IAAIC,IAAI,GAAGD,YAAY,YAAYE,IAAI,GAAG,IAAIA,IAAI,CAACF,YAAY,CAACG,OAAO,CAAC,CAAC,CAAC,GAAG,IAAID,IAAI,CAACF,YAAY,CAAC;IACnG,IAAII,OAAO,GAAG9I,iBAAiB,CAAC,IAAI,CAAC8I,OAAO,CAAC,GAAG,IAAIF,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAChE,IAAI,CAACE,OAAO,YAAYF,IAAI,GAAG,IAAIA,IAAI,CAAC,IAAI,CAACE,OAAO,CAACD,OAAO,CAAC,CAAC,CAAC,GAAG,IAAID,IAAI,CAAC,IAAI,CAACE,OAAO,CAAC;IAC5F,IAAIC,OAAO,GAAG/I,iBAAiB,CAAC,IAAI,CAAC+I,OAAO,CAAC,GAAG,IAAIH,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,GAClE,IAAI,CAACG,OAAO,YAAYH,IAAI,GAAG,IAAIA,IAAI,CAAC,IAAI,CAACG,OAAO,CAACF,OAAO,CAAC,CAAC,CAAC,GAAG,IAAID,IAAI,CAAC,IAAI,CAACG,OAAO,CAAC;IAC5F,IAAID,OAAO,IAAIC,OAAO,EAAE;MACpB,IAAIJ,IAAI,GAAGG,OAAO,EAAE;QAChBH,IAAI,GAAGG,OAAO;MAClB;MACA,IAAIH,IAAI,GAAGI,OAAO,EAAE;QAChBJ,IAAI,GAAGI,OAAO;MAClB;MACA,IAAI,CAACC,aAAa,CAAC;QAAEN,YAAY,EAAE,IAAIE,IAAI,CAAC,EAAE,GAAGD,IAAI,CAAC;QAAEG,OAAO,EAAE,IAAIF,IAAI,CAAC,EAAE,GAAGE,OAAO,CAAC;QAAEC,OAAO,EAAE,IAAIH,IAAI,CAAC,EAAE,GAAGG,OAAO;MAAE,CAAC,EAAE,IAAI,CAAC;MACjI,IAAI,IAAI,CAACzB,WAAW,EAAE;QAClB,IAAI,CAACA,WAAW,CAAC2B,wBAAwB,CAAC,CAAC;MAC/C;IACJ,CAAC,MACI;MACD,MAAMC,KAAK,CAAC,8CAA8C,CAAC;IAC/D;EACJ,CAAC;EACDzG,QAAQ,CAACxE,SAAS,CAACkL,YAAY,GAAG,UAAUC,QAAQ,EAAE;IAClD,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,IAAI,CAACC,eAAe,CAAC5K,MAAM,EAAE2K,IAAI,EAAE,EAAE;MAC3D,IAAIE,UAAU,GAAG,IAAI,CAACD,eAAe,CAACE,QAAQ,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACC,MAAM;MAC3E,IAAIH,UAAU,KAAKH,QAAQ,EAAE;QACzB,OAAOC,IAAI;MACf;IACJ;IACA,OAAO,CAAC,CAAC;EACb,CAAC;EACD5G,QAAQ,CAACxE,SAAS,CAAC0L,cAAc,GAAG,UAAUC,YAAY,EAAE;IACxD,IAAIA,YAAY,KAAK,KAAK,CAAC,EAAE;MAAEA,YAAY,GAAG,KAAK;IAAE;IACrD,IAAI5J,iBAAiB,CAAC,IAAI,CAAC6J,KAAK,CAAC,IAAI,IAAI,CAACA,KAAK,CAACnL,MAAM,KAAK,CAAC,EAAE;MAC1D;IACJ;IACA,IAAI,CAACoL,WAAW,GAAG,CAAC,CAAC;IACrB,IAAI,CAACR,eAAe,GAAG,EAAE;IACzB,IAAIF,QAAQ;IACZ,IAAIW,YAAY;IAChB,IAAIC,SAAS,GAAG,IAAI,CAACC,SAAS;IAC9B,IAAIC,KAAK,GAAG,CAAC;IACb,IAAI,CAACD,SAAS,GAAG,CAAC,CAAC;IACnB,KAAK,IAAIlG,EAAE,GAAG,CAAC,EAAEoG,EAAE,GAAG,IAAI,CAACN,KAAK,EAAE9F,EAAE,GAAGoG,EAAE,CAACzL,MAAM,EAAEqF,EAAE,EAAE,EAAE;MACpD,IAAIqG,IAAI,GAAGD,EAAE,CAACpG,EAAE,CAAC;MACjB,IAAIsG,SAAS,GAAI,OAAOD,IAAI,KAAK,QAAQ,GAAI,KAAK,GAAG,IAAI;MACzD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC1BhB,QAAQ,GAAGgB,IAAI;QACf,IAAI,IAAI,CAAC1C,WAAW,KAAK0B,QAAQ,EAAE;UAC/BW,YAAY,GAAGX,QAAQ;UACvB,IAAI,CAACa,SAAS,GAAGC,KAAK;QAC1B;MACJ,CAAC,MACI;QACDd,QAAQ,GAAGgB,IAAI,CAACV,MAAM;QACtB,IAAIU,IAAI,CAACE,UAAU,EAAE;UACjBP,YAAY,GAAGX,QAAQ;UACvB,IAAI,CAACa,SAAS,GAAGC,KAAK;QAC1B;MACJ;MACA,IAAIK,GAAG,GAAGxK,MAAM,CAAC;QAAE2J,MAAM,EAAEN;MAAS,CAAC,EAAEiB,SAAS,GAAGD,IAAI,GAAG,CAAC,CAAC,CAAC;MAC7D,IAAII,aAAa,GAAGpB,QAAQ,CAACqB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGtB,QAAQ,CAACuB,KAAK,CAAC,CAAC,CAAC;MACxEJ,GAAG,CAACK,sBAAsB,GAAGL,GAAG,CAACM,kBAAkB,GAAGN,GAAG,CAACb,MAAM,GAAG,EAAE;MACrEa,GAAG,CAACO,sBAAsB,GAAGP,GAAG,CAACQ,kBAAkB,GAAGR,GAAG,CAACb,MAAM,GAAG,EAAE;MACrEa,GAAG,CAACS,qBAAqB,GAAGT,GAAG,CAACU,iBAAiB,GAAGV,GAAG,CAACb,MAAM,GAAG,EAAE;MACnEa,GAAG,CAACW,gBAAgB,GAAGX,GAAG,CAACY,YAAY,GAAGZ,GAAG,CAACb,MAAM,GAAG,EAAE;MACzDa,GAAG,CAACa,qBAAqB,GAAGb,GAAG,CAACc,iBAAiB,GAAGd,GAAG,CAACb,MAAM,GAAG,EAAE;MACnEa,GAAG,CAACe,uBAAuB,GAAGf,GAAG,CAACgB,mBAAmB,GAAGhB,GAAG,CAACb,MAAM,GAAG,EAAE;MACvEa,GAAG,CAACiB,0BAA0B,GAAGjB,GAAG,CAACkB,sBAAsB,GAAGlB,GAAG,CAACb,MAAM,GAAG,EAAE;MAC7Ea,GAAG,CAACmB,wBAAwB,GAAGnB,GAAG,CAACoB,oBAAoB,GAAGpB,GAAG,CAACb,MAAM,GAAG,EAAE;MACzEa,GAAG,CAACqB,iBAAiB,GAAGrB,GAAG,CAACsB,aAAa,GAAGtB,GAAG,CAACb,MAAM,GAAG,EAAE;MAC3D,IAAI,CAAC1J,iBAAiB,CAACuK,GAAG,CAACuB,cAAc,CAAC,IAAIvB,GAAG,CAACuB,cAAc,KAAK,CAAC,EAAE;QACpE,OAAOvB,GAAG,CAACuB,cAAc;MAC7B;MACA,IAAI,CAAC9L,iBAAiB,CAACuK,GAAG,CAACwB,QAAQ,CAAC,IAAIxB,GAAG,CAACwB,QAAQ,KAAK,CAAC,EAAE;QACxD,OAAOxB,GAAG,CAACwB,QAAQ;MACvB;MACA,IAAI,CAACzC,eAAe,CAACnG,IAAI,CAACoH,GAAG,CAAC;MAC9B,IAAIvK,iBAAiB,CAAC,IAAI,CAAC8J,WAAW,CAAC,EAAE,GAAGU,aAAa,CAAC,CAAC,EAAE;QACzD,IAAI,CAACV,WAAW,CAAC,EAAE,GAAGU,aAAa,CAAC,GAAG,CAACD,GAAG,CAAC;MAChD,CAAC,MACI;QACD,IAAI,CAACT,WAAW,CAAC,EAAE,GAAGU,aAAa,CAAC,CAACrH,IAAI,CAACoH,GAAG,CAAC;MAClD;MACAL,KAAK,EAAE;IACX;IACA,IAAI,CAACN,YAAY,IAAIG,YAAY,EAAE;MAC/B,IAAI,CAACf,aAAa,CAAC;QAAEtB,WAAW,EAAEqC;MAAa,CAAC,EAAE,IAAI,CAAC;IAC3D;IACA,IAAI,IAAI,CAACE,SAAS,KAAK,CAAC,CAAC,EAAE;MACvB,IAAI+B,YAAY,GAAG,IAAI,CAAC7C,YAAY,CAAC,IAAI,CAACzB,WAAW,CAAC;MACtD,IAAI,CAACuC,SAAS,GAAK,OAAO,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAM,CAAC7J,iBAAiB,CAACgK,SAAS,CAAC,IAAIA,SAAS,KAAK,CAAC,CAAE,GAAIA,SAAS,GACpHgC,YAAY,KAAK,CAAC,CAAC,GAAI,CAAC,GAAGA,YAAY;IAChD;EACJ,CAAC;EACDvJ,QAAQ,CAACxE,SAAS,CAAC8G,oBAAoB,GAAG,YAAY;IAClD,IAAIkH,SAAS,GAAG;MACZC,MAAM,EAAE,IAAI,CAACD,SAAS,CAACC,MAAM;MAC7BH,QAAQ,EAAE,IAAI,CAACE,SAAS,CAACF,QAAQ;MACjCI,SAAS,EAAE,IAAI,CAACF,SAAS,CAACE,SAAS;MACnCC,iBAAiB,EAAE,IAAI,CAACH,SAAS,CAACG,iBAAiB;MACnDC,iBAAiB,EAAE,IAAI,CAACJ,SAAS,CAACI;IACtC,CAAC;IACD,IAAIC,UAAU,GAAG,IAAI,CAAChD,eAAe,CAAC,IAAI,CAACW,SAAS,CAAC,CAACP,MAAM,CAAC/D,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjF,IAAI4G,KAAK,GAAG;MACRC,MAAM,EAAEF,UAAU,GAAG,KAAK,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM;MAC9CC,SAAS,EAAE,IAAI,CAACF,KAAK,CAACE,SAAS;MAC/BC,cAAc,EAAE,IAAI,CAACH,KAAK,CAACG,cAAc;MACzC1F,SAAS,EAAEhH,iBAAiB,CAAC,IAAI,CAACuM,KAAK,CAACvF,SAAS,CAAC,GAAG,EAAE,GAAG,IAAI,CAACuF,KAAK,CAACvF,SAAS;MAC9E2F,qBAAqB,EAAE,IAAI,CAACJ,KAAK,CAACI,qBAAqB;MACvDC,iBAAiB,EAAE,IAAI,CAACL,KAAK,CAACK,iBAAiB;MAC/CC,kBAAkB,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAClH,OAAO,CAAC,IAAI,CAAC+B,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC6E,KAAK,CAACM,kBAAkB,GAAG;IAC9H,CAAC;IACD,IAAIC,QAAQ,GAAG,IAAI,CAACxD,eAAe,CAAC,IAAI,CAACW,SAAS,CAAC,CAAC6C,QAAQ,GAAG,EAAE,GAAG,IAAI,CAACA,QAAQ;IACjF,IAAIC,eAAe,GAAG;MAClBC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrB3C,UAAU,EAAE,KAAK;MACjBZ,MAAM,EAAE,IAAI;MACZwD,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,qBAAqB,EAAE,KAAK;MAC5BC,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BC,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCzC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;MAC3CQ,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzCE,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;MAC7CJ,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BU,aAAa,EAAE,IAAI,CAAC0B,aAAa,CAACC,QAAQ;MAC1CzC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;MAC3CE,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzCQ,sBAAsB,EAAE,IAAI,CAACA,sBAAsB;MACnDE,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;MAC/C8B,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvC3B,cAAc,EAAE,IAAI,CAACA,cAAc;MACnCgB,QAAQ,EAAEA,QAAQ;MAClBY,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,cAAc,EAAE,IAAI,CAACA,cAAc;MACnCC,WAAW,EAAE,IAAI;MACjB9B,QAAQ,EAAE,CAAC;MACXE,SAAS,EAAEA,SAAS;MACpB6B,UAAU,EAAE,IAAI,CAACC,kBAAkB;MACnCxB,KAAK,EAAEA,KAAK;MACZyB,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,WAAW,EAAE,YAAY;MACzBC,aAAa,EAAE,CAAC;MAChBC,WAAW,EAAE,IAAI;MACjBC,iBAAiB,EAAE;IACvB,CAAC;IACD,IAAItE,WAAW,GAAG,IAAI,CAACR,eAAe,CAAC,IAAI,CAACW,SAAS,CAAC;IACtD,IAAIoE,SAAS,GAAGtO,MAAM,CAACgN,eAAe,EAAEjD,WAAW,EAAEwE,SAAS,EAAE,IAAI,CAAC;IACrE,IAAI,IAAI,CAACxC,cAAc,KAAK,CAAC,IAAIhC,WAAW,CAACgC,cAAc,IAAI,IAAI,CAACA,cAAc,KAAKhC,WAAW,CAACgC,cAAc,EAAE;MAC/GuC,SAAS,CAACvC,cAAc,GAAG,IAAI,CAACA,cAAc;IAClD;IACA,IAAIuC,SAAS,CAACF,WAAW,EAAE;MACvBE,SAAS,CAACF,WAAW,GAAGE,SAAS,CAACF,WAAW,YAAYvF,IAAI,GAAG,IAAIA,IAAI,CAACyF,SAAS,CAACF,WAAW,CAACtF,OAAO,CAAC,CAAC,CAAC,GACrG,IAAID,IAAI,CAACyF,SAAS,CAACF,WAAW,CAAC;IACvC;IACA,IAAIE,SAAS,CAACD,iBAAiB,IAAI,CAACpO,iBAAiB,CAACqO,SAAS,CAAC9B,KAAK,CAACvF,SAAS,CAAC,IAAIqH,SAAS,CAAC9B,KAAK,CAACvF,SAAS,CAACtI,MAAM,GAAG,CAAC,KACnH,CAAC,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,cAAc,CAAC,CAACiH,OAAO,CAAC0I,SAAS,CAAC3E,MAAM,CAAC,KAAK,CAAC,CAAC,IAC9E2E,SAAS,CAAC3E,MAAM,KAAK,cAAc,IAAI2E,SAAS,CAACJ,WAAW,KAAK,UAAW,CAAC,EAAE;MACpFI,SAAS,CAACjB,qBAAqB,GAAG,IAAI;IAC1C;IACA,OAAOiB,SAAS;EACpB,CAAC;EACD5L,QAAQ,CAACxE,SAAS,CAAC2G,oBAAoB,GAAG,YAAY;IAClD,IAAI,CAAC2J,WAAW,GAAG;MACfC,EAAE,EAAE,IAAI,CAACjB,aAAa,CAACkB,MAAM,CAACD,EAAE;MAChCE,OAAO,EAAE,IAAI,CAACnB,aAAa,CAACkB,MAAM,CAACC,OAAO;MAC1CC,OAAO,EAAE,IAAI,CAACpB,aAAa,CAACkB,MAAM,CAACE,OAAO,CAACC,IAAI;MAC/CC,SAAS,EAAE,IAAI,CAACtB,aAAa,CAACkB,MAAM,CAACI,SAAS,CAACD,IAAI;MACnDE,OAAO,EAAE,IAAI,CAACvB,aAAa,CAACkB,MAAM,CAACK,OAAO,CAACF,IAAI;MAC/CG,aAAa,EAAE,IAAI,CAACxB,aAAa,CAACkB,MAAM,CAACM,aAAa,CAACH,IAAI;MAC3DI,WAAW,EAAE,IAAI,CAACzB,aAAa,CAACkB,MAAM,CAACO,WAAW,CAACJ,IAAI;MACvDK,QAAQ,EAAE,IAAI,CAAC1B,aAAa,CAACkB,MAAM,CAACQ,QAAQ,CAACL,IAAI;MACjDM,WAAW,EAAE,IAAI,CAAC3B,aAAa,CAACkB,MAAM,CAACS,WAAW,CAACN,IAAI;MACvDO,QAAQ,EAAE,IAAI,CAAC5B,aAAa,CAACkB,MAAM,CAACU,QAAQ,CAACP,IAAI;MACjDQ,YAAY,EAAE,IAAI,CAAC7B,aAAa,CAACkB,MAAM,CAACW,YAAY,CAACR,IAAI;MACzDS,cAAc,EAAE,IAAI,CAAC9B,aAAa,CAACkB,MAAM,CAACY,cAAc,CAACT,IAAI;MAC7DU,mBAAmB,EAAE,IAAI,CAAC/B,aAAa,CAACkB,MAAM,CAACa,mBAAmB,CAACV,IAAI;MACvEW,UAAU,EAAE,IAAI,CAAChC,aAAa,CAACkB,MAAM,CAACc,UAAU;MAChDC,WAAW,EAAE,IAAI,CAACjC,aAAa,CAACkB,MAAM,CAACe;IAC3C,CAAC;IACD,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,UAAU,GAAG,IAAI1O,IAAI,CAAC,IAAI,EAAE,IAAI,CAACuM,aAAa,CAACoC,UAAU,EAAE,IAAI,CAACpC,aAAa,CAACqC,KAAK,CAAC;IACzF,IAAI,CAACC,UAAU,GAAG,IAAIlO,IAAI,CAAC,IAAI,CAAC;EACpC,CAAC;EACDc,QAAQ,CAACxE,SAAS,CAACwR,eAAe,GAAG,YAAY;IAC7C,IAAI,CAACK,YAAY,GAAG;MAChBnB,OAAO,EAAE,IAAI,CAACpB,aAAa,CAACkB,MAAM,CAACE,OAAO,CAACoB,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,OAAO,CAAC;MACvFpB,SAAS,EAAE,IAAI,CAACtB,aAAa,CAACkB,MAAM,CAACI,SAAS,CAACkB,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,OAAO,CAAC;MAC3FnB,OAAO,EAAE,IAAI,CAACvB,aAAa,CAACkB,MAAM,CAACK,OAAO,CAACiB,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,KAAK,CAAC;MACrFd,QAAQ,EAAE,IAAI,CAAC5B,aAAa,CAACkB,MAAM,CAACU,QAAQ,CAACY,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,QAAQ,CAAC;MAC1FlB,aAAa,EAAE,IAAI,CAACxB,aAAa,CAACkB,MAAM,CAACM,aAAa,CAACgB,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,eAAe,CAAC;MAC3GjB,WAAW,EAAE,IAAI,CAACzB,aAAa,CAACkB,MAAM,CAACO,WAAW,CAACe,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,aAAa,CAAC;MACrGhB,QAAQ,EAAE,IAAI,CAAC1B,aAAa,CAACkB,MAAM,CAACQ,QAAQ,CAACc,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,UAAU,CAAC;MAC5Ff,WAAW,EAAE,IAAI,CAAC3B,aAAa,CAACkB,MAAM,CAACS,WAAW,CAACa,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,aAAa,CAAC;MACrGZ,cAAc,EAAE,IAAI,CAAC9B,aAAa,CAACkB,MAAM,CAACY,cAAc,CAACU,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,WAAW,CAAC,QAAQ;IACzG,CAAC;EACL,CAAC;EACDxN,QAAQ,CAACxE,SAAS,CAACwJ,cAAc,GAAG,UAAU2B,QAAQ,EAAE;IACpD,IAAI,CAACzI,WAAW,CAAC,CAAC;IAClB,IAAI,CAACmE,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;IACpD,IAAI,IAAI,CAACkC,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAACiJ,qBAAqB,CAAC,CAAC;IAC7C;IACA,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAAC7L,YAAY,CAACtB,MAAM,CAACoG,QAAQ,CAAC;EACtC,CAAC;EACD3G,QAAQ,CAACxE,SAAS,CAACkS,mBAAmB,GAAG,YAAY;IACjD,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC+F,kBAAkB,CAAC;IAC1F,IAAI,CAACyF,mBAAmB,GAAG,IAAI,CAACD,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACuG,iBAAiB,CAAC;IACxF,IAAI,CAACkF,qBAAqB,GAAG,IAAI,CAACF,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACyG,mBAAmB,CAAC;IAC5F,IAAI,CAACiF,cAAc,GAAG,IAAI,CAACH,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACqG,YAAY,CAAC;IAC9E,IAAI,CAACsF,oBAAoB,GAAG,IAAI,CAACJ,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACiG,kBAAkB,CAAC;IAC1F,IAAI,CAAC2F,mBAAmB,GAAG,IAAI,CAACL,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACmG,iBAAiB,CAAC;IACxF,IAAI,CAAC0F,mBAAmB,GAAG,IAAI,CAACN,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACmH,SAAS,CAACG,iBAAiB,CAAC;IAClG,IAAI,CAACwE,mBAAmB,GAAG,IAAI,CAACP,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACmH,SAAS,CAACI,iBAAiB,CAAC;IAClG,IAAI,CAACwE,qBAAqB,GAAG,IAAI,CAACR,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC+G,aAAa,CAAC;IACtF,IAAI,CAACiF,wBAAwB,GAAG,IAAI,CAACT,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC2G,sBAAsB,CAAC;IAClG,IAAI,CAACsF,sBAAsB,GAAG,IAAI,CAACV,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC6G,oBAAoB,CAAC;IAC9F,IAAI,CAACqF,uBAAuB,GAAG,IAAI,CAACX,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACyH,KAAK,CAACI,qBAAqB,CAAC;IACtG,IAAI,CAACsE,sBAAsB,GAAG,IAAI,CAACZ,cAAc,CAAC,IAAI,CAAC9C,aAAa,CAAC2D,eAAe,CAAC;IACrF,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACd,cAAc,CAAC,IAAI,CAACe,cAAc,CAAC;IAChE,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAAChB,cAAc,CAAC,IAAI,CAACiB,oBAAoB,CAAC;IAC5E,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAAClB,cAAc,CAAC,IAAI,CAACmB,oBAAoB,CAAC;IAC5E,IAAI,CAACC,0BAA0B,GAAG,IAAI,CAACpB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACC,MAAM,CAAC;IACrF,IAAI,CAACC,2BAA2B,GAAG,IAAI,CAACvB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACG,OAAO,CAAC;IACvF,IAAI,CAACC,0BAA0B,GAAG,IAAI,CAACzB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACK,MAAM,CAAC;EACzF,CAAC;EACDtP,QAAQ,CAACxE,SAAS,CAACwK,gBAAgB,GAAG,YAAY;IAC9C,IAAI,CAACnB,WAAW,GAAG,IAAIjG,WAAW,CAAC,IAAI,CAAC;IACxC,IAAI,CAAC2Q,UAAU,GAAG,IAAI7Q,WAAW,CAAC,IAAI,CAAC;EAC3C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIsB,QAAQ,CAACxE,SAAS,CAACgU,WAAW,GAAG,UAAUC,IAAI,EAAE;IAC7C,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIC,OAAO;IACX,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIrS,iBAAiB,CAAC,IAAI,CAACsS,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,KAAK,IAAI,IAAI,IAAI,CAACA,MAAM,KAAK,OAAO,EAAE;MACnFD,SAAS,GAAG,mBAAmB;MAC/BD,OAAO,GAAIvS,QAAQ,CAACwS,SAAS,GAAGH,IAAI,EAAExS,oBAAoB,CAAC,IAAI,CAAC6S,eAAe,CAAC,CAAC,CAAC,CAAE;IACxF,CAAC,MACI;MACDF,SAAS,GAAG,OAAO,GAAG,EAAE,GAAG,IAAI,CAACC,MAAM,GAAG,mBAAmB,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC,GAAG,eAAe,GAAGL,IAAI;MAC9GE,OAAO,GAAIvS,QAAQ,CAACwS,SAAS,EAAE1S,QAAQ,CAAE;IAC7C;IACA,KAAK,IAAIoE,EAAE,GAAG,CAAC,EAAEoG,EAAE,GAAG1M,MAAM,CAAC+U,IAAI,CAACJ,OAAO,CAAC,EAAErO,EAAE,GAAGoG,EAAE,CAACzL,MAAM,EAAEqF,EAAE,EAAE,EAAE;MAC9D,IAAIwG,GAAG,GAAGJ,EAAE,CAACpG,EAAE,CAAC;MAChBoO,aAAa,CAAChP,IAAI,CAACtD,QAAQ,CAAC0K,GAAG,EAAE6H,OAAO,CAAC,CAAC;IAC9C;IACA,OAAOD,aAAa;EACxB,CAAC;EACD1P,QAAQ,CAACxE,SAAS,CAACwU,iBAAiB,GAAG,YAAY;IAC/C,IAAI,CAACzS,iBAAiB,CAAC,IAAI,CAAC8N,UAAU,CAAC,EAAE;MACrC,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACD,UAAU;MACzC;IACJ;IACA,IAAI9N,iBAAiB,CAAC,IAAI,CAACsS,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,KAAK,IAAI,IAAI,IAAI,CAACA,MAAM,KAAK,OAAO,EAAE;MACnF,IAAI,CAACvE,kBAAkB,GAAIlO,QAAQ,CAAC,mBAAmB,EAAEH,oBAAoB,CAAC,IAAI,CAAC6S,eAAe,CAAC,CAAC,CAAC,CAAE;IAC3G,CAAC,MACI;MACD,IAAI,CAACxE,kBAAkB,GAAIlO,QAAQ,CAAC,OAAO,GAAG,EAAE,GAAG,IAAI,CAACyS,MAAM,GAAG,mBAAmB,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC,GAAG,oBAAoB,EAAE5S,QAAQ,CAAE;IACpJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI8C,QAAQ,CAACxE,SAAS,CAACsU,eAAe,GAAG,YAAY;IAC7C,OAAO,CAACvS,iBAAiB,CAAC,IAAI,CAAC0S,YAAY,CAAC,GAAG,IAAI,CAACA,YAAY,CAAChI,WAAW,CAAC,CAAC,GAAG,WAAW;EAChG,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIjI,QAAQ,CAACxE,SAAS,CAAC0U,aAAa,GAAG,UAAUhK,IAAI,EAAE;IAC/C,IAAIiK,IAAI,GAAG,IAAI,CAACC,SAAS,CAACC,UAAU,CAACnK,IAAI,EAAE;MACvCoK,MAAM,EAAE,IAAI,CAACjO,iBAAiB,CAACgJ,UAAU;MACzCoE,IAAI,EAAE,MAAM;MAAEc,QAAQ,EAAE,IAAI,CAACT,eAAe,CAAC;IACjD,CAAC,CAAC;IACF,OAAOK,IAAI,CAACK,iBAAiB,CAAC,CAAC;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIxQ,QAAQ,CAACxE,SAAS,CAACiV,WAAW,GAAG,UAAUvK,IAAI,EAAE;IAC7C,OAAOA,IAAI,YAAYC,IAAI,GAAG,IAAIA,IAAI,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAID,IAAI,CAACD,IAAI,CAAC;EAC3E,CAAC;EACDlG,QAAQ,CAACxE,SAAS,CAACkV,eAAe,GAAG,YAAY;IAC7C,IAAI,IAAI,CAACT,YAAY,KAAK,SAAS,EAAE;MACjC,IAAI,CAACU,YAAY,GAAG,IAAInR,OAAO,CAAC,CAAC;IACrC,CAAC,MACI;MACD,IAAI,CAACmR,YAAY,GAAG,IAAIpR,SAAS,CAAC,CAAC;IACvC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIS,QAAQ,CAACxE,SAAS,CAACoV,UAAU,GAAG,UAAUjJ,IAAI,EAAEkJ,KAAK,EAAEC,YAAY,EAAEC,KAAK,EAAE;IACxE,IAAI3Q,KAAK,GAAG,IAAI;IAChB,IAAI7C,iBAAiB,CAACwT,KAAK,CAAC,EAAE;MAC1BA,KAAK,GAAG,IAAI,CAACrK,YAAY,CAACiB,IAAI,CAAC;IACnC;IACA,IAAI,CAACmJ,YAAY,IAAIC,KAAK,KAAK,IAAI,CAACvJ,SAAS,IAAI,IAAI,CAACvC,WAAW,KAAK0C,IAAI,IAAIoJ,KAAK,GAAG,CAAC,EAAE;MACrF;IACJ;IACA,IAAIC,YAAY,GAAG,IAAI,CAAC3O,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC4E,MAAM,GAAG,IAAI,CAAChC,WAAW;IAC5F,IAAIgM,IAAI,GAAG;MAAEC,WAAW,EAAE,cAAc;MAAEC,MAAM,EAAE,KAAK;MAAEN,KAAK,EAAEA;IAAM,CAAC;IACvE,IAAI,CAACO,OAAO,CAACxR,MAAM,CAACyR,WAAW,EAAEJ,IAAI,EAAE,UAAUK,UAAU,EAAE;MACzD,IAAI,CAACA,UAAU,CAACH,MAAM,EAAE;QACpB,IAAII,OAAO,GAAG;UACVC,MAAM,EAAE,MAAM;UAAEL,MAAM,EAAE,KAAK;UAAEM,WAAW,EAAErR,KAAK,CAAC6F,YAAY;UAAE+K,YAAY,EAAEA,YAAY;UAAE/L,WAAW,EAAE0C,IAAI;UAAEH,SAAS,EAAEuJ;QAC9H,CAAC;QACD3Q,KAAK,CAACgR,OAAO,CAACxR,MAAM,CAAC8R,UAAU,EAAEH,OAAO,EAAE,UAAUI,cAAc,EAAE;UAChE,IAAI,CAACA,cAAc,CAACR,MAAM,EAAE;YACxB,IAAIS,UAAU,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC1O,OAAO,CAACyE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAACzE,OAAO,CAAC8N,YAAY,CAAC,GAAG,CAAC;YACxH5Q,KAAK,CAACgD,aAAa,CAACyO,SAAS,GAAGD,UAAU,IAAIjK,IAAI,CAACzE,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAIyE,IAAI,CAACzE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxG9C,KAAK,CAACgD,aAAa,CAAC0O,GAAG,GAAGnK,IAAI,CAACzE,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI8N,YAAY,CAAC9N,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG9C,KAAK,CAACgD,aAAa,CAAC0O,GAAG;YAC7H1R,KAAK,CAACoH,SAAS,GAAGmK,cAAc,CAACnK,SAAS;YAC1CpH,KAAK,CAACmG,aAAa,CAAC;cAAEtB,WAAW,EAAE0C;YAAK,CAAC,EAAE,IAAI,CAAC;YAChD,IAAIvH,KAAK,CAACiF,YAAY,EAAE;cACpBjF,KAAK,CAACiF,YAAY,CAAC0M,gBAAgB,CAAC,CAAC;cACrC3R,KAAK,CAACiF,YAAY,CAAC2M,eAAe,CAAC5R,KAAK,CAAC6F,YAAY,CAAC;cACtD7F,KAAK,CAACiF,YAAY,CAAC4M,eAAe,CAAC,CAAC;YACxC;YACA7R,KAAK,CAAC4E,cAAc,CAAC5E,KAAK,CAAC6E,WAAW,CAAC;YACvC7E,KAAK,CAAC8R,aAAa,CAAC,CAAC;YACrBjB,IAAI,GAAG;cAAEC,WAAW,EAAE,cAAc;cAAEC,MAAM,EAAE,KAAK;cAAEN,KAAK,EAAEA;YAAM,CAAC;YACnEzQ,KAAK,CAACgR,OAAO,CAACxR,MAAM,CAACuS,cAAc,EAAElB,IAAI,CAAC;UAC9C,CAAC,MACI;YACD7Q,KAAK,CAAC6E,WAAW,GAAG+L,YAAY;UACpC;QACJ,CAAC,CAAC;MACN,CAAC,MACI;QACD5Q,KAAK,CAAC6E,WAAW,GAAG+L,YAAY;MACpC;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIhR,QAAQ,CAACxE,SAAS,CAAC4W,UAAU,GAAG,UAAUnM,YAAY,EAAE4K,KAAK,EAAE;IAC3D,IAAIzQ,KAAK,GAAG,IAAI;IAChB,IAAI6Q,IAAI,GAAG;MAAEC,WAAW,EAAE,cAAc;MAAEC,MAAM,EAAE,KAAK;MAAEN,KAAK,EAAEA;IAAM,CAAC;IACvE,IAAI,CAACO,OAAO,CAACxR,MAAM,CAACyR,WAAW,EAAEJ,IAAI,EAAE,UAAUK,UAAU,EAAE;MACzD,IAAI,CAACA,UAAU,CAACH,MAAM,EAAE;QACpB,IAAII,OAAO,GAAG;UACVC,MAAM,EAAE,MAAM;UAAEL,MAAM,EAAE,KAAK;UAAEkB,YAAY,EAAEjS,KAAK,CAAC6F,YAAY;UAAEwL,WAAW,EAAExL;QAClF,CAAC;QACD7F,KAAK,CAACgR,OAAO,CAACxR,MAAM,CAAC8R,UAAU,EAAEH,OAAO,EAAE,UAAUI,cAAc,EAAE;UAChE,IAAI,CAACA,cAAc,CAACR,MAAM,EAAE;YACxB/Q,KAAK,CAACgD,aAAa,CAACyO,SAAS,GAAGzR,KAAK,CAACkS,UAAU,CAACC,cAAc,CAAC,CAAC,IAAInS,KAAK,CAAC6E,WAAW,KAAK,cAAc;YACzG7E,KAAK,CAACqB,YAAY,CAACkQ,cAAc,CAACF,WAAW,CAAC;YAC9C,IAAIrR,KAAK,CAACiF,YAAY,EAAE;cACpBjF,KAAK,CAACiF,YAAY,CAAC2M,eAAe,CAACL,cAAc,CAACF,WAAW,CAAC;YAClE;YACA,IAAIrR,KAAK,CAAC6E,WAAW,KAAK,aAAa,IAAI7E,KAAK,CAACoS,iBAAiB,EAAE;cAChEpS,KAAK,CAACoS,iBAAiB,CAACC,eAAe,GAAG,IAAItM,IAAI,CAAC,EAAE,GAAG/F,KAAK,CAAC6F,YAAY,CAAC;YAC/E;YACA7F,KAAK,CAAC4E,cAAc,CAAC5E,KAAK,CAAC6E,WAAW,CAAC;YACvC7E,KAAK,CAAC8R,aAAa,CAAC,CAAC;YACrBjB,IAAI,GAAG;cAAEC,WAAW,EAAE,cAAc;cAAEC,MAAM,EAAE,KAAK;cAAEN,KAAK,EAAEA;YAAM,CAAC;YACnEzQ,KAAK,CAACgR,OAAO,CAACxR,MAAM,CAACuS,cAAc,EAAElB,IAAI,CAAC;UAC9C;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIjR,QAAQ,CAACxE,SAAS,CAACkX,YAAY,GAAG,UAAUxM,IAAI,EAAE;IAC9C,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;MAAEA,IAAI,GAAG,IAAI,CAACD,YAAY;IAAE;IACjD,IAAIK,OAAO,GAAG/I,iBAAiB,CAAC,IAAI,CAAC+I,OAAO,CAAC,GAAG,IAAIH,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,CAACG,OAAO;IACrF,IAAID,OAAO,GAAG9I,iBAAiB,CAAC,IAAI,CAAC8I,OAAO,CAAC,GAAG,IAAIF,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAACE,OAAO;IACnF,OAASH,IAAI,CAACE,OAAO,CAAC,CAAC,IAAIC,OAAO,CAACD,OAAO,CAAC,CAAC,IAAMF,IAAI,CAACE,OAAO,CAAC,CAAC,IAAIE,OAAO,CAACF,OAAO,CAAC,CAAE;EAC1F,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIpG,QAAQ,CAACxE,SAAS,CAACmX,cAAc,GAAG,UAAUzM,IAAI,EAAE;IAChD,OAAOA,IAAI,CAAC0M,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAIzM,IAAI,CAAC,EAAE,GAAG,IAAI,CAACF,YAAY,CAAC,CAAC2M,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9F,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI5S,QAAQ,CAACxE,SAAS,CAACqX,cAAc,GAAG,UAAU3M,IAAI,EAAE;IAChD,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;MAAEA,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IAAE;IAC1C,IAAI,IAAI,CAAC2M,QAAQ,EAAE;MACf,OAAO,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC9M,IAAI,EAAE,IAAI,CAAC6M,QAAQ,CAACE,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAACH,QAAQ,CAAC;IAC3F;IACA,OAAO5M,IAAI;EACf,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIlG,QAAQ,CAACxE,SAAS,CAAC0X,eAAe,GAAG,YAAY;IAC7C,IAAI,IAAI,CAACZ,UAAU,CAACC,cAAc,CAAC,CAAC,EAAE;MAClC,OAAO,IAAI,CAACtN,WAAW,KAAK,eAAe,IAAI,IAAI,CAACA,WAAW,KAAK,cAAc,GAAG,aAAa,GAAG,QAAQ;IACjH;IACA,OAAO,KAAK;EAChB,CAAC;EACDjF,QAAQ,CAACxE,SAAS,CAAC0W,aAAa,GAAG,YAAY;IAC3C,IAAI,CAAC,IAAI,CAACI,UAAU,CAACnS,OAAO,EAAE;MAC1B;IACJ;IACA,IAAIxD,SAAS,CAAC;MAAEwW,QAAQ,EAAE,GAAG;MAAEhH,IAAI,EAAE,QAAQ;MAAEiH,cAAc,EAAE;IAAS,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,CAACf,UAAU,CAACnS,OAAO,CAAC;EAC/G,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIH,QAAQ,CAACxE,SAAS,CAAC8X,eAAe,GAAG,YAAY;IAC7C,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAI,CAACrM,cAAc,CAAC,IAAI,CAAC;IACzB,KAAK,IAAI5F,EAAE,GAAG,CAAC,EAAEoG,EAAE,GAAG1M,MAAM,CAAC+U,IAAI,CAAC,IAAI,CAAC1I,WAAW,CAAC,EAAE/F,EAAE,GAAGoG,EAAE,CAACzL,MAAM,EAAEqF,EAAE,EAAE,EAAE;MACvE,IAAIqG,IAAI,GAAGD,EAAE,CAACpG,EAAE,CAAC;MACjBqG,IAAI,GAAIA,IAAI,KAAK,aAAa,IAAIA,IAAI,KAAK,cAAc,IAAIA,IAAI,KAAK,kBAAkB,GAAI,eAAe,GAAGA,IAAI;MAClH4L,OAAO,CAAC7S,IAAI,CAAC;QAAE8S,MAAM,EAAE7L,IAAI;QAAEsJ,IAAI,EAAE,CAAC,IAAI;MAAE,CAAC,CAAC;IAChD;IACA,IAAI,IAAI,CAACwC,gBAAgB,EAAE;MACvBF,OAAO,CAAC7S,IAAI,CAAC;QAAE8S,MAAM,EAAE,aAAa;QAAEvC,IAAI,EAAE,CAAC,IAAI;MAAE,CAAC,CAAC;IACzD;IACA,IAAI,IAAI,CAACyC,aAAa,EAAE;MACpBH,OAAO,CAAC7S,IAAI,CAAC;QAAE8S,MAAM,EAAE,QAAQ;QAAEvC,IAAI,EAAE,CAAC,IAAI;MAAE,CAAC,CAAC;IACpD;IACAsC,OAAO,CAAC7S,IAAI,CAAC;MAAE8S,MAAM,EAAE,aAAa;MAAEvC,IAAI,EAAE,CAAC,IAAI;IAAE,CAAC,CAAC;IACrDsC,OAAO,CAAC7S,IAAI,CAAC;MAAE8S,MAAM,EAAE,iBAAiB;MAAEvC,IAAI,EAAE,CAAC,IAAI;IAAE,CAAC,CAAC;IACzDsC,OAAO,CAAC7S,IAAI,CAAC;MAAE8S,MAAM,EAAE,iBAAiB;MAAEvC,IAAI,EAAE,CAAC,IAAI;IAAE,CAAC,CAAC;IACzDsC,OAAO,CAAC7S,IAAI,CAAC;MAAE8S,MAAM,EAAE,OAAO;MAAEvC,IAAI,EAAE,CAAC,IAAI;IAAE,CAAC,CAAC;IAC/C,OAAOsC,OAAO;EAClB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIvT,QAAQ,CAACxE,SAAS,CAACmY,SAAS,GAAG,YAAY;IACvC,IAAI,CAAC7S,UAAU,GAAG/D,OAAO,CAAC4I,QAAQ,IAAI7F,IAAI,CAAC8T,YAAY,CAAC,CAAC;IACzD,IAAI,CAACxD,SAAS,GAAG,IAAIpT,oBAAoB,CAAC,IAAI,CAAC6S,MAAM,CAAC;IACtD,IAAI,CAACkD,QAAQ,GAAG,IAAIrT,QAAQ,CAAC,CAAC;IAC9B,IAAI,IAAI,IAAInC,iBAAiB,CAAC,IAAI,CAAC6F,aAAa,CAAC,IAAI,CAAE,IAAI,CAACyQ,iBAAkB,EAAE;MAC5E,IAAI,CAACzQ,aAAa,GAAG;QACjB0Q,MAAM,EAAE,KAAK;QAAEjC,SAAS,EAAE,IAAI;QAAEkC,IAAI,EAAE,CAAC;QAAEjC,GAAG,EAAE,CAAC;QAAEkC,eAAe,EAAE,KAAK;QACvEC,kBAAkB,EAAE,KAAK;QAAEC,UAAU,EAAE,IAAI,CAAC5T,kBAAkB;QAAEkR,MAAM,EAAE,KAAK;QAC7EvF,OAAO,EAAE,KAAK;QAAEkI,aAAa,EAAE,IAAI;QAAEC,iBAAiB,EAAE,KAAK;QAAE/Q,aAAa,EAAE;MAClF,CAAC;IACL;IACA,IAAI,CAACgR,mBAAmB,GAAG,IAAI,CAACxB,cAAc,CAAC,CAAC;IAChD,IAAI,CAACyB,eAAe,GAAG;MACnBlI,SAAS,EAAE,IAAIjG,IAAI,CAAC,IAAI,CAACkO,mBAAmB,CAAC;MAC7ChI,OAAO,EAAE,IAAIlG,IAAI,CAAC,IAAI,CAACkO,mBAAmB,CAAC;MAC3C3H,QAAQ,EAAE;IACd,CAAC;IACD,IAAI,CAAC6H,eAAe,GAAG;MAAE1D,KAAK,EAAEhF,SAAS;MAAE1L,OAAO,EAAE0L;IAAU,CAAC;IAC/D,IAAI,CAAC2I,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACjH,SAAS,GAAG,IAAIpQ,IAAI,CAAC,IAAI,CAACsX,aAAa,CAAC,CAAC,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC7E,MAAM,CAAC;IAChF,IAAI,CAACG,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACU,eAAe,CAAC,CAAC;IACtB,IAAI,CAACiE,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACpQ,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACqQ,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAAC/R,oBAAoB,GAAG,EAAE;IAC9B,IAAI,CAACiE,cAAc,CAAC,CAAC;EACzB,CAAC;EACDlH,QAAQ,CAACxE,SAAS,CAACgZ,gBAAgB,GAAG,YAAY;IAC9C,IAAI,CAACE,aAAa,GAAG;MACjBO,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE,WAAW;MACrBC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE,aAAa;MACzBC,cAAc,EAAE,kBAAkB;MAClCC,WAAW,EAAE,cAAc;MAC3BC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,WAAW;MACrBC,cAAc,EAAE,4CAA4C;MAC5DC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,OAAO;MACd9E,MAAM,EAAE,QAAQ;MAChB+E,OAAO,EAAE,YAAY;MACrBC,MAAM,EAAE,QAAQ;MAChBC,WAAW,EAAE,cAAc;MAC3BC,mBAAmB,EAAE,wBAAwB;MAC7CC,aAAa,EAAE,gBAAgB;MAC/BC,YAAY,EAAE,eAAe;MAC7BC,IAAI,EAAE,MAAM;MACZC,UAAU,EAAE,eAAe;MAC3BC,SAAS,EAAE,YAAY;MACvBC,WAAW,EAAE,QAAQ;MACrBzK,OAAO,EAAE,SAAS;MAClB0K,QAAQ,EAAE,WAAW;MACrBC,WAAW,EAAE,cAAc;MAC3BC,UAAU,EAAE,aAAa;MACzBC,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE,6DAA6D;MAC1EC,aAAa,EAAE,6CAA6C;MAC5DC,qBAAqB,EAAE,sDAAsD;MAC7EC,QAAQ,EAAE,WAAW;MACrB7J,KAAK,EAAE,OAAO;MACdd,QAAQ,EAAE,UAAU;MACpBC,WAAW,EAAE,aAAa;MAC1BqG,QAAQ,EAAE,UAAU;MACpBxG,aAAa,EAAE,gBAAgB;MAC/BC,WAAW,EAAE,cAAc;MAC3B6K,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE,MAAM;MAClBC,YAAY,EAAE,QAAQ;MACtBC,YAAY,EAAE,QAAQ;MACtBC,UAAU,EAAE,YAAY;MACxBC,YAAY,EAAE,sCAAsC;MACpDC,iBAAiB,EAAE,qDAAqD,GACpE,kEAAkE;MACtEC,WAAW,EAAE,2EAA2E,GACpF,wFAAwF;MAC5FC,YAAY,EAAE,iEAAiE;MAC/EC,cAAc,EAAE,gFAAgF,GAC5F,6CAA6C;MACjDC,cAAc,EAAE,iBAAiB;MACjCC,cAAc,EAAE,iBAAiB;MACjCC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE,OAAO;MACdC,aAAa,EAAE,qDAAqD;MACpEC,gBAAgB,EAAE,oCAAoC;MACtDC,UAAU,EAAE,2DAA2D;MACvEC,YAAY,EAAE,sFAAsF;MACpGC,EAAE,EAAE,IAAI;MACRC,GAAG,EAAE,KAAK;MACVC,EAAE,EAAE,IAAI;MACRC,EAAE,EAAE,IAAI;MACRC,UAAU,EAAE,YAAY;MACxBC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,UAAU;MACpBC,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE,cAAc;MAC3BC,YAAY,EAAE,eAAe;MAC7BC,gBAAgB,EAAE,oBAAoB;MACtCC,aAAa,EAAE,gBAAgB;MAC/BC,YAAY,EAAE,eAAe;MAC7BC,kBAAkB,EAAE,kBAAkB;MACtCC,WAAW,EAAE,cAAc;MAC3BC,SAAS,EAAE,YAAY;MACvBC,SAAS,EAAE,YAAY;MACvBC,KAAK,EAAE,SAAS;MAChBC,mBAAmB,EAAE,wBAAwB;MAC7CC,qBAAqB,EAAE,0BAA0B;MACjDC,cAAc,EAAE,iBAAiB;MACjCC,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACD3Z,QAAQ,CAACxE,SAAS,CAACgH,UAAU,GAAG,YAAY;IACxC1F,YAAY,CAAC8c,GAAG,CAACC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;IAC/Dhd,YAAY,CAAC8c,GAAG,CAACC,MAAM,EAAE,mBAAmB,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;IAC1Ehd,YAAY,CAAC8c,GAAG,CAACG,QAAQ,EAAEhd,OAAO,CAACid,eAAe,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAAC;IAC/E,IAAI,IAAI,CAACC,cAAc,EAAE;MACrBpd,YAAY,CAAC8c,GAAG,CAACG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAACI,eAAe,EAAE,IAAI,CAAC;IACnE;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIna,QAAQ,CAACxE,SAAS,CAAC4e,mBAAmB,GAAG,YAAY;IACjD,IAAIC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAC3C,KAAK,IAAIhZ,EAAE,GAAG,CAAC,EAAEiZ,eAAe,GAAGF,aAAa,EAAE/Y,EAAE,GAAGiZ,eAAe,CAACte,MAAM,EAAEqF,EAAE,EAAE,EAAE;MACjF,IAAIkZ,IAAI,GAAGD,eAAe,CAACjZ,EAAE,CAAC;MAC9BkZ,IAAI,CAACC,eAAe,CAAC,UAAU,CAAC;IACpC;IACA9c,WAAW,CAAC0c,aAAa,EAAExa,GAAG,CAAC6a,mBAAmB,CAAC;IACnD,IAAI,IAAI,CAACzY,yBAAyB,IAAI,IAAI,CAACA,yBAAyB,CAACoY,aAAa,CAACpe,MAAM,GAAG,CAAC,EAAE;MAC3F,IAAI,CAACgG,yBAAyB,CAACoY,aAAa,GAAG,EAAE;IACrD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIra,QAAQ,CAACxE,SAAS,CAACmf,gBAAgB,GAAG,UAAUC,KAAK,EAAEC,SAAS,EAAEC,eAAe,EAAE;IAC/Eld,QAAQ,CAACgd,KAAK,EAAE/a,GAAG,CAAC6a,mBAAmB,CAAC;IACxC,IAAIG,SAAS,EAAE;MACXA,SAAS,CAACE,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;MACvCF,SAAS,CAACG,KAAK,CAAC;QAAEC,aAAa,EAAEH,eAAe,IAAI;MAAM,CAAC,CAAC;IAChE;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI9a,QAAQ,CAACxE,SAAS,CAAC0f,UAAU,GAAG,UAAU/a,OAAO,EAAE;IAC/C,IAAI,CAACia,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACO,gBAAgB,CAAC,CAACxa,OAAO,CAAC,EAAEA,OAAO,CAAC;EAC7C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIH,QAAQ,CAACxE,SAAS,CAAC2f,YAAY,GAAG,YAAY;IAC1C,OAAO,IAAI,CAAChb,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAACub,gBAAgB,CAAC;EACjE,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIpb,QAAQ,CAACxE,SAAS,CAAC6f,eAAe,GAAG,YAAY;IAC7C,OAAO,IAAI,CAAC/I,UAAU,CAACnS,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAACyb,mBAAmB,GAAG,QAAQ,CAAC;EAC1F,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACItb,QAAQ,CAACxE,SAAS,CAAC+f,YAAY,GAAG,YAAY;IAC1C,OAAO,EAAE,CAACrT,KAAK,CAAC7H,IAAI,CAAC,IAAI,CAACF,OAAO,CAACqb,gBAAgB,CAAC,GAAG,GAAG3b,GAAG,CAACyb,mBAAmB,GAAG,iBAAiB,GAAGzb,GAAG,CAAC4b,YAAY,GAAG,GAAG,CAAC,CAAC;EACnI,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIzb,QAAQ,CAACxE,SAAS,CAACkgB,mBAAmB,GAAG,YAAY;IACjD,OAAO,EAAE,CAACxT,KAAK,CAAC7H,IAAI,CAAC,IAAI,CAACF,OAAO,CAACqb,gBAAgB,CAAC,GAAG,GAAG3b,GAAG,CAAC8b,gBAAgB,CAAC,CAAC;EACnF,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI3b,QAAQ,CAACxE,SAAS,CAACogB,cAAc,GAAG,UAAUC,UAAU,EAAE3V,IAAI,EAAE;IAC5D,OAAO2V,UAAU,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC7Y,OAAO,CAAC,CAACgD,IAAI,CAAC;EAChD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIlG,QAAQ,CAACxE,SAAS,CAACwgB,YAAY,GAAG,UAAUC,EAAE,EAAE;IAC5C,IAAI,CAAC,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC/Y,OAAO,CAAC,IAAI,CAAC+B,WAAW,CAAC,GAAG,CAAC,CAAC,IACxFgX,EAAE,CAACpe,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAACsc,kBAAkB,CAAC,IAC7CF,EAAE,CAACpe,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAACuc,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC/Z,iBAAiB,CAACmH,SAAS,CAACC,MAAM,EAAE;MAC3F,OAAO,IAAI;IACf;IACA,IAAI,IAAI,CAAC6I,UAAU,CAACC,cAAc,CAAC,CAAC,IAAI,IAAI,CAAClQ,iBAAiB,CAACkJ,UAAU,CAACtP,MAAM,GAAG,CAAC,IAChF,IAAI,CAACoG,iBAAiB,CAACkJ,UAAU,CAACrD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACjB,MAAM,KAAK,MAAM,EAAE;MAClE,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIjH,QAAQ,CAACxE,SAAS,CAAC6gB,kBAAkB,GAAG,UAAUJ,EAAE,EAAE;IAClD,IAAIK,UAAU;IACd,IAAI,CAAC/e,iBAAiB,CAAC0e,EAAE,CAAC,EAAE;MACxBK,UAAU,GAAGL,EAAE,CAACM,YAAY,CAAC,WAAW,CAAC;IAC7C;IACA,IAAI,CAAChf,iBAAiB,CAAC+e,UAAU,CAAC,EAAE;MAChC,IAAIE,QAAQ,GAAGzV,QAAQ,CAACuV,UAAU,EAAE,EAAE,CAAC;MACvC,IAAIpW,IAAI,GAAG,IAAIC,IAAI,CAACqW,QAAQ,CAAC;MAC7B,OAAOtW,IAAI;IACf;IACA,OAAO2F,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI7L,QAAQ,CAACxE,SAAS,CAACihB,gBAAgB,GAAG,UAAUC,QAAQ,EAAE3I,IAAI,EAAEjC,GAAG,EAAE;IACjE,IAAI3R,OAAO,GAAG4Z,QAAQ,CAAC4C,gBAAgB,CAAC5I,IAAI,EAAEjC,GAAG,CAAC;IAClD,IAAI8K,aAAa;IACjB,IAAIzc,OAAO,EAAE;MACTyc,aAAa,GAAGzc,OAAO,CAAC0c,OAAO,CAACH,QAAQ,CAAC;IAC7C;IACA,OAAQE,aAAa,GAAI,CAACA,aAAa,CAAC,GAAG,IAAI;EACnD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI5c,QAAQ,CAACxE,SAAS,CAACshB,qBAAqB,GAAG,YAAY;IACnD,OAAO,IAAI,CAACnP,oBAAoB;EACpC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI3N,QAAQ,CAACxE,SAAS,CAACuhB,oBAAoB,GAAG,YAAY;IAClD,OAAO,IAAI,CAAClP,mBAAmB;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI7N,QAAQ,CAACxE,SAAS,CAACwhB,sBAAsB,GAAG,YAAY;IACpD,OAAO,IAAI,CAAClP,qBAAqB;EACrC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI9N,QAAQ,CAACxE,SAAS,CAACyhB,eAAe,GAAG,YAAY;IAC7C,OAAO,IAAI,CAAClP,cAAc;EAC9B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI/N,QAAQ,CAACxE,SAAS,CAAC0hB,qBAAqB,GAAG,YAAY;IACnD,OAAO,IAAI,CAAClP,oBAAoB;EACpC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIhO,QAAQ,CAACxE,SAAS,CAAC2hB,oBAAoB,GAAG,YAAY;IAClD,OAAO,IAAI,CAAClP,mBAAmB;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIjO,QAAQ,CAACxE,SAAS,CAAC4hB,oBAAoB,GAAG,YAAY;IAClD,OAAO,IAAI,CAAClP,mBAAmB;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIlO,QAAQ,CAACxE,SAAS,CAAC6hB,oBAAoB,GAAG,YAAY;IAClD,OAAO,IAAI,CAAClP,mBAAmB;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACInO,QAAQ,CAACxE,SAAS,CAAC8hB,sBAAsB,GAAG,YAAY;IACpD,OAAO,IAAI,CAAClP,qBAAqB;EACrC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIpO,QAAQ,CAACxE,SAAS,CAAC+hB,uBAAuB,GAAG,YAAY;IACrD,OAAO,IAAI,CAAC/O,sBAAsB;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIxO,QAAQ,CAACxE,SAAS,CAACgiB,wBAAwB,GAAG,YAAY;IACtD,OAAO,IAAI,CAACjP,uBAAuB;EACvC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIvO,QAAQ,CAACxE,SAAS,CAACiiB,iBAAiB,GAAG,YAAY;IAC/C,OAAO,IAAI,CAAC/O,gBAAgB;EAChC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI1O,QAAQ,CAACxE,SAAS,CAACkiB,uBAAuB,GAAG,YAAY;IACrD,OAAO,IAAI,CAAC9O,sBAAsB;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI5O,QAAQ,CAACxE,SAAS,CAACmiB,uBAAuB,GAAG,YAAY;IACrD,OAAO,IAAI,CAAC7O,sBAAsB;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI9O,QAAQ,CAACxE,SAAS,CAACoiB,2BAA2B,GAAG,YAAY;IACzD,OAAO,IAAI,CAAC5O,0BAA0B;EAC1C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIhP,QAAQ,CAACxE,SAAS,CAACqiB,4BAA4B,GAAG,YAAY;IAC1D,OAAO,IAAI,CAAC1O,2BAA2B;EAC3C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACInP,QAAQ,CAACxE,SAAS,CAACsiB,2BAA2B,GAAG,YAAY;IACzD,OAAO,IAAI,CAACzO,0BAA0B;EAC1C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrP,QAAQ,CAACxE,SAAS,CAACuiB,yBAAyB,GAAG,YAAY;IACvD,OAAO,IAAI,CAAC1P,wBAAwB;EACxC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrO,QAAQ,CAACxE,SAAS,CAACwiB,uBAAuB,GAAG,YAAY;IACrD,OAAO,IAAI,CAAC1P,sBAAsB;EACtC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACItO,QAAQ,CAACxE,SAAS,CAACyiB,gBAAgB,GAAG,YAAY;IAC9C,IAAIC,QAAQ,GAAG;MACXC,MAAM,EAAE,IAAI,CAACvd,SAAS,GAAG,iBAAiB,GAAG,kBAAkB;MAC/Dwd,OAAO,EAAE,IAAI,CAACxd,SAAS,GAAG,aAAa,GAAG,cAAc;MACxDyd,SAAS,EAAE,IAAI,CAACzd,SAAS,GAAG,kBAAkB,GAAG,iBAAiB;MAClE0d,UAAU,EAAE,IAAI,CAAC1d,SAAS,GAAG,cAAc,GAAG;IAClD,CAAC;IACD,OAAOsd,QAAQ;EACnB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIle,QAAQ,CAACxE,SAAS,CAAC+iB,qBAAqB,GAAG,YAAY;IACnD,IAAIC,UAAU,GAAG,IAAI,CAACre,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAAC4e,eAAe,CAAC;IACtE,IAAI,CAAClhB,iBAAiB,CAACihB,UAAU,CAAC,EAAE;MAChC1gB,MAAM,CAAC0gB,UAAU,CAAC;IACtB;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIxe,QAAQ,CAACxE,SAAS,CAACkjB,eAAe,GAAG,UAAUC,YAAY,EAAE;IACzD,IAAI,CAACphB,iBAAiB,CAACohB,YAAY,CAAC,IAAIA,YAAY,KAAK,EAAE,EAAE;MACzD,IAAIC,YAAY,GAAG9e,IAAI,CAAC+e,SAAS,CAAC,IAAI1Y,IAAI,CAAC,IAAI,CAACkO,mBAAmB,CAAC,IAAI,IAAI,CAACxB,cAAc,CAAC,CAAC,CAAC;MAC9F,IAAIiM,UAAU,GAAGH,YAAY,CAACtd,KAAK,CAAC,GAAG,CAAC;MACxC,IAAIyd,UAAU,CAAC7iB,MAAM,KAAK,CAAC,EAAE;QACzB2iB,YAAY,CAAChM,QAAQ,CAAC7L,QAAQ,CAAC+X,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE/X,QAAQ,CAAC+X,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MACtF;MACA,OAAOF,YAAY;IACvB;IACA,OAAO,IAAI;EACf,CAAC;EACD5e,QAAQ,CAACxE,SAAS,CAACye,eAAe,GAAG,UAAUhJ,IAAI,EAAE;IACjD,IAAI,CAAC8N,MAAM,CAACnf,MAAM,CAACof,aAAa,EAAE;MAAEnO,KAAK,EAAEI;IAAK,CAAC,CAAC;EACtD,CAAC;EACDjR,QAAQ,CAACxE,SAAS,CAAC2e,eAAe,GAAG,UAAUlJ,IAAI,EAAE;IACjD,IAAI,CAAC8N,MAAM,CAACnf,MAAM,CAACqf,aAAa,EAAE;MAAEpO,KAAK,EAAEI;IAAK,CAAC,CAAC;EACtD,CAAC;EACDjR,QAAQ,CAACxE,SAAS,CAACse,gBAAgB,GAAG,YAAY;IAC9C,IAAIvc,iBAAiB,CAAC,IAAI,CAAC+U,UAAU,CAAC,IAAK,CAAC,IAAI,CAACxR,UAAU,IAAIhB,IAAI,CAACof,QAAQ,CAAC,CAAC,KAAKnF,QAAQ,CAACoF,aAAa,KACjGpF,QAAQ,CAACoF,aAAa,CAACthB,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAACuf,aAAa,CAAC,IAC5DrF,QAAQ,CAACoF,aAAa,CAACthB,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAACwf,oBAAoB,CAAC,CAAE,IAAI,IAAI,CAACjc,aAAa,CAACkc,SAAS,EAAE;MAC3G;IACJ;IACA,IAAI,IAAI,CAACC,mBAAmB,IAAI,IAAI,CAACjN,UAAU,CAACC,cAAc,CAAC,CAAC,EAAE;MAC9D,IAAI,CAACgN,mBAAmB,CAACC,aAAa,CAAC,CAAC;IAC5C;IACA,IAAI,IAAI,CAACnd,iBAAiB,CAACmH,SAAS,CAACC,MAAM,IAAI,IAAI,CAAC6I,UAAU,EAAE;MAC5D,IAAI,CAACA,UAAU,CAACmN,oBAAoB,CAAC,CAAC;IAC1C;IACA,IAAI,IAAI,CAAClQ,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,CAACmQ,YAAY,CAAC,CAAC;IAClC;IACA5f,IAAI,CAAC6f,mBAAmB,CAAC,CAAC;IAC1B,IAAI,IAAI,CAAC1a,WAAW,KAAK,OAAO,IAAM,IAAI,CAACA,WAAW,KAAK,QAAQ,IAAI,IAAI,CAACA,WAAW,KAAK,aAAa,IAClG,CAAC,IAAI,CAAC5C,iBAAiB,CAACmH,SAAS,CAACC,MAAO,IAAI,IAAI,CAAC6I,UAAU,CAACC,cAAc,CAAC,CAAC,EAAE;MAClF,IAAI,CAACD,UAAU,CAACsN,aAAa,CAAC,CAAC;MAC/B,IAAI,CAACb,MAAM,CAACnf,MAAM,CAACigB,cAAc,EAAE;QAAEC,aAAa,EAAE,IAAI,CAAC7B,gBAAgB,CAAC,CAAC;QAAE8B,qBAAqB,EAAE;MAAK,CAAC,CAAC;MAC3G,IAAIC,eAAe,GAAG,KAAK;MAC3B,IAAI,IAAI,CAAC3d,iBAAiB,CAACsJ,iBAAiB,IAAI,IAAI,CAAC4T,mBAAmB,IAAI,IAAI,CAACA,mBAAmB,CAACS,eAAe,EAAE;QAClHA,eAAe,GAAG,IAAI,CAACT,mBAAmB,CAACS,eAAe;QAC1D,IAAI,CAACT,mBAAmB,CAACS,eAAe,GAAG,KAAK;MACpD;MACA,IAAI,CAACC,aAAa,CAACD,eAAe,CAAC;MACnC,IAAI,IAAI,CAACT,mBAAmB,IAAI,CAAC,IAAI,CAACA,mBAAmB,CAACW,gBAAgB,EAAE;QACxE,IAAIC,OAAO,GAAG,IAAI,CAAChgB,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAACugB,0BAA0B,CAAC;QAC9E,IAAIC,OAAO,GAAG,IAAI,CAAClgB,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAACygB,kBAAkB,CAAC;QACtE,IAAI,CAACf,mBAAmB,CAACW,gBAAgB,GAAG,IAAI;QAChDtiB,QAAQ,CAAC,CAACyiB,OAAO,EAAEF,OAAO,CAAC,EAAE,cAAc,CAAC;MAChD;IACJ,CAAC,MACI;MACD,IAAI,CAACpB,MAAM,CAACnf,MAAM,CAAC2gB,YAAY,EAAE,CAAC,CAAC,CAAC;IACxC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIvgB,QAAQ,CAACxE,SAAS,CAACoS,cAAc,GAAG,UAAU7C,QAAQ,EAAE;IACpD,IAAIA,QAAQ,EAAE;MACV,IAAI;QACA,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;UAChC,OAAO1N,OAAO,CAAC0N,QAAQ,CAAC;QAC5B,CAAC,MACI;UACD,IAAIgP,QAAQ,CAACyB,gBAAgB,CAACzQ,QAAQ,CAAC,CAAC9O,MAAM,EAAE;YAC5C,OAAOoB,OAAO,CAAC0c,QAAQ,CAACtX,aAAa,CAACsI,QAAQ,CAAC,CAAC1G,SAAS,CAACmc,IAAI,CAAC,CAAC,CAAC;UACrE,CAAC,MACI;YACD,OAAOnjB,OAAO,CAAC0N,QAAQ,CAAC;UAC5B;QACJ;MACJ,CAAC,CACD,OAAO0V,KAAK,EAAE;QACV,OAAOpjB,OAAO,CAAC0N,QAAQ,CAAC;MAC5B;IACJ;IACA,OAAOc,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI7L,QAAQ,CAACxE,SAAS,CAAC8e,gBAAgB,GAAG,YAAY;IAC9C,OAAO,EAAE,CAACpS,KAAK,CAAC7H,IAAI,CAAC,IAAI,CAACF,OAAO,CAACqb,gBAAgB,CAAC,GAAG,GAAG3b,GAAG,CAAC6a,mBAAmB,CAAC,CAAC;EACtF,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI1a,QAAQ,CAACxE,SAAS,CAACklB,qBAAqB,GAAG,UAAU7P,KAAK,EAAE3E,OAAO,EAAE;IACjE,IAAIyU,YAAY;IAChB,IAAI,IAAI,CAACpR,UAAU,IAAI,IAAI,CAAClN,iBAAiB,CAACyH,KAAK,CAACvF,SAAS,CAACtI,MAAM,GAAG,CAAC,EAAE;MACtE,IAAI2kB,YAAY,GAAG,aAAa;MAChCD,YAAY,GAAG,IAAI,CAACpR,UAAU,CAACsR,eAAe,CAAC;QAAEhQ,KAAK,EAAEA;MAAM,CAAC,EAAE,OAAO,CAAC,GAAG+P,YAAY;IAC5F;IACA,IAAIE,aAAa,GAAI5U,OAAO,IAAK2E,KAAK,CAAC,IAAI,CAAC/E,WAAW,CAACI,OAAO,CAAC,IAAI,IAAI,CAACpB,aAAa,CAACkB,MAAM,CAACE,OAAO,CAAC6U,OAAS;IAC/G,IAAIC,cAAc,GAAInQ,KAAK,CAAC,IAAI,CAAC/E,WAAW,CAACU,QAAQ,CAAC,IAAI,IAAI,CAAC1B,aAAa,CAACkB,MAAM,CAACQ,QAAQ,CAACuU,OAAQ;IACrG,IAAIE,QAAQ,GAAG,MAAM;IACrB,IAAIC,aAAa,GAAG,IAAI,CAAC9Q,SAAS,CAACC,UAAU,CAACQ,KAAK,CAAC,IAAI,CAAC/E,WAAW,CAACM,SAAS,CAAC,EAAE;MAC7EqD,IAAI,EAAE,UAAU;MAAEwR,QAAQ,EAAEA,QAAQ;MAAE1Q,QAAQ,EAAE,IAAI,CAACT,eAAe,CAAC;IACzE,CAAC,CAAC;IACF,IAAIqR,WAAW,GAAG,IAAI,CAAC/Q,SAAS,CAACC,UAAU,CAACQ,KAAK,CAAC,IAAI,CAAC/E,WAAW,CAACO,OAAO,CAAC,EAAE;MACzEoD,IAAI,EAAE,UAAU;MAAEwR,QAAQ,EAAEA,QAAQ;MAAE1Q,QAAQ,EAAE,IAAI,CAACT,eAAe,CAAC;IACzE,CAAC,CAAC;IACF,IAAIsR,kBAAkB,GAAGN,aAAa,GAAG,GAAG,GAAG,IAAI,CAACvT,SAAS,CAACC,WAAW,CAAC,WAAW,CAAC,GAAG,GAAG,GACtF0T,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC3T,SAAS,CAACC,WAAW,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG2T,WAAW;IACnF,IAAIR,YAAY,EAAE;MACdS,kBAAkB,GAAGT,YAAY,GAAG,GAAG,GAAGS,kBAAkB;IAChE;IACA,IAAIJ,cAAc,IAAIA,cAAc,KAAK,EAAE,EAAE;MACzCI,kBAAkB,GAAGA,kBAAkB,GAAG,GAAG,GAAG,IAAI,CAAC7T,SAAS,CAACC,WAAW,CAAC,UAAU,CAAC,GAAG,GAAG,GAAGwT,cAAc;IACjH;IACA,IAAInQ,KAAK,CAAC,IAAI,CAAC/E,WAAW,CAACc,cAAc,CAAC,IAAIiE,KAAK,CAAC,IAAI,CAAC/E,WAAW,CAACc,cAAc,CAAC,KAAK,EAAE,IACpFiE,KAAK,CAAC,IAAI,CAAC/E,WAAW,CAACC,EAAE,CAAC,KAAK8E,KAAK,CAAC,IAAI,CAAC/E,WAAW,CAACa,YAAY,CAAC,EAAE;MACxEyU,kBAAkB,GAAGA,kBAAkB,GAAG,GAAG,GAAG,IAAI,CAAC7T,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC;IAChG;IACA,OAAO4T,kBAAkB;EAC7B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIphB,QAAQ,CAACxE,SAAS,CAAC6lB,kBAAkB,GAAG,UAAUC,KAAK,EAAEC,KAAK,EAAE;IAC5D,IAAIC,kBAAkB,GAAG,EAAE;IAC3B,IAAIC,WAAW,GAAG;MAAE1N,IAAI,EAAE,KAAK;MAAE2N,KAAK,EAAE,KAAK;MAAE5P,GAAG,EAAE,KAAK;MAAE6P,MAAM,EAAE;IAAM,CAAC;IAC1E,IAAIC,cAAc,GAAG,IAAI,CAACzhB,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAACygB,kBAAkB,CAAC,CAAC9a,qBAAqB,CAAC,CAAC;IACrG,IAAK8b,KAAK,GAAGM,cAAc,CAAC9P,GAAG,GAAG0P,kBAAkB,GAAG3H,MAAM,CAACgI,WAAW,IACpEP,KAAK,GAAGM,cAAc,CAAC9P,GAAG,GAAG+H,MAAM,CAACgI,WAAY,EAAE;MACnDJ,WAAW,CAAC3P,GAAG,GAAG,IAAI;IAC1B;IACA,IAAKwP,KAAK,GAAIM,cAAc,CAACD,MAAM,GAAGH,kBAAkB,GAAI3H,MAAM,CAACgI,WAAW,IACzEP,KAAK,GAAGM,cAAc,CAACD,MAAM,GAAG9H,MAAM,CAACgI,WAAY,EAAE;MACtDJ,WAAW,CAACE,MAAM,GAAG,IAAI;IAC7B;IACA,IAAKJ,KAAK,GAAGK,cAAc,CAAC7N,IAAI,GAAGyN,kBAAkB,GAAG3H,MAAM,CAACiI,WAAW,IACrEP,KAAK,GAAGK,cAAc,CAAC7N,IAAI,GAAG8F,MAAM,CAACiI,WAAY,EAAE;MACpDL,WAAW,CAAC1N,IAAI,GAAG,IAAI;IAC3B;IACA,IAAKwN,KAAK,GAAIK,cAAc,CAACF,KAAK,GAAGF,kBAAkB,GAAI3H,MAAM,CAACiI,WAAW,IACxEP,KAAK,GAAGK,cAAc,CAACF,KAAK,GAAG7H,MAAM,CAACiI,WAAY,EAAE;MACrDL,WAAW,CAACC,KAAK,GAAG,IAAI;IAC5B;IACA,OAAOD,WAAW;EACtB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIzhB,QAAQ,CAACxE,SAAS,CAACumB,oBAAoB,GAAG,UAAUC,KAAK,EAAE;IACvD,IAAIC,UAAU;IACd,IAAI,IAAI,CAACC,QAAQ,KAAK,UAAU,EAAE;MAC9B,IAAIC,cAAc,GAAGriB,IAAI,CAACsiB,eAAe,CAACJ,KAAK,CAAC9Z,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACmB,cAAc,CAAC;MAClF4Y,UAAU,GAAG,IAAI,CAAC7R,SAAS,CAACiS,YAAY,CAACviB,IAAI,CAACwiB,aAAa,CAACH,cAAc,CAAC,CAAC;IAChF,CAAC,MACI,IAAI,IAAI,CAACD,QAAQ,KAAK,kBAAkB,EAAE;MAC3C,IAAIK,aAAa,GAAGziB,IAAI,CAAC0iB,gBAAgB,CAACR,KAAK,CAAC9Z,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACmB,cAAc,CAAC;MAClF,IAAIoZ,YAAY,GAAG3iB,IAAI,CAACsiB,eAAe,CAACJ,KAAK,CAAC9Z,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACmB,cAAc,CAAC;MAChF,IAAIqZ,WAAW,GAAG5iB,IAAI,CAAC6iB,iBAAiB,CAACJ,aAAa,EAAEE,YAAY,CAAC;MACrER,UAAU,GAAG,IAAI,CAAC7R,SAAS,CAACiS,YAAY,CAACviB,IAAI,CAACwiB,aAAa,CAACI,WAAW,CAAC,CAAC;IAC7E,CAAC,MACI,IAAI,IAAI,CAACR,QAAQ,KAAK,eAAe,EAAE;MACxC,IAAIK,aAAa,GAAGziB,IAAI,CAAC0iB,gBAAgB,CAACR,KAAK,CAAC9Z,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACmB,cAAc,CAAC;MAClF4Y,UAAU,GAAG,IAAI,CAAC7R,SAAS,CAACiS,YAAY,CAACviB,IAAI,CAACwiB,aAAa,CAACC,aAAa,CAAC,CAAC;IAC/E;IACA,OAAON,UAAU;EACrB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIjiB,QAAQ,CAACxE,SAAS,CAAConB,0BAA0B,GAAG,UAAUC,IAAI,EAAE5G,EAAE,EAAE;IAChE,IAAI,IAAI,CAAC5Z,iBAAiB,CAAC6G,oBAAoB,EAAE;MAC7C,IAAI4Z,UAAU,GAAG,IAAI,CAAC3iB,OAAO,CAAC4L,EAAE,GAAG,GAAG;MACtC,IAAIpF,QAAQ,GAAG,IAAI,CAACtE,iBAAiB,CAAC4G,wBAAwB;MAC9D,IAAI8Z,UAAU,GAAGD,UAAU,GAAGnc,QAAQ,GAAG,sBAAsB;MAC/D,IAAIqc,cAAc,GAAG,EAAE,CAAC9a,KAAK,CAAC7H,IAAI,CAAC,IAAI,CAAC2d,uBAAuB,CAAC,CAAC,CAAC6E,IAAI,EAAE,IAAI,EAAE,sBAAsB,EAAEE,UAAU,EAAE,KAAK,EAAElX,SAAS,EAAEA,SAAS,EAAE,IAAI,CAACoX,IAAI,CAAC,CAAC;MAC1JpmB,MAAM,CAACmmB,cAAc,EAAE/G,EAAE,CAAC;IAC9B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIjc,QAAQ,CAACxE,SAAS,CAAC0nB,wBAAwB,GAAG,YAAY;IACtD,OAAO,IAAI,CAAC7gB,iBAAiB,CAACyH,KAAK,CAACvF,SAAS,CAACtI,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAACoG,iBAAiB,CAACyH,KAAK,CAACG,cAAc,IACpG,CAAC,IAAI,CAACkZ,aAAa,IAAI,CAAC,IAAI,CAAC5D,mBAAmB,IAAI,IAAI,CAACld,iBAAiB,CAACyH,KAAK,CAACE,SAAS;EAClG,CAAC;EACDhK,QAAQ,CAACxE,SAAS,CAAC4nB,YAAY,GAAG,YAAY;IAC1CtmB,YAAY,CAACgB,MAAM,CAAC+b,MAAM,EAAE,QAAQ,EAAE,IAAI,CAACC,gBAAgB,CAAC;IAC5Dhd,YAAY,CAACgB,MAAM,CAAC+b,MAAM,EAAE,mBAAmB,EAAE,IAAI,CAACC,gBAAgB,CAAC;IACvEhd,YAAY,CAACgB,MAAM,CAACic,QAAQ,EAAEhd,OAAO,CAACid,eAAe,EAAE,IAAI,CAACC,eAAe,CAAC;IAC5End,YAAY,CAACgB,MAAM,CAACic,QAAQ,EAAE,OAAO,EAAE,IAAI,CAACI,eAAe,CAAC;EAChE,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIna,QAAQ,CAACxE,SAAS,CAACiZ,aAAa,GAAG,YAAY;IAC3C,OAAO,UAAU;EACrB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIzU,QAAQ,CAACxE,SAAS,CAAC6nB,cAAc,GAAG,YAAY;IAC5C,OAAO,IAAI,CAACC,YAAY,CAAC,CAAC,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,YAAY,EAAE,oBAAoB,CAAC,CAAC;EAC9G,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACItjB,QAAQ,CAACxE,SAAS,CAAC+nB,iBAAiB,GAAG,UAAUC,OAAO,EAAEC,OAAO,EAAE;IAC/D,IAAI,IAAI,CAAC9f,OAAO,IAAIpG,iBAAiB,CAAC,IAAI,CAAC+U,UAAU,CAAC,EAAE;MACpD;IACJ;IACA,IAAIoR,KAAK,GAAG;MACRC,SAAS,EAAE,KAAK;MAAEC,UAAU,EAAE,KAAK;MAAEC,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAE,KAAK;MAAEC,QAAQ,EAAE,KAAK;MAAEC,aAAa,EAAE;IACvG,CAAC;IACD,KAAK,IAAI1iB,EAAE,GAAG,CAAC,EAAEoG,EAAE,GAAG1M,MAAM,CAAC+U,IAAI,CAACyT,OAAO,CAAC,EAAEliB,EAAE,GAAGoG,EAAE,CAACzL,MAAM,EAAEqF,EAAE,EAAE,EAAE;MAC9D,IAAI2iB,IAAI,GAAGvc,EAAE,CAACpG,EAAE,CAAC;MACjB,QAAQ2iB,IAAI;QACR,KAAK,OAAO;UACR,IAAI,CAAC/c,cAAc,CAAC,CAAC;UACrB,IAAI,IAAI,CAAC7B,YAAY,EAAE;YACnB,IAAI,CAACA,YAAY,CAAC6e,WAAW,CAAC,CAAC;UACnC;UACAR,KAAK,CAACI,MAAM,GAAG,IAAI;UACnB;QACJ,KAAK,aAAa;UACdJ,KAAK,CAACI,MAAM,GAAG,IAAI;UACnB;QACJ,KAAK,SAAS;QACd,KAAK,SAAS;QACd,KAAK,cAAc;UACfJ,KAAK,CAACG,MAAM,GAAG,IAAI;UACnB;QACJ,KAAK,YAAY;UACb,IAAI,CAACxhB,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;UACpD,IAAI,IAAI,CAAC+C,YAAY,EAAE;YACnB,IAAI,CAACA,YAAY,CAAC8e,eAAe,CAAC,CAAC;UACvC;UACA;QACJ,KAAK,eAAe;QACpB,KAAK,cAAc;UACf,IAAI,CAAChf,mBAAmB,CAAC,CAAC;UAC1B,IAAIqe,OAAO,CAACpe,aAAa,EAAE;YACvB,IAAI,CAACC,YAAY,GAAG,IAAIlH,cAAc,CAAC,IAAI,CAAC;YAC5C,IAAI,CAACkH,YAAY,CAAC8e,eAAe,CAAC,CAAC;UACvC;UACA,IAAI,CAACpF,MAAM,CAACnf,MAAM,CAACigB,cAAc,EAAE;YAAEC,aAAa,EAAE,IAAI,CAAC7B,gBAAgB,CAAC;UAAE,CAAC,CAAC;UAC9E,IAAI,IAAI,CAAC3L,UAAU,CAACC,cAAc,CAAC,CAAC,EAAE;YAClC,IAAI,CAAC0N,aAAa,CAAC,KAAK,CAAC;UAC7B;UACA;QACJ,KAAK,UAAU;UACX,IAAImE,IAAI,CAACC,SAAS,CAACZ,OAAO,CAACpZ,QAAQ,CAAC,KAAK+Z,IAAI,CAACC,SAAS,CAACb,OAAO,CAACnZ,QAAQ,CAAC,EAAE;YACvEqZ,KAAK,CAACK,QAAQ,GAAG,IAAI;UACzB;UACA;QACJ,KAAK,aAAa;QAClB,KAAK,WAAW;QAChB,KAAK,SAAS;QACd,KAAK,WAAW;QAChB,KAAK,UAAU;QACf,KAAK,YAAY;QACjB,KAAK,gBAAgB;QACrB,KAAK,eAAe;UAChBL,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;QACJ,KAAK,QAAQ;QACb,KAAK,cAAc;UACf,IAAI,CAAC3T,SAAS,GAAG,IAAIpT,oBAAoB,CAAC,IAAI,CAAC6S,MAAM,CAAC;UACtD,IAAI,CAACtC,SAAS,GAAG,IAAIpQ,IAAI,CAAC,IAAI,CAACsX,aAAa,CAAC,CAAC,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC7E,MAAM,CAAC;UAChF,IAAI,CAACG,iBAAiB,CAAC,CAAC;UACxB,IAAI,CAACU,eAAe,CAAC,CAAC;UACtBgT,KAAK,CAACC,SAAS,GAAG,IAAI;UACtB;QACJ,KAAK,gBAAgB;UACjB,IAAI,CAACthB,iBAAiB,CAACgH,cAAc,GAAGma,OAAO,CAACna,cAAc;UAC9D,IAAI,IAAI,CAACxE,WAAW,EAAE;YAClB,IAAI,CAACA,WAAW,CAACyf,uBAAuB,CAAC,CAAC;UAC9C;UACAZ,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;QACJ,KAAK,mBAAmB;UACpB,IAAI,IAAI,CAAC1hB,iBAAiB,CAACmH,SAAS,CAACC,MAAM,IAAI,IAAI,CAAC6I,UAAU,EAAE;YAC5D,IAAI,CAACA,UAAU,CAACmN,oBAAoB,CAAC,CAAC;UAC1C;UACA;QACJ,KAAK,oBAAoB;UACrB,IAAI,CAACpd,iBAAiB,CAAC+F,kBAAkB,GAAGob,OAAO,CAACpb,kBAAkB;UACtE,IAAI,CAACuF,oBAAoB,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC+F,kBAAkB,CAAC;UAC1Fsb,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;QACJ,KAAK,cAAc;UACf,IAAI,CAAC1hB,iBAAiB,CAACqG,YAAY,GAAG8a,OAAO,CAAC9a,YAAY;UAC1D,IAAI,CAACqF,cAAc,GAAG,IAAI,CAACH,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACqG,YAAY,CAAC;UAC9Egb,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;QACJ,KAAK,oBAAoB;UACrB,IAAI,CAAC1hB,iBAAiB,CAACiG,kBAAkB,GAAGkb,OAAO,CAAClb,kBAAkB;UACtE,IAAI,CAAC0F,oBAAoB,GAAG,IAAI,CAACJ,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACiG,kBAAkB,CAAC;UAC1Fob,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;QACJ,KAAK,mBAAmB;UACpB,IAAI,CAAC1hB,iBAAiB,CAACmG,iBAAiB,GAAGgb,OAAO,CAAChb,iBAAiB;UACpE,IAAI,CAACyF,mBAAmB,GAAG,IAAI,CAACL,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACmG,iBAAiB,CAAC;UACxF,IAAI,IAAI,CAACnD,YAAY,EAAE;YACnB,IAAI,CAACA,YAAY,CAAC8e,eAAe,CAAC,CAAC;UACvC;UACA;QACJ,KAAK,mBAAmB;UACpB,IAAI,CAAC9hB,iBAAiB,CAACuG,iBAAiB,GAAG4a,OAAO,CAAC5a,iBAAiB;UACpE,IAAI,CAACiF,mBAAmB,GAAG,IAAI,CAACD,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACuG,iBAAiB,CAAC;UACxF8a,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;QACJ,KAAK,qBAAqB;UACtB,IAAI,CAAC1hB,iBAAiB,CAACyG,mBAAmB,GAAG0a,OAAO,CAAC1a,mBAAmB;UACxE,IAAI,CAACgF,qBAAqB,GAAG,IAAI,CAACF,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACyG,mBAAmB,CAAC;UAC5F4a,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;QACJ,KAAK,wBAAwB;UACzB,IAAI,CAAC1hB,iBAAiB,CAAC2G,sBAAsB,GAAGwa,OAAO,CAACxa,sBAAsB;UAC9E,IAAI,CAACqF,wBAAwB,GAAG,IAAI,CAACT,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC2G,sBAAsB,CAAC;UAClG0a,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;QACJ,KAAK,UAAU;UACX,IAAI,CAACjiB,SAAS,CAACyiB,sBAAsB,CAACd,OAAO,CAAC3Q,QAAQ,CAAC;UACvD,IAAI,IAAI,CAACzN,YAAY,EAAE;YACnB,IAAI,CAACA,YAAY,CAACmf,mBAAmB,CAAC,CAAC;UAC3C;UACA;QACJ,KAAK,WAAW;UACZ,IAAI,CAACC,WAAW,CAAC,CAAC;UAClBf,KAAK,CAACC,SAAS,GAAG,IAAI;UACtB;QACJ;UACI,IAAI,CAACe,sBAAsB,CAACT,IAAI,EAAET,OAAO,EAAEC,OAAO,EAAEC,KAAK,CAAC;UAC1D;MACR;IACJ;IACA,IAAI,CAACiB,oBAAoB,CAACjB,KAAK,CAAC;EACpC,CAAC;EACD1jB,QAAQ,CAACxE,SAAS,CAACmpB,oBAAoB,GAAG,UAAUjB,KAAK,EAAE;IACvD,IAAIA,KAAK,CAACC,SAAS,EAAE;MACjB,IAAI,CAACze,OAAO,CAAC,CAAC;IAClB,CAAC,MACI,IAAIwe,KAAK,CAACE,UAAU,EAAE;MACvB,IAAI,CAACrhB,mBAAmB,CAAC,IAAI,CAAC;IAClC,CAAC,MACI,IAAImhB,KAAK,CAACI,MAAM,EAAE;MACnB,IAAI,CAAClT,UAAU,CAAC,IAAI,CAAC3L,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC;IACjD,CAAC,MACI,IAAIye,KAAK,CAACG,MAAM,EAAE;MACnB,IAAItmB,iBAAiB,CAAC,IAAI,CAAC0I,YAAY,CAAC,EAAE;QACtC,IAAI,CAACM,aAAa,CAAC;UAAEN,YAAY,EAAE,IAAI,CAAC4M,cAAc,CAAC;QAAE,CAAC,EAAE,IAAI,CAAC;MACrE;MACA,IAAI,CAACT,UAAU,CAAC,IAAI,CAACnM,YAAY,CAAC;IACtC,CAAC,MACI,IAAIyd,KAAK,CAACK,QAAQ,EAAE;MACrB,IAAI,CAACzP,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACtP,cAAc,CAAC,IAAI,CAACC,WAAW,CAAC;IACzC,CAAC,MACI,IAAIye,KAAK,CAACM,aAAa,IAAI,IAAI,CAAC5W,UAAU,EAAE;MAC7C,IAAI,IAAI,CAACwX,iBAAiB,EAAE;QACxB,IAAI,CAACA,iBAAiB,CAACC,SAAS,CAACrT,MAAM,GAAG,EAAE;QAC5C7T,WAAW,CAAC,CAAC,IAAI,CAACwC,OAAO,CAAC,EAAEN,GAAG,CAACilB,kBAAkB,CAAC;MACvD;MACA,IAAI,CAAC1X,UAAU,CAAC2X,kBAAkB,CAAC,CAAC;IACxC;EACJ,CAAC;EACD/kB,QAAQ,CAACxE,SAAS,CAACwpB,qBAAqB,GAAG,YAAY;IACnD,IAAIC,UAAU,GAAG,IAAI,CAAC9kB,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAACqlB,sBAAsB,CAAC;IAC7E,IAAIC,SAAS,GAAG,IAAI,CAAChlB,OAAO,CAACsC,aAAa,CAAC,GAAG,GAAG5C,GAAG,CAACub,gBAAgB,CAAC;IACtE,IAAI,IAAI,CAACgK,MAAM,KAAK,MAAM,IAAI,CAAC,IAAI,CAACC,kBAAkB,EAAE;MACpDznB,QAAQ,CAAC,CAACqnB,UAAU,CAAC,EAAEplB,GAAG,CAACylB,uBAAuB,CAAC;MACnD,IAAIL,UAAU,CAACpnB,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAAC0lB,yBAAyB,CAAC,EAAE;QAC9D5nB,WAAW,CAAC,CAACsnB,UAAU,CAAC,EAAEplB,GAAG,CAAC0lB,yBAAyB,CAAC;MAC5D;MACA,IAAI,IAAI,CAACniB,aAAa,CAAC0Q,MAAM,EAAE;QAC3B,IAAI0R,WAAW,GAAG,EAAE,CAACtd,KAAK,CAAC7H,IAAI,CAAC,IAAI,CAACF,OAAO,CAACqb,gBAAgB,CAAC,GAAG,GAAG3b,GAAG,CAACsc,kBAAkB,CAAC,CAAC;QAC5FqJ,WAAW,CAAC,CAAC,CAAC,CAACC,KAAK,CAACL,MAAM,GAAID,SAAS,CAACM,KAAK,CAACL,MAAM,GAAID,SAAS,CAACM,KAAK,CAACL,MAAM,GAAGI,WAAW,CAAC,CAAC,CAAC,CAACC,KAAK,CAACL,MAAM;MACjH;IACJ,CAAC,MACI;MACD,IAAIH,UAAU,CAACpnB,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAACylB,uBAAuB,CAAC,EAAE;QAC5D3nB,WAAW,CAAC,CAACsnB,UAAU,CAAC,EAAEplB,GAAG,CAACylB,uBAAuB,CAAC;MAC1D;MACA,IAAI,CAACxjB,SAAS,CAAC4jB,kBAAkB,CAACT,UAAU,CAAC;IACjD;IACA,IAAI,CAAC,IAAI,CAAC7hB,aAAa,CAAC0Q,MAAM,EAAE;MAC5BqR,SAAS,CAACM,KAAK,CAACL,MAAM,GAAG,EAAE;IAC/B;EACJ,CAAC;EACDplB,QAAQ,CAACxE,SAAS,CAACkpB,sBAAsB,GAAG,UAAUT,IAAI,EAAET,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAE;IACjF,QAAQO,IAAI;MACR,KAAK,OAAO;MACZ,KAAK,QAAQ;MACb,KAAK,oBAAoB;QACrB,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC/gB,OAAO,CAAC,IAAI,CAAC+B,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;UAC5D,IAAI,CAAC+f,qBAAqB,CAAC,CAAC;QAChC;QACA,IAAI,CAACjG,MAAM,CAACnf,MAAM,CAAC+lB,QAAQ,EAAE;UAAEC,MAAM,EAAE,QAAQ;UAAEC,UAAU,EAAE;YAAEpgB,KAAK,EAAE+d,OAAO,CAAC/d,KAAK;YAAE2f,MAAM,EAAE5B,OAAO,CAAC4B;UAAO;QAAE,CAAC,CAAC;QAChH;MACJ,KAAK,UAAU;QACX,IAAI3B,OAAO,CAACriB,QAAQ,EAAE;UAClBzD,WAAW,CAAC,CAAC,IAAI,CAACwC,OAAO,CAAC,EAAEsjB,OAAO,CAACriB,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5D;QACA,IAAImiB,OAAO,CAACpiB,QAAQ,EAAE;UAClBxD,QAAQ,CAAC,CAAC,IAAI,CAACuC,OAAO,CAAC,EAAEqjB,OAAO,CAACpiB,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzD;QACA;MACJ,KAAK,qBAAqB;MAC1B,KAAK,iBAAiB;QAClB,IAAI,CAACgB,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;QACpDohB,KAAK,CAACI,MAAM,GAAG,IAAI;QACnB;MACJ,KAAK,eAAe;QAChB,IAAI,CAACgC,8BAA8B,CAACtC,OAAO,CAAC1Y,aAAa,EAAE2Y,OAAO,CAAC3Y,aAAa,EAAE4Y,KAAK,CAAC;QACxF;MACJ,KAAK,0BAA0B;MAC/B,KAAK,gBAAgB;QACjB,IAAI,IAAI,CAACzhB,yBAAyB,EAAE;UAChC,IAAI,CAACA,yBAAyB,CAAC6C,OAAO,CAAC,CAAC;UACxC,IAAI,CAAC7C,yBAAyB,GAAG,IAAI;QACzC;QACA,IAAIuhB,OAAO,CAACxhB,wBAAwB,IAAIwhB,OAAO,CAACtJ,cAAc,EAAE;UAC5D,IAAI,CAACjY,yBAAyB,GAAG,IAAI3D,mBAAmB,CAAC,IAAI,CAAC;QAClE;QACA;MACJ,KAAK,oBAAoB;QACrB,IAAI,IAAI,CAACuG,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACK,OAAO,CAAC,CAAC;QAC9B;QACA;MACJ,KAAK,gBAAgB;QACjB,IAAI,CAAC3H,iBAAiB,CAAC,IAAI,CAACoR,cAAc,CAAC,EAAE;UACzC,IAAI,CAACD,gBAAgB,GAAG,IAAI,CAACd,cAAc,CAAC,IAAI,CAACe,cAAc,CAAC;QACpE;QACA,IAAI,IAAI,CAAC9J,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACkhB,gBAAgB,CAAC,CAAC;QACvC;QACA;MACJ,KAAK,sBAAsB;QACvB,IAAI,CAACxoB,iBAAiB,CAAC,IAAI,CAACsR,oBAAoB,CAAC,EAAE;UAC/C,IAAI,CAACD,sBAAsB,GAAG,IAAI,CAAChB,cAAc,CAAC,IAAI,CAACiB,oBAAoB,CAAC;QAChF;QACA,IAAI,IAAI,CAAChK,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACmhB,eAAe,CAAC,CAAC;QACtC;QACA;MACJ,KAAK,sBAAsB;QACvB,IAAI,CAACzoB,iBAAiB,CAAC,IAAI,CAACwR,oBAAoB,CAAC,EAAE;UAC/C,IAAI,CAACD,sBAAsB,GAAG,IAAI,CAAClB,cAAc,CAAC,IAAI,CAACmB,oBAAoB,CAAC;QAChF;QACA,IAAI,IAAI,CAAClK,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACohB,eAAe,CAAC,CAAC;QACtC;QACA;MACJ,KAAK,oBAAoB;QACrB,IAAI,IAAI,CAAChX,kBAAkB,CAACC,MAAM,EAAE;UAChC,IAAI,CAACF,0BAA0B,GAAG,IAAI,CAACpB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACC,MAAM,CAAC;QACzF;QACA,IAAI,IAAI,CAACD,kBAAkB,CAACG,OAAO,EAAE;UACjC,IAAI,CAACD,2BAA2B,GAAG,IAAI,CAACvB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACG,OAAO,CAAC;QAC3F;QACA,IAAI,IAAI,CAACH,kBAAkB,CAACK,MAAM,EAAE;UAChC,IAAI,CAACD,0BAA0B,GAAG,IAAI,CAACzB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACK,MAAM,CAAC;QACzF;QACA;MACJ,KAAK,OAAO;QACR,IAAI,CAAC4W,8BAA8B,CAAC1C,OAAO,CAAC1Z,KAAK,EAAE2Z,OAAO,CAAC3Z,KAAK,EAAE4Z,KAAK,CAAC;QACxE;MACJ,KAAK,WAAW;QACZA,KAAK,CAACE,UAAU,GAAG,IAAI;QACvB;MACJ,KAAK,WAAW;QACZ,IAAI,CAACvhB,iBAAiB,CAACmH,SAAS,CAACF,QAAQ,GAAGka,OAAO,CAACha,SAAS,CAACF,QAAQ,IAAI,IAAI,CAACjH,iBAAiB,CAACmH,SAAS,CAACF,QAAQ;QACnH,IAAI,CAACjH,iBAAiB,CAACmH,SAAS,CAACE,SAAS,GAAG8Z,OAAO,CAACha,SAAS,CAACE,SAAS,IAAI,IAAI,CAACrH,iBAAiB,CAACmH,SAAS,CAACE,SAAS;QACtH,IAAI,IAAI,CAAC7E,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACshB,qBAAqB,CAAC,CAAC;QAC5C;QACAzC,KAAK,CAACK,QAAQ,GAAG,IAAI;QACrB;MACJ,KAAK,kBAAkB;MACvB,KAAK,eAAe;MACpB,KAAK,eAAe;MACpB,KAAK,cAAc;QACf,IAAI,CAAC9D,aAAa,CAAC,KAAK,CAAC;QACzB;MACJ,KAAK,UAAU;QACXyD,KAAK,CAACK,QAAQ,GAAG,IAAI;QACrB;MACJ,KAAK,kBAAkB;QACnB,IAAI,CAAC1hB,iBAAiB,CAAC2I,gBAAgB,GAAGwY,OAAO,CAACxY,gBAAgB;QAClE,IAAI,CAACxD,SAAS,GAAG,IAAI,CAAC8K,UAAU,CAAC9K,SAAS;QAC1Ckc,KAAK,CAACK,QAAQ,GAAG,IAAI;QACrB;MACJ,KAAK,aAAa;QACd,IAAI,CAAC1hB,iBAAiB,CAAC4I,WAAW,GAAGuY,OAAO,CAACvY,WAAW;QACxD,IAAI,CAACzD,SAAS,GAAG,IAAI,CAAC8K,UAAU,CAAC9K,SAAS;QAC1Ckc,KAAK,CAACK,QAAQ,GAAG,IAAI;QACrB;MACJ,KAAK,YAAY;QACb,IAAI,CAACzY,kBAAkB,GAAGkY,OAAO,CAACnY,UAAU,IAAI,IAAI,CAAChJ,iBAAiB,CAACgJ,UAAU;QACjF,IAAI,IAAI,CAACxG,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACshB,qBAAqB,CAAC,CAAC;QAC5C;QACAzC,KAAK,CAACK,QAAQ,GAAG,IAAI;QACrB;MACJ,KAAK,kBAAkB;QACnB,IAAI,IAAI,CAAC3e,aAAa,IAAI,IAAI,CAACC,YAAY,EAAE;UACzC,IAAI,CAACF,mBAAmB,CAAC,CAAC;UAC1B,IAAI,CAACE,YAAY,GAAG,IAAIlH,cAAc,CAAC,IAAI,CAAC;UAC5C,IAAI,CAACkH,YAAY,CAAC8e,eAAe,CAAC,CAAC;QACvC;QACAT,KAAK,CAACK,QAAQ,GAAG,IAAI;QACrB;MACJ,KAAK,sBAAsB;QACvB,IAAI,CAAC1hB,iBAAiB,CAAC6G,oBAAoB,GAAGsa,OAAO,CAACta,oBAAoB;QAC1E,IAAI,CAACoF,sBAAsB,GAAG,IAAI,CAACV,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC6G,oBAAoB,CAAC;QAC9Fwa,KAAK,CAACK,QAAQ,GAAG,IAAI;QACrB;IACR;EACJ,CAAC;EACD/jB,QAAQ,CAACxE,SAAS,CAACipB,WAAW,GAAG,YAAY;IACzC,IAAI,IAAI,CAAC7jB,SAAS,EAAE;MAChBhD,QAAQ,CAAC,CAAC,IAAI,CAACuC,OAAO,CAAC,EAAE,OAAO,CAAC;IACrC,CAAC,MACI;MACDxC,WAAW,CAAC,CAAC,IAAI,CAACwC,OAAO,CAAC,EAAE,OAAO,CAAC;IACxC;EACJ,CAAC;EACDH,QAAQ,CAACxE,SAAS,CAAC0qB,8BAA8B,GAAG,UAAU1C,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAE;IACnF,KAAK,IAAIpiB,EAAE,GAAG,CAAC,EAAEoG,EAAE,GAAG1M,MAAM,CAAC+U,IAAI,CAACyT,OAAO,CAAC,EAAEliB,EAAE,GAAGoG,EAAE,CAACzL,MAAM,EAAEqF,EAAE,EAAE,EAAE;MAC9D,IAAI2iB,IAAI,GAAGvc,EAAE,CAACpG,EAAE,CAAC;MACjB,IAAI2iB,IAAI,KAAK,uBAAuB,EAAE;QAClC,IAAI,CAAC1V,uBAAuB,GAAG,IAAI,CAACX,cAAc,CAAC4V,OAAO,CAACtZ,qBAAqB,CAAC;MACrF,CAAC,MACI;QACDwZ,KAAK,CAACK,QAAQ,GAAG,IAAI;QACrB,IAAI,IAAI,CAAClf,WAAW,EAAE;UAClB,IAAI,CAACA,WAAW,CAACK,OAAO,CAAC,CAAC;QAC9B;MACJ;IACJ;EACJ,CAAC;EACDlF,QAAQ,CAACxE,SAAS,CAACsqB,8BAA8B,GAAG,UAAUtC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAE;IACnF,KAAK,IAAIpiB,EAAE,GAAG,CAAC,EAAEoG,EAAE,GAAG1M,MAAM,CAAC+U,IAAI,CAACyT,OAAO,CAAC,EAAEliB,EAAE,GAAGoG,EAAE,CAACzL,MAAM,EAAEqF,EAAE,EAAE,EAAE;MAC9D,IAAI2iB,IAAI,GAAGvc,EAAE,CAACpG,EAAE,CAAC;MACjB,QAAQ2iB,IAAI;QACR,KAAK,YAAY;QACjB,KAAK,OAAO;QACZ,KAAK,QAAQ;QACb,KAAK,uBAAuB;UACxB,IAAI,CAAC9hB,oBAAoB,CAAC,CAAC;UAC3BuhB,KAAK,CAACM,aAAa,GAAG,IAAI;UAC1B;QACJ,KAAK,UAAU;UACX,IAAI,CAAC3hB,iBAAiB,CAAC+G,aAAa,GAAGoa,OAAO,CAACzY,QAAQ;UACvD,IAAI,CAACqD,qBAAqB,GAAG,IAAI,CAACR,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC+G,aAAa,CAAC;UACtFsa,KAAK,CAACM,aAAa,GAAG,IAAI;UAC1B;QACJ,KAAK,eAAe;UAChB,IAAI,IAAI,CAACoC,YAAY,EAAE;YACnB,IAAI,CAACA,YAAY,CAACthB,OAAO,CAAC,CAAC;YAC3B,IAAI,CAACshB,YAAY,GAAG,IAAI;UAC5B;UACA,IAAI5C,OAAO,CAAC6C,aAAa,EAAE;YACvB,IAAI,CAACD,YAAY,GAAG,IAAIznB,YAAY,CAAC,IAAI,CAAC;UAC9C;UACA;QACJ,KAAK,iBAAiB;UAClB,IAAI,CAAC6P,sBAAsB,GAAG,IAAI,CAACZ,cAAc,CAAC,IAAI,CAAC9C,aAAa,CAAC2D,eAAe,CAAC;UACrF;QACJ,KAAK,oBAAoB;UACrB,IAAI,IAAI,CAACjK,YAAY,EAAE;YACnB,IAAI,CAACA,YAAY,CAACiJ,qBAAqB,CAAC,CAAC;UAC7C;UACAiW,KAAK,CAACM,aAAa,GAAG,IAAI;UAC1B;QACJ,KAAK,qBAAqB;UACtB,IAAI,IAAI,CAACzU,UAAU,EAAE;YACjB,IAAI,CAACA,UAAU,CAAC+W,kBAAkB,CAAC,CAAC;UACxC;UACA;QACJ,KAAK,aAAa;QAClB,KAAK,cAAc;QACnB,KAAK,eAAe;UAChB,IAAI,IAAI,CAAClhB,aAAa,IAAI,IAAI,CAACC,YAAY,EAAE;YACzC,IAAI,CAACA,YAAY,CAACkhB,aAAa,CAAC,CAAC;UACrC;UACA,IAAI,IAAI,CAAC1hB,WAAW,EAAE;YAClB,IAAI,CAACA,WAAW,CAACK,OAAO,CAAC,CAAC;UAC9B;UACA;QACJ,KAAK,uBAAuB;QAC5B,KAAK,sBAAsB;QAC3B,KAAK,iBAAiB;QACtB,KAAK,iBAAiB;UAClB,IAAI,CAAC+a,aAAa,CAAC,KAAK,CAAC;UACzB;QACJ,KAAK,kBAAkB;UACnByD,KAAK,CAACK,QAAQ,GAAG,IAAI;UACrB;MACR;IACJ;EACJ,CAAC;EACD/jB,QAAQ,CAACxE,SAAS,CAAC2J,mBAAmB,GAAG,YAAY;IACjD,IAAI,IAAI,CAACE,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAACP,OAAO,CAAC,CAAC;MAC3B,IAAI,CAACO,YAAY,GAAG,IAAI;IAC5B;EACJ,CAAC;EACDrF,QAAQ,CAACxE,SAAS,CAACsK,aAAa,GAAG,YAAY;IAC3C,IAAI,IAAI,CAACyJ,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,CAACzK,OAAO,CAAC,CAAC;MACzB,IAAI,CAACyK,UAAU,GAAG,IAAI;IAC1B;IACA,IAAI,IAAI,CAAC1K,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAACD,WAAW,GAAG,IAAI;IAC3B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI7E,QAAQ,CAACxE,SAAS,CAAC0C,WAAW,GAAG,YAAY;IACzCA,WAAW,CAAC,IAAI,CAACiC,OAAO,CAAC;EAC7B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIH,QAAQ,CAACxE,SAAS,CAACyC,WAAW,GAAG,YAAY;IACzCA,WAAW,CAAC,IAAI,CAACkC,OAAO,CAAC;EAC7B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIH,QAAQ,CAACxE,SAAS,CAACgrB,YAAY,GAAG,UAAUxE,KAAK,EAAElM,KAAK,EAAEC,GAAG,EAAE7B,UAAU,EAAE;IACvE,IAAI0G,KAAK,GAAG,EAAE;IACdA,KAAK,GAAG,IAAI,CAAC6L,gBAAgB,CAACzE,KAAK,EAAElM,KAAK,EAAEC,GAAG,EAAE7B,UAAU,CAAC;IAC5DtW,QAAQ,CAACgd,KAAK,EAAE/a,GAAG,CAAC6mB,gBAAgB,CAAC;EACzC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI1mB,QAAQ,CAACxE,SAAS,CAACmrB,cAAc,GAAG,UAAU3E,KAAK,EAAElM,KAAK,EAAEC,GAAG,EAAE7B,UAAU,EAAE;IACzE,IAAI8N,KAAK,KAAK,KAAK,CAAC,EAAE;MAAEA,KAAK,GAAG,IAAI,CAAC1P,UAAU,CAACsU,WAAW;IAAE;IAC7D,IAAI5E,KAAK,IAAIlM,KAAK,IAAIC,GAAG,EAAE;MACvB,IAAI6E,KAAK,GAAG,IAAI,CAAC6L,gBAAgB,CAACzE,KAAK,EAAElM,KAAK,EAAEC,GAAG,EAAE7B,UAAU,CAAC;MAChEvW,WAAW,CAACid,KAAK,EAAE/a,GAAG,CAAC6mB,gBAAgB,CAAC;IAC5C,CAAC,MACI;MACD,IAAIG,aAAa,GAAG,EAAE,CAAC3e,KAAK,CAAC7H,IAAI,CAAC,IAAI,CAACF,OAAO,CAACqb,gBAAgB,CAAC,GAAG,GAAG3b,GAAG,CAAC6mB,gBAAgB,CAAC,CAAC;MAC5F/oB,WAAW,CAACkpB,aAAa,EAAEhnB,GAAG,CAAC6mB,gBAAgB,CAAC;IACpD;EACJ,CAAC;EACD1mB,QAAQ,CAACxE,SAAS,CAACirB,gBAAgB,GAAG,UAAUzE,KAAK,EAAElM,KAAK,EAAEC,GAAG,EAAE7B,UAAU,EAAE;IAC3E,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,eAAe,CAAC,CAAChR,OAAO,CAAC,IAAI,CAAC+B,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;MACpF,OAAO,EAAE;IACb;IACA,IAAIyF,SAAS,GAAG,IAAI,CAACgU,eAAe,CAAC5I,KAAK,CAAC;IAC3C,IAAItL,OAAO,GAAG,IAAI,CAACkU,eAAe,CAAC3I,GAAG,CAAC;IACvC,IAAI+Q,QAAQ,GAAG,IAAI,CAACzL,eAAe,CAAC,CAAC;IACrC,IAAI9d,iBAAiB,CAACmN,SAAS,CAAC,IAAInN,iBAAiB,CAACiN,OAAO,CAAC,IAAI,CAACsc,QAAQ,EAAE;MACzE,OAAO,EAAE;IACb;IACApc,SAAS,CAACqc,eAAe,CAAC,CAAC,CAAC;IAC5Bvc,OAAO,CAACuc,eAAe,CAAC,CAAC,CAAC;IAC1B,IAAIC,aAAa,GAAG,IAAI,CAAC1U,UAAU,CAAC2U,YAAY,CAAC,CAAC;IAClD,IAAIvc,SAAS,GAAGsc,aAAa,EAAE;MAC3Btc,SAAS,GAAGsc,aAAa;IAC7B;IACA,IAAIE,WAAW,GAAG,IAAI,CAAC5U,UAAU,CAAC6U,UAAU,CAAC,CAAC;IAC9C,IAAI3c,OAAO,GAAG0c,WAAW,EAAE;MACvB1c,OAAO,GAAG0c,WAAW;IACzB;IACA,IAAIE,eAAe,GAAG,IAAI,CAAC/kB,iBAAiB,CAACmH,SAAS,CAACF,QAAQ,GAAGxJ,IAAI,CAACunB,aAAa;IACpF,IAAIC,UAAU,GAAGF,eAAe,GAAG,IAAI,CAAC/kB,iBAAiB,CAACmH,SAAS,CAACE,SAAS;IAC7E,IAAI6d,UAAU,GAAI,CAACP,aAAa,CAACQ,iBAAiB,CAAC,CAAC,GAAG9c,SAAS,CAAC8c,iBAAiB,CAAC,CAAC,IAAI1nB,IAAI,CAACunB,aAAc;IAC3G,IAAII,aAAa,GAAGniB,IAAI,CAACoiB,GAAG,CAAC,CAACV,aAAa,CAACQ,iBAAiB,CAAC,CAAC,GAAGhd,OAAO,CAACgd,iBAAiB,CAAC,CAAC,IAAI1nB,IAAI,CAACunB,aAAa,CAAC;IACpH,IAAIM,UAAU,GAAGriB,IAAI,CAACC,KAAK,CAAC,CAACmF,SAAS,CAACtE,OAAO,CAAC,CAAC,GAAG4gB,aAAa,CAAC5gB,OAAO,CAAC,CAAC,GAAGmhB,UAAU,IAAID,UAAU,CAAC;IACtG,IAAIM,QAAQ,GAAGtiB,IAAI,CAACuiB,IAAI,CAAC,CAACrd,OAAO,CAACpE,OAAO,CAAC,CAAC,GAAG4gB,aAAa,CAAC5gB,OAAO,CAAC,CAAC,GAAGqhB,aAAa,IAAIH,UAAU,CAAC;IACpG,IAAIQ,cAAc,GAAGH,UAAU;IAC/B,IAAII,YAAY,GAAGH,QAAQ;IAC3B,IAAIhN,KAAK,GAAG,EAAE;IACd,KAAK,IAAItZ,EAAE,GAAG,CAAC,EAAE0mB,OAAO,GAAGhG,KAAK,EAAE1gB,EAAE,GAAG0mB,OAAO,CAAC/rB,MAAM,EAAEqF,EAAE,EAAE,EAAE;MACzD,IAAI4E,IAAI,GAAG8hB,OAAO,CAAC1mB,EAAE,CAAC;MACtB4E,IAAI,GAAG,IAAI,CAACuK,WAAW,CAACvK,IAAI,CAAC;MAC7BpG,IAAI,CAAC+e,SAAS,CAAC3Y,IAAI,CAAC;MACpB,IAAI0gB,WAAW,GAAG,IAAI,CAACtU,UAAU,CAACsU,WAAW;MAC7C,IAAI,CAACrpB,iBAAiB,CAAC2W,UAAU,CAAC,IAAI,IAAI,CAAC1P,YAAY,IAAI,CAAC,IAAI,CAAC8N,UAAU,CAACC,cAAc,CAAC,CAAC,EAAE;QAC1FqU,WAAW,GAAG,IAAI,CAACpiB,YAAY,CAACyjB,iBAAiB,CAAClhB,QAAQ,CAACmN,UAAU,CAAClN,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC4f,WAAW;MACtG;MACA,IAAIsB,QAAQ,GAAG,IAAI,CAACtM,cAAc,CAACgL,WAAW,EAAE1gB,IAAI,CAAC;MACrD,IAAIgiB,QAAQ,IAAI,CAAC,EAAE;QACf,IAAI,IAAI,CAAC5V,UAAU,CAACC,cAAc,CAAC,CAAC,EAAE;UAClC,IAAI4V,WAAW,GAAG7iB,IAAI,CAACC,KAAK,CAAC,CAAC2hB,WAAW,CAAC9gB,OAAO,CAAC,CAAC,GAAG4gB,aAAa,CAAC5gB,OAAO,CAAC,CAAC,IAAIkhB,UAAU,CAAC;UAC5FK,UAAU,GAAGG,cAAc,GAAII,QAAQ,GAAGC,WAAY;UACtDP,QAAQ,GAAGG,YAAY,GAAIG,QAAQ,GAAGC,WAAY;QACtD;QACA,KAAK,IAAI7rB,CAAC,GAAGqrB,UAAU,EAAErrB,CAAC,GAAGsrB,QAAQ,EAAEtrB,CAAC,EAAE,EAAE;UACxC,IAAI,IAAI,CAACgW,UAAU,CAACC,cAAc,CAAC,CAAC,EAAE;YAClC,IAAI6V,QAAQ,GAAI,CAAC7qB,iBAAiB,CAAC2W,UAAU,CAAC,GAAIA,UAAU,GAAG,CAAC;YAChE0G,KAAK,CAACla,IAAI,CAAComB,QAAQ,CAACuB,IAAI,CAACthB,QAAQ,CAACqhB,QAAQ,CAACphB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC4T,KAAK,CAAC7T,QAAQ,CAACzK,CAAC,CAAC0K,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAClG,CAAC,MACI;YACD,IAAI,CAACzJ,iBAAiB,CAAC2W,UAAU,CAAC,EAAE;cAChC,IAAIwI,QAAQ,GAAG,GAAG,GAAG7c,GAAG,CAAC8b,gBAAgB,GAAG,qBAAqB,GAAGzH,UAAU,GAAG,IAAI;cACrF,IAAIoU,GAAG,GAAG,EAAE,CAACpgB,KAAK,CAAC7H,IAAI,CAACymB,QAAQ,CAACuB,IAAI,CAACthB,QAAQ,CAACzK,CAAC,CAAC0K,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACwU,gBAAgB,CAACkB,QAAQ,CAAC,CAAC;cAC7F9B,KAAK,CAACla,IAAI,CAAC4nB,GAAG,CAACvhB,QAAQ,CAACmhB,QAAQ,CAAClhB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACtD,CAAC,MACI;cACD4T,KAAK,CAACla,IAAI,CAAComB,QAAQ,CAACuB,IAAI,CAACthB,QAAQ,CAACzK,CAAC,CAAC0K,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC4T,KAAK,CAAC7T,QAAQ,CAACmhB,QAAQ,CAAClhB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAClG;UACJ;QACJ;MACJ;IACJ;IACA,OAAO4T,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI5a,QAAQ,CAACxE,SAAS,CAAC+sB,cAAc,GAAG,UAAUC,KAAK,EAAE;IACjD,IAAIvM,EAAE,GAAIuM,KAAK,YAAYrtB,KAAK,GAAIqtB,KAAK,GAAG,CAACA,KAAK,CAAC;IACnD,IAAIC,OAAO,GAAG/qB,UAAU,CAACue,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,IAAIyM,MAAM,GAAGhrB,UAAU,CAACue,EAAE,CAAC/T,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,IAAIkE,SAAS,GAAG,IAAI,CAACiQ,kBAAkB,CAACoM,OAAO,CAAC;IAChD,IAAIpc,OAAO,GAAG,IAAI,CAACgQ,kBAAkB,CAACqM,MAAM,CAAC;IAC7C,IAAInrB,iBAAiB,CAAC6O,SAAS,CAAC,IAAI7O,iBAAiB,CAAC8O,OAAO,CAAC,EAAE;MAC5D,OAAOR,SAAS;IACpB;IACA,IAAI8c,kBAAkB,GAAG,IAAI,CAACrW,UAAU,CAACC,cAAc,CAAC,CAAC,IAAI,CAAChV,iBAAiB,CAACmrB,MAAM,CAACnM,YAAY,CAAC,SAAS,CAAC,CAAC,IAC3G,IAAI,CAAChR,UAAU,CAACtP,MAAM,GAAG,CAAC;IAC9B,IAAIkX,QAAQ,GAAGwV,kBAAkB,GAAG5hB,QAAQ,CAAC2hB,MAAM,CAACnM,YAAY,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;IACpF,IAAI,CAAC,IAAI,CAACla,iBAAiB,CAACmH,SAAS,CAACC,MAAM,IAAIkf,kBAAkB,IAAID,MAAM,CAAC7qB,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAACsc,kBAAkB,CAAC,IACnHuM,MAAM,CAAC7qB,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAACuc,kBAAkB,CAAC,EAAE;MACnD/P,OAAO,GAAGvM,IAAI,CAAC8oB,OAAO,CAAC,IAAIziB,IAAI,CAACkG,OAAO,CAACjG,OAAO,CAAC,CAAC,CAAC,EAAE+M,QAAQ,CAAC;IACjE,CAAC,MACI;MACD9G,OAAO,GAAG,IAAI,CAACiG,UAAU,CAACuW,uBAAuB,CAACxc,OAAO,CAAC;IAC9D;IACA,IAAIwW,IAAI,GAAG;MACPzW,SAAS,EAAEA,SAAS;MACpBC,OAAO,EAAEA,OAAO;MAChBK,QAAQ,EAAE,IAAI,CAACsP,YAAY,CAACyM,OAAO,CAAC;MACpCtoB,OAAO,EAAEqoB;IACb,CAAC;IACD,IAAItU,UAAU,GAAGuU,OAAO,CAAClM,YAAY,CAAC,kBAAkB,CAAC;IACzD,IAAI,CAAChf,iBAAiB,CAAC2W,UAAU,CAAC,EAAE;MAChC2O,IAAI,CAAC3O,UAAU,GAAGnN,QAAQ,CAACmN,UAAU,EAAE,EAAE,CAAC;IAC9C;IACA,OAAO2O,IAAI;EACf,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI7iB,QAAQ,CAACxE,SAAS,CAACstB,mBAAmB,GAAG,YAAY;IACjD,IAAI,IAAI,CAAC7mB,yBAAyB,IAAI,IAAI,CAACA,yBAAyB,CAACoY,aAAa,CAACpe,MAAM,GAAG,CAAC,EAAE;MAC3F,OAAO,IAAI,CAACgG,yBAAyB,CAACoY,aAAa;IACvD;IACA,OAAO,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAClC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIta,QAAQ,CAACxE,SAAS,CAACutB,sBAAsB,GAAG,YAAY;IACpD,OAAO,IAAI,CAACrkB,kBAAkB;EAClC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI1E,QAAQ,CAACxE,SAAS,CAACwtB,sBAAsB,GAAG,UAAUC,WAAW,EAAEC,kBAAkB,EAAE;IACnF,IAAIA,kBAAkB,KAAK,KAAK,CAAC,EAAE;MAAEA,kBAAkB,GAAG,IAAI;IAAE;IAChE,IAAI,CAACA,kBAAkB,IAAI,IAAI,CAAC9lB,aAAa,EAAE;MAC3C,IAAI,CAACA,aAAa,CAAC+lB,qBAAqB,GAAG,IAAI;IACnD;IACA,IAAI,CAAC5iB,aAAa,CAAC;MAAEhC,SAAS,EAAE0kB;IAAY,CAAC,EAAE,KAAK,CAAC;EACzD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIjpB,QAAQ,CAACxE,SAAS,CAAC4tB,iBAAiB,GAAG,UAAUziB,QAAQ,EAAEa,SAAS,EAAE;IAClE,IAAIuJ,KAAK,GAAG,IAAI,CAACrK,YAAY,CAACC,QAAQ,CAAC;IACvC,IAAIgB,IAAI,GAAGhB,QAAQ,CAACqB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGtB,QAAQ,CAACuB,KAAK,CAAC,CAAC,CAAC;IAC/D,IAAIb,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC,EAAE,GAAGM,IAAI,CAAC;IAC7C,IAAIN,WAAW,EAAE;MACb0J,KAAK,GAAG,IAAI,CAAClK,eAAe,CAAC3D,OAAO,CAACmE,WAAW,CAACG,SAAS,IAAI,CAAC,CAAC,CAAC;IACrE;IACA,IAAIuJ,KAAK,KAAK,CAAC,CAAC,IAAIA,KAAK,KAAK,IAAI,CAACvJ,SAAS,EAAE;MAC1C;IACJ;IACA,IAAI,CAACoJ,UAAU,CAACjK,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAEoK,KAAK,CAAC;EAChD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI/Q,QAAQ,CAACxE,SAAS,CAAC6tB,mBAAmB,GAAG,YAAY;IACjD,OAAO,IAAI,CAAC7hB,SAAS;EACzB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIxH,QAAQ,CAACxE,SAAS,CAAC8tB,mBAAmB,GAAG,UAAUvY,KAAK,EAAE;IACtD,IAAI,IAAI,CAACvM,YAAY,IAAI,IAAI,CAACA,YAAY,CAACyjB,iBAAiB,EAAE;MAC1D,IAAIlX,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,IAAI,CAACvM,YAAY,CAACyjB,iBAAiB,CAAChsB,MAAM,EAAE;QAClE,OAAO4P,SAAS;MACpB;MACA,IAAIgX,IAAI,GAAG,IAAI,CAACre,YAAY,CAACyjB,iBAAiB,CAAClhB,QAAQ,CAACgK,KAAK,CAAC/J,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MAC9E,IAAIuiB,SAAS,GAAG,CAAC,CAAC;MAClB,IAAI,CAAC/kB,YAAY,CAACglB,iBAAiB,CAACD,SAAS,EAAExY,KAAK,CAAC;MACrD,OAAO;QAAE0Y,QAAQ,EAAE5G,IAAI,CAAC4G,QAAQ;QAAEC,YAAY,EAAE7G,IAAI,CAAC6G,YAAY;QAAEH,SAAS,EAAEA;MAAU,CAAC;IAC7F;IACA,OAAO1d,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI7L,QAAQ,CAACxE,SAAS,CAACmuB,cAAc,GAAG,UAAUC,UAAU,EAAEzd,IAAI,EAAE;IAC5D,IAAI,IAAI,CAACmG,UAAU,CAACC,cAAc,CAAC,CAAC,IAAI,IAAI,CAAC/N,YAAY,IAAI,IAAI,CAACE,kBAAkB,CAACzI,MAAM,GAAG,CAAC,EAAE;MAC7F,IAAI,CAACuI,YAAY,CAACqlB,cAAc,CAACD,UAAU,EAAEzd,IAAI,EAAE,KAAK,CAAC;IAC7D;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACInM,QAAQ,CAACxE,SAAS,CAACsuB,gBAAgB,GAAG,UAAUF,UAAU,EAAEzd,IAAI,EAAE;IAC9D,IAAI,IAAI,CAACmG,UAAU,CAACC,cAAc,CAAC,CAAC,IAAI,IAAI,CAAC/N,YAAY,IAAI,IAAI,CAACE,kBAAkB,CAACzI,MAAM,GAAG,CAAC,EAAE;MAC7F,IAAI,CAACuI,YAAY,CAACqlB,cAAc,CAACD,UAAU,EAAEzd,IAAI,EAAE,IAAI,CAAC;IAC5D;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACInM,QAAQ,CAACxE,SAAS,CAACuuB,QAAQ,GAAG,UAAUC,IAAI,EAAEC,UAAU,EAAE;IACtD,IAAI,IAAI,CAAChlB,WAAW,CAAC/B,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI3F,iBAAiB,CAAC,IAAI,CAAC4C,OAAO,CAACsC,aAAa,CAAC,eAAe,CAAC,CAAC,EAAE;MAC1G;IACJ;IACA,IAAI,IAAI,CAAC6P,UAAU,CAAC4X,YAAY,IAAI3sB,iBAAiB,CAACysB,IAAI,CAAC,IAAIC,UAAU,EAAE;MACvE,IAAI,CAAC3X,UAAU,CAAC4X,YAAY,CAACD,UAAU,CAAC;IAC5C,CAAC,MACI,IAAI,IAAI,CAAC3X,UAAU,CAAC6X,YAAY,EAAE;MACnC,IAAI,CAAC7X,UAAU,CAAC6X,YAAY,CAACH,IAAI,EAAEC,UAAU,CAAC;IAClD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIjqB,QAAQ,CAACxE,SAAS,CAAC4uB,gBAAgB,GAAG,UAAUR,UAAU,EAAES,SAAS,EAAE;IACnE,IAAI,IAAI,CAAC7lB,YAAY,IAAI,IAAI,CAACA,YAAY,CAACyjB,iBAAiB,EAAE;MAC1D,IAAI,CAACzjB,YAAY,CAAC8lB,cAAc,CAACV,UAAU,EAAES,SAAS,CAAC;IAC3D;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIrqB,QAAQ,CAACxE,SAAS,CAAC+uB,iBAAiB,GAAG,UAAUC,QAAQ,EAAEC,UAAU,EAAE;IACnE,IAAI,IAAI,CAACC,qBAAqB,EAAE;MAC5B,IAAI,CAACA,qBAAqB,CAACC,wBAAwB,CAACH,QAAQ,EAAEC,UAAU,CAAC;IAC7E,CAAC,MACI;MACDG,OAAO,CAACC,IAAI,CAAC,+EAA+E,GACxF,8DAA8D,CAAC;MACnE,MAAMpkB,KAAK,CAAC,+BAA+B,CAAC;IAChD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIzG,QAAQ,CAACxE,SAAS,CAACsvB,eAAe,GAAG,UAAUC,WAAW,EAAE;IACxD,IAAI,IAAI,CAACC,qBAAqB,EAAE;MAC5B,IAAI,CAACA,qBAAqB,CAACC,wBAAwB,CAACF,WAAW,CAAC;IACpE,CAAC,MACI;MACDH,OAAO,CAACC,IAAI,CAAC,+EAA+E,GACxF,8DAA8D,CAAC;MACnE,MAAMpkB,KAAK,CAAC,+BAA+B,CAAC;IAChD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIzG,QAAQ,CAACxE,SAAS,CAAC0vB,QAAQ,GAAG,UAAUrI,IAAI,EAAE;IAC1C,IAAI,CAACzV,UAAU,CAAC8d,QAAQ,CAACrI,IAAI,CAAC;EAClC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI7iB,QAAQ,CAACxE,SAAS,CAAC2vB,wBAAwB,GAAG,UAAUta,KAAK,EAAEua,SAAS,EAAE;IACtE,OAAQ,IAAI,CAACtpB,SAAS,GAAI,IAAI,CAACA,SAAS,CAACupB,kBAAkB,CAACxa,KAAK,EAAEua,SAAS,CAAC,GAAG,EAAE;EACtF,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIprB,QAAQ,CAACxE,SAAS,CAAC8vB,aAAa,GAAG,UAAUC,kBAAkB,EAAE;IAC7D,IAAI,IAAI,CAACC,iBAAiB,EAAE;MACxB,IAAI,CAACA,iBAAiB,CAACC,qBAAqB,CAACF,kBAAkB,CAAC;IACpE,CAAC,MACI;MACDX,OAAO,CAACC,IAAI,CAAC,2EAA2E,GACpF,8DAA8D,CAAC;MACnE,MAAMpkB,KAAK,CAAC,2BAA2B,CAAC;IAC5C;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIzG,QAAQ,CAACxE,SAAS,CAACkwB,KAAK,GAAG,UAAUC,YAAY,EAAE;IAC/C,IAAI,IAAI,CAACC,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACF,KAAK,CAACC,YAAY,CAAC;IACxC,CAAC,MACI;MACDf,OAAO,CAACC,IAAI,CAAC,qEAAqE,GAC9E,8DAA8D,CAAC;MACnE,MAAMpkB,KAAK,CAAC,qBAAqB,CAAC;IACtC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIzG,QAAQ,CAACxE,SAAS,CAACqwB,SAAS,GAAG,UAAUhJ,IAAI,EAAE9N,aAAa,EAAE;IAC1D,IAAI,CAAC3H,UAAU,CAACye,SAAS,CAAChJ,IAAI,EAAE9N,aAAa,CAAC;EAClD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI/U,QAAQ,CAACxE,SAAS,CAAC4a,WAAW,GAAG,UAAUrK,EAAE,EAAEgJ,aAAa,EAAE;IAC1D,IAAI,CAAC3H,UAAU,CAACgJ,WAAW,CAACrK,EAAE,EAAEgJ,aAAa,CAAC;EAClD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI/U,QAAQ,CAACxE,SAAS,CAACswB,SAAS,GAAG,UAAUV,SAAS,EAAEW,OAAO,EAAEC,kBAAkB,EAAE;IAC7E,IAAIC,gBAAgB,GAAG,EAAE;IACzB,IAAID,kBAAkB,EAAE;MACpBC,gBAAgB,GAAG,IAAI,CAACnqB,SAAS,CAACoqB,kBAAkB,CAAC,CAAC;IAC1D,CAAC,MACI;MACDD,gBAAgB,GAAG,IAAI,CAACtX,UAAU;IACtC;IACA,IAAIyW,SAAS,EAAE;MACXA,SAAS,GAAG,IAAI,CAAC3a,WAAW,CAAC2a,SAAS,CAAC;IAC3C;IACA,IAAIW,OAAO,EAAE;MACTA,OAAO,GAAG,IAAI,CAACtb,WAAW,CAACsb,OAAO,CAAC;IACvC;IACAE,gBAAgB,GAAG,IAAI,CAACnqB,SAAS,CAACqqB,mBAAmB,CAACF,gBAAgB,EAAEb,SAAS,EAAEW,OAAO,CAAC;IAC3F,OAAOE,gBAAgB;EAC3B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIjsB,QAAQ,CAACxE,SAAS,CAAC4wB,cAAc,GAAG,UAAUhB,SAAS,EAAEW,OAAO,EAAEC,kBAAkB,EAAE;IAClF,IAAIC,gBAAgB,GAAG,EAAE;IACzB,IAAID,kBAAkB,EAAE;MACpBC,gBAAgB,GAAG,IAAI,CAACnqB,SAAS,CAACoqB,kBAAkB,CAAC,IAAI,CAACrX,SAAS,CAAC;IACxE,CAAC,MACI;MACDoX,gBAAgB,GAAG,IAAI,CAACpX,SAAS;IACrC;IACA,IAAIuW,SAAS,EAAE;MACXA,SAAS,GAAG,IAAI,CAAC3a,WAAW,CAAC2a,SAAS,CAAC;IAC3C;IACA,IAAIW,OAAO,EAAE;MACTA,OAAO,GAAG,IAAI,CAACtb,WAAW,CAACsb,OAAO,CAAC;IACvC;IACAE,gBAAgB,GAAG,IAAI,CAACnqB,SAAS,CAACqqB,mBAAmB,CAACF,gBAAgB,EAAEb,SAAS,EAAEW,OAAO,CAAC;IAC3F,OAAOE,gBAAgB;EAC3B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIjsB,QAAQ,CAACxE,SAAS,CAAC6wB,kBAAkB,GAAG,UAAUC,OAAO,EAAE;IACvD,OAAO,IAAI,CAACxqB,SAAS,CAACuqB,kBAAkB,CAACC,OAAO,CAAC;EACrD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACItsB,QAAQ,CAACxE,SAAS,CAAC+wB,qBAAqB,GAAG,UAAUngB,SAAS,EAAEC,OAAO,EAAE;IACrED,SAAS,GAAG,IAAI,CAACqE,WAAW,CAACrE,SAAS,CAAC;IACvCC,OAAO,GAAG,IAAI,CAACoE,WAAW,CAACpE,OAAO,CAAC;IACnC,OAAO,IAAI,CAACvK,SAAS,CAACyqB,qBAAqB,CAACngB,SAAS,EAAEC,OAAO,CAAC;EACnE,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrM,QAAQ,CAACxE,SAAS,CAACgxB,mBAAmB,GAAG,YAAY;IACjD,OAAO,IAAI,CAACla,UAAU,GAAG,IAAI,CAACA,UAAU,CAACsU,WAAW,GAAG,EAAE;EAC7D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI5mB,QAAQ,CAACxE,SAAS,CAACixB,mBAAmB,GAAG,UAAUC,gBAAgB,EAAE;IACjE,IAAI,CAAC7nB,WAAW,CAAC4nB,mBAAmB,CAACC,gBAAgB,CAAC;EAC1D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI1sB,QAAQ,CAACxE,SAAS,CAACmxB,aAAa,GAAG,YAAY;IAC3C,OAAO,IAAI,CAAC7qB,SAAS,CAAC6qB,aAAa,CAAC,CAAC;EACzC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI3sB,QAAQ,CAACxE,SAAS,CAACoxB,qBAAqB,GAAG,UAAUC,cAAc,EAAE;IACjE,OAAO,IAAI,CAAC/qB,SAAS,CAAC8qB,qBAAqB,CAACC,cAAc,CAAC;EAC/D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI7sB,QAAQ,CAACxE,SAAS,CAACsxB,oBAAoB,GAAG,YAAY;IAClD,OAAO,IAAI,CAAClY,eAAe;EAC/B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI5U,QAAQ,CAACxE,SAAS,CAACykB,aAAa,GAAG,UAAUD,eAAe,EAAE;IAC1D,IAAIA,eAAe,KAAK,KAAK,CAAC,EAAE;MAAEA,eAAe,GAAG,IAAI;IAAE;IAC1D,IAAIA,eAAe,EAAE;MACjB,IAAI,IAAI,CAAC4E,iBAAiB,EAAE;QACxB,IAAI,CAACA,iBAAiB,CAACC,SAAS,CAACrT,MAAM,GAAG,EAAE;QAC5C7T,WAAW,CAAC,CAAC,IAAI,CAACwC,OAAO,CAAC,EAAEN,GAAG,CAACilB,kBAAkB,CAAC;MACvD;MACA,IAAI,CAAC1X,UAAU,CAAC2X,kBAAkB,CAAC,CAAC;IACxC,CAAC,MACI;MACD,IAAI,IAAI,CAAC3hB,aAAa,EAAE;QACpB,IAAI,CAACA,aAAa,CAACgR,iBAAiB,GAAG,IAAI;MAC/C;MACA,IAAI,IAAI,CAAChH,UAAU,EAAE;QACjB,IAAI,CAACA,UAAU,CAAC2f,oBAAoB,CAAC,CAAC;MAC1C;MACA,IAAI,IAAI,CAAC3pB,aAAa,EAAE;QACpB,IAAI,CAACA,aAAa,CAACgR,iBAAiB,GAAG,KAAK;MAChD;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIpU,QAAQ,CAACxE,SAAS,CAACwxB,gBAAgB,GAAG,UAAUhqB,YAAY,EAAE;IAC1D,IAAIA,YAAY,EAAE;MACd,IAAI,CAACa,cAAc,CAAC,CAACb,YAAY,CAAC,CAAC;IACvC,CAAC,MACI;MACD,IAAI,CAACa,cAAc,CAAC,CAAC;IACzB;IACA,QAAQb,YAAY;MAChB,KAAK,eAAe;QAChB,IAAI,CAACoL,qBAAqB,GAAG,IAAI,CAACR,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC+G,aAAa,CAAC;QACtF,IAAI,CAAC6W,aAAa,CAAC,KAAK,CAAC;QACzB;MACJ,KAAK,oBAAoB;QACrB,IAAI,CAACjS,oBAAoB,GAAG,IAAI,CAACJ,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACiG,kBAAkB,CAAC;QAC1F,IAAI,CAACgK,UAAU,CAAC2a,aAAa,CAAC,CAAC;QAC/B;MACJ,KAAK,mBAAmB;QACpB,IAAI,CAAChf,mBAAmB,GAAG,IAAI,CAACL,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACmG,iBAAiB,CAAC;QACxF,IAAI,IAAI,CAACnD,YAAY,EAAE;UACnB,IAAI,CAACA,YAAY,CAACH,OAAO,CAAC,CAAC;QAC/B;QACA;MACJ,KAAK,wBAAwB;QACzB,IAAI,CAACmJ,wBAAwB,GAAG,IAAI,CAACT,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAAC2G,sBAAsB,CAAC;QAClG,IAAI,IAAI,CAACsJ,UAAU,CAACC,cAAc,CAAC,CAAC,EAAE;UAClC,IAAI,CAACD,UAAU,CAAC4a,qBAAqB,CAAC,CAAC;QAC3C,CAAC,MACI;UACD,IAAI,CAAC5a,UAAU,CAAC2a,aAAa,CAAC,CAAC;QACnC;QACA;MACJ,KAAK,oBAAoB;QACrB,IAAI,IAAI,CAAC1d,UAAU,EAAE;UACjB,IAAI,CAACA,UAAU,CAACzK,OAAO,CAAC,CAAC;UACzB,IAAI,CAACyK,UAAU,GAAG,IAAI;QAC1B;QACA,IAAI,CAACA,UAAU,GAAG,IAAI7Q,WAAW,CAAC,IAAI,CAAC;QACvC,IAAI,CAACsQ,0BAA0B,GAAG,IAAI,CAACpB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACC,MAAM,CAAC;QACrF,IAAI,CAACC,2BAA2B,GAAG,IAAI,CAACvB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACG,OAAO,CAAC;QACvF,IAAI,CAACC,0BAA0B,GAAG,IAAI,CAACzB,cAAc,CAAC,IAAI,CAACqB,kBAAkB,CAACK,MAAM,CAAC;QACrF;MACJ,KAAK,gBAAgB;QACjB,IAAI,CAAC1K,mBAAmB,CAAC,CAAC;QAC1B,IAAI,CAAC8J,gBAAgB,GAAG,IAAI,CAACd,cAAc,CAAC,IAAI,CAACe,cAAc,CAAC;QAChE;MACJ,KAAK,sBAAsB;QACvB,IAAI,CAAC/J,mBAAmB,CAAC,CAAC;QAC1B,IAAI,CAACgK,sBAAsB,GAAG,IAAI,CAAChB,cAAc,CAAC,IAAI,CAACiB,oBAAoB,CAAC;QAC5E;MACJ,KAAK,sBAAsB;QACvB,IAAI,CAACjK,mBAAmB,CAAC,CAAC;QAC1B,IAAI,CAACkK,sBAAsB,GAAG,IAAI,CAAClB,cAAc,CAAC,IAAI,CAACmB,oBAAoB,CAAC;QAC5E;MACJ,KAAK,iBAAiB;MACtB,KAAK,uBAAuB;QACxB,IAAI,IAAI,CAACqX,YAAY,EAAE;UACnB,IAAI,CAACA,YAAY,CAACthB,OAAO,CAAC,CAAC;UAC3B,IAAI,CAACshB,YAAY,GAAG,IAAI;QAC5B;QACA,IAAI,CAACA,YAAY,GAAG,IAAIznB,YAAY,CAAC,IAAI,CAAC;QAC1C,IAAI,CAAC6P,sBAAsB,GAAG,IAAI,CAACZ,cAAc,CAAC,IAAI,CAAC9C,aAAa,CAAC2D,eAAe,CAAC;QACrF,IAAI,CAACF,uBAAuB,GAAG,IAAI,CAACX,cAAc,CAAC,IAAI,CAACvL,iBAAiB,CAACyH,KAAK,CAACI,qBAAqB,CAAC;QACtG;MACJ;QACI,IAAI,CAAClF,cAAc,CAAC,IAAI,CAACC,WAAW,CAAC;QACrC;IACR;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIjF,QAAQ,CAACxE,SAAS,CAACgkB,aAAa,GAAG,YAAY;IAC3C,IAAI,CAAC1F,gBAAgB,CAAC,CAAC;IACvB,IAAI,IAAI,CAACzU,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAACH,OAAO,CAAC,CAAC;IAC/B;IACA,IAAI,IAAI,CAACL,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACK,OAAO,CAAC,CAAC;IAC9B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIlF,QAAQ,CAACxE,SAAS,CAAC2xB,eAAe,GAAG,UAAUhtB,OAAO,EAAE;IACpDA,OAAO,GAAGzC,UAAU,CAACyC,OAAO,CAAC;IAC7B,IAAIitB,IAAI,GAAGjtB,OAAO,CAACoc,YAAY,CAAC,WAAW,CAAC;IAC5C,IAAI6Q,IAAI,EAAE;MACN,OAAO,IAAI,CAACtrB,SAAS,CAACurB,cAAc,CAACD,IAAI,CAAC;IAC9C;IACA,OAAO,CAAC,CAAC;EACb,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIptB,QAAQ,CAACxE,SAAS,CAAC8xB,eAAe,GAAG,UAAUlhB,SAAS,EAAEC,OAAO,EAAE6H,UAAU,EAAE;IAC3E,IAAI9T,KAAK,GAAG,IAAI;IAChB,IAAImtB,UAAU;IACd,IAAIC,QAAQ;IACZ,IAAIC,QAAQ,GAAG,IAAI,CAAClZ,eAAe,CAAC1D,KAAK;IACzC,IAAIzE,SAAS,YAAYjG,IAAI,IAAI,OAAQiG,SAAU,KAAK,QAAQ,EAAE;MAC9DmhB,UAAU,GAAGnhB,SAAS;MACtBohB,QAAQ,GAAGnhB,OAAO;IACtB,CAAC,MACI;MACDohB,QAAQ,GAAGrhB,SAAS;MACpBmhB,UAAU,GAAGnhB,SAAS,CAAC,IAAI,CAACN,WAAW,CAACM,SAAS,CAAC;MAClDohB,QAAQ,GAAGphB,SAAS,CAAC,IAAI,CAACN,WAAW,CAACO,OAAO,CAAC;MAC9C,IAAI,IAAI,CAAC7H,YAAY,EAAE;QACnB0P,UAAU,GAAG,IAAI,CAACpS,SAAS,CAAC4rB,sBAAsB,CAACthB,SAAS,CAAC;MACjE;IACJ;IACA,IAAI7O,iBAAiB,CAACgwB,UAAU,CAAC,IAAIhwB,iBAAiB,CAACiwB,QAAQ,CAAC,EAAE;MAC9D,OAAO,IAAI;IACf;IACAD,UAAU,GAAG,IAAI,CAAC9c,WAAW,CAAC8c,UAAU,CAAC;IACzCC,QAAQ,GAAG,IAAI,CAAC/c,WAAW,CAAC+c,QAAQ,CAAC;IACrC,IAAIG,eAAe,GAAG,IAAI,CAAC7rB,SAAS,CAAC8rB,YAAY,CAACL,UAAU,EAAEC,QAAQ,CAAC;IACvE,IAAI,CAACjwB,iBAAiB,CAAC2W,UAAU,CAAC,IAAI,IAAI,CAAC1P,YAAY,IAAI,IAAI,CAACA,YAAY,CAACyjB,iBAAiB,CAAChsB,MAAM,GAAG,CAAC,EAAE;MACvG0xB,eAAe,GACX,IAAI,CAAC7rB,SAAS,CAAC+rB,sBAAsB,CAAC,IAAI,CAACrpB,YAAY,CAACyjB,iBAAiB,CAAClhB,QAAQ,CAACmN,UAAU,CAAClN,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE2mB,eAAe,CAAC;IACxI;IACA,IAAIF,QAAQ,EAAE;MACV,IAAIA,QAAQ,CAACK,IAAI,EAAE;QACfH,eAAe,GAAGA,eAAe,CAACI,MAAM,CAAC,UAAUld,KAAK,EAAE;UAAE,OAAOA,KAAK,CAACid,IAAI,KAAKL,QAAQ,CAACK,IAAI;QAAE,CAAC,CAAC;MACvG,CAAC,MACI;QACDH,eAAe,GAAGA,eAAe,CAACI,MAAM,CAAC,UAAUld,KAAK,EAAE;UACtD,OAAOA,KAAK,CAACzQ,KAAK,CAAC0L,WAAW,CAACC,EAAE,CAAC,KAAK0hB,QAAQ,CAACrtB,KAAK,CAAC0L,WAAW,CAACC,EAAE,CAAC;QACzE,CAAC,CAAC;MACN;IACJ;IACA,OAAQ4hB,eAAe,CAAC1xB,MAAM,GAAG,CAAC,GAAI,KAAK,GAAG,IAAI;EACtD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI+D,QAAQ,CAACxE,SAAS,CAACwyB,IAAI,GAAG,UAAUC,QAAQ,EAAE;IAC1C,IAAI,CAACC,qBAAqB,CAACD,QAAQ,EAAE,KAAK,CAAC;EAC/C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIjuB,QAAQ,CAACxE,SAAS,CAAC2yB,GAAG,GAAG,UAAUF,QAAQ,EAAE;IACzC,IAAI,CAACC,qBAAqB,CAACD,QAAQ,EAAE,IAAI,CAAC;EAC9C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIjuB,QAAQ,CAACxE,SAAS,CAAC4yB,KAAK,GAAG,UAAUxR,aAAa,EAAE;IAChD,IAAIxc,KAAK,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,CAAC8Z,cAAc,IAAI,CAAC,IAAI,CAAClY,wBAAwB,EAAE;MACxD;IACJ;IACA,IAAI,CAAC4a,aAAa,CAAC/e,SAAS,CAACqe,QAAQ,CAAC,cAAc,CAAC,IAAI,CAACU,aAAa,CAAC/e,SAAS,CAACqe,QAAQ,CAAC,iBAAiB,CAAC,EAAE;MAC3G;IACJ;IACA,IAAImS,aAAa,GAAG,IAAIC,YAAY,CAAC,CAAC;IACtC,IAAI,CAAC/wB,iBAAiB,CAACgxB,SAAS,CAACC,SAAS,CAAC,EAAE;MACzCD,SAAS,CAACC,SAAS,CAACC,QAAQ,CAAC,CAAC,CACzBC,IAAI,CAAC,UAAUC,IAAI,EAAE;QACtBN,aAAa,CAACO,OAAO,CAAC,YAAY,EAAED,IAAI,CAAC;QACzC,IAAIE,UAAU,GAAG,IAAIC,cAAc,CAAC,OAAO,EAAE;UACzCC,OAAO,EAAE,IAAI;UACbC,UAAU,EAAE;QAChB,CAAC,CAAC;QACFh0B,MAAM,CAACuB,cAAc,CAACsyB,UAAU,EAAE,eAAe,EAAE;UAC/C3qB,KAAK,EAAEmqB;QACX,CAAC,CAAC;QACFjuB,KAAK,CAAC6B,yBAAyB,CAACgtB,YAAY,CAACJ,UAAU,EAAEjS,aAAa,CAAC;MAC3E,CAAC,CAAC,CACGsS,KAAK,CAAC,UAAUC,GAAG,EAAE;QACtB,MAAMA,GAAG;MACb,CAAC,CAAC;IACN;EACJ,CAAC;EACDnvB,QAAQ,CAACxE,SAAS,CAAC0yB,qBAAqB,GAAG,UAAUD,QAAQ,EAAEmB,KAAK,EAAE;IAClE,IAAIhvB,KAAK,GAAG,IAAI;IAChB,IAAI,CAAC6tB,QAAQ,IAAI,CAAC,IAAI,CAAC/T,cAAc,IAAI,CAAC,IAAI,CAAClY,wBAAwB,EAAE;MACrE;IACJ;IACA,IAAIqtB,YAAY,GAAGpB,QAAQ;IAC3B,IAAIqB,iBAAiB,GAAG,EAAE;IAC1BD,YAAY,CAACE,OAAO,CAAC,UAAUpvB,OAAO,EAAE;MACpC,IAAIA,OAAO,CAACtC,SAAS,CAACqe,QAAQ,CAACrc,GAAG,CAAC2vB,iBAAiB,CAAC,EAAE;QACnD,IAAIC,WAAW,GAAGrvB,KAAK,CAAC+sB,eAAe,CAAChtB,OAAO,CAAC;QAChD,IAAIsvB,WAAW,EAAE;UACbH,iBAAiB,CAAC5uB,IAAI,CAAC+uB,WAAW,CAAC;QACvC;MACJ;IACJ,CAAC,CAAC;IACF,IAAIH,iBAAiB,CAACrzB,MAAM,GAAG,CAAC,EAAE;MAC9B,IAAI,CAACgG,yBAAyB,CAACytB,sBAAsB,CAACN,KAAK,EAAEE,iBAAiB,CAAC;IACnF;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACItvB,QAAQ,CAACxE,SAAS,CAACm0B,UAAU,GAAG,UAAU9M,IAAI,EAAErR,MAAM,EAAEoe,WAAW,EAAEC,UAAU,EAAE;IAC7E,IAAIre,MAAM,KAAK,KAAK,IAAI,CAACoe,WAAW,EAAE;MAClC/M,IAAI,CAACzW,SAAS,GAAG,IAAI,CAACqE,WAAW,CAACoS,IAAI,CAACzW,SAAS,CAAC;MACjDyW,IAAI,CAACxW,OAAO,GAAG,IAAI,CAACoE,WAAW,CAACoS,IAAI,CAACxW,OAAO,CAAC;MAC7C,IAAI,CAAC9O,iBAAiB,CAACslB,IAAI,CAAC1iB,OAAO,CAAC,EAAE;QAClC0iB,IAAI,CAAC1iB,OAAO,GAAGzC,UAAU,CAACmlB,IAAI,CAAC1iB,OAAO,CAAC;MAC3C;IACJ,CAAC,MACI;MACD0iB,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACM,SAAS,CAAC,GAAG,IAAI,CAACqE,WAAW,CAACoS,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACM,SAAS,CAAC,CAAC;MACrFyW,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACO,OAAO,CAAC,GAAG,IAAI,CAACoE,WAAW,CAACoS,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACO,OAAO,CAAC,CAAC;IACrF;IACA,IAAI,CAAC0I,aAAa,GAAGvD,MAAM;IAC3B,IAAIA,MAAM,KAAK,KAAK,EAAE;MAClB,IAAI,CAAC+C,eAAe,CAAC1D,KAAK,GAAGgS,IAAI;IACrC;IACA,IAAI,CAAChe,WAAW,CAAC8qB,UAAU,CAAC9M,IAAI,EAAErR,MAAM,EAAEoe,WAAW,EAAEC,UAAU,CAAC;EACtE,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI7vB,QAAQ,CAACxE,SAAS,CAACs0B,WAAW,GAAG,YAAY;IACzC,IAAI,IAAI,CAACjrB,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACkrB,WAAW,CAAC,CAAC;IAClC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI/vB,QAAQ,CAACxE,SAAS,CAACw0B,kBAAkB,GAAG,UAAUnN,IAAI,EAAE;IACpD,IAAIziB,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAAC6E,WAAW,KAAK,MAAM,IAAI1H,iBAAiB,CAACslB,IAAI,CAAC,EAAE;MACxD;IACJ;IACA,IAAItlB,iBAAiB,CAACslB,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACC,EAAE,CAAC,CAAC,EAAE;MAC9C,IAAI,IAAI,CAAC9G,WAAW,KAAK,QAAQ,IAAI,IAAI,CAACA,WAAW,KAAK,aAAa,IAAI1H,iBAAiB,CAAC,IAAI,CAAC+U,UAAU,CAAC,EAAE;QAC3G;MACJ;MACA,IAAI2d,QAAQ,GAAG;QACX7jB,SAAS,EAAE,IAAI,CAACkI,eAAe,CAAClI,SAAS,GAAG,IAAI,CAACqE,WAAW,CAACoS,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACM,SAAS,CAAC,CAAC;QAC9FC,OAAO,EAAE,IAAI,CAACiI,eAAe,CAACjI,OAAO,GAAG,IAAI,CAACoE,WAAW,CAACoS,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACO,OAAO,CAAC,CAAC;QACxFK,QAAQ,EAAE,IAAI,CAAC4H,eAAe,CAAC5H,QAAQ,GACnC,CAACnP,iBAAiB,CAACslB,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACY,QAAQ,CAAC,CAAC,GAAGmW,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACY,QAAQ,CAAC,GAAG;MAChG,CAAC;MACD,IAAIN,SAAS,GAAG,IAAI,CAACkG,UAAU,CAAC4d,eAAe,CAAC,IAAI/pB,IAAI,CAAC8pB,QAAQ,CAAC7jB,SAAS,CAAC,CAAC;MAC7E,IAAIA,SAAS,EAAE;QACX,IAAIe,KAAK,GAAG,GAAG,GAAGtN,GAAG,CAAC8b,gBAAgB,GAAG,cAAc,GAAGvP,SAAS,CAAChG,OAAO,CAAC,CAAC,GAAG,IAAI;QACpF,IAAI,IAAI,CAAC/D,iBAAiB,CAACyH,KAAK,CAACvF,SAAS,CAACtI,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAACmH,aAAa,CAAC4Q,eAAe,IACrF,IAAI,CAACxP,YAAY,IAAI,IAAI,CAAC1C,SAAS,EAAE;UACxCmuB,QAAQ,CAAC/b,UAAU,GAAG,IAAI,CAACpS,SAAS,CAAC4rB,sBAAsB,CAAC7K,IAAI,CAAC;UACjE1V,KAAK,GAAG,GAAG,GAAGtN,GAAG,CAAC8b,gBAAgB,GAAG,cAAc,GAAGvP,SAAS,CAAChG,OAAO,CAAC,CAAC,GAAG,uBAAuB,GAAG6pB,QAAQ,CAAC/b,UAAU,GAAG,IAAI;QACpI;QACA,IAAIic,QAAQ,GAAG,IAAI,CAAChwB,OAAO,CAACsC,aAAa,CAAC0K,KAAK,CAAC;QAChD,IAAIgjB,QAAQ,EAAE;UACVA,QAAQ,CAACnV,KAAK,CAAC,CAAC;UAChBiV,QAAQ,CAAC9vB,OAAO,GAAGgwB,QAAQ;UAC3B,IAAI,CAACpR,MAAM,CAACnf,MAAM,CAACwwB,SAAS,EAAEH,QAAQ,CAAC;QAC3C;MACJ;IACJ,CAAC,MACI;MACD,IAAII,GAAG,GAAG,IAAI,CAACvD,oBAAoB,CAAC,CAAC,CAACiB,MAAM,CAAC,UAAUnnB,IAAI,EAAE;QACzD,OAAOic,IAAI,CAACziB,KAAK,CAAC0L,WAAW,CAACC,EAAE,CAAC,KAAKnF,IAAI,CAACxG,KAAK,CAAC0L,WAAW,CAACC,EAAE,CAAC;MACpE,CAAC,CAAC;MACF,IAAIskB,GAAG,CAACp0B,MAAM,IAAI,CAAC,EAAE;QACjB;MACJ;MACA,IAAIq0B,WAAW,GAAGD,GAAG,CAAC,CAAC,CAAC;MACxB,IAAIxN,IAAI,CAAC,IAAI,CAAC/W,WAAW,CAACc,cAAc,CAAC,EAAE;QACvC,IAAI2jB,SAAS,GAAGF,GAAG,CAACtC,MAAM,CAAC,UAAUyC,CAAC,EAAE;UACpC,OAAOA,CAAC,CAACpwB,KAAK,CAAC0L,WAAW,CAACM,SAAS,CAAC,CAAChG,OAAO,CAAC,CAAC,KAAKyc,IAAI,CAACziB,KAAK,CAAC0L,WAAW,CAACM,SAAS,CAAC,CAAChG,OAAO,CAAC,CAAC;QACnG,CAAC,CAAC;QACF,IAAImqB,SAAS,CAACt0B,MAAM,GAAG,CAAC,EAAE;UACtBq0B,WAAW,GAAGC,SAAS,CAAC,CAAC,CAAC;QAC9B;MACJ;MACA,IAAIpwB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACsC,aAAa,CAAC,iBAAiB,GAAG6tB,WAAW,CAACxC,IAAI,GAAG,IAAI,CAAC;MACrF,IAAI3tB,OAAO,EAAE;QACT,IAAI,CAAC2B,SAAS,CAAC2uB,8BAA8B,CAAC,CAAC;QAC/C,IAAI,CAAC3uB,SAAS,CAAC4uB,uBAAuB,CAAC,CAACvwB,OAAO,CAAC,EAAE,KAAK,CAAC;QACxD,IAAI,CAACoU,eAAe,GAAG;UAAE1D,KAAK,EAAEyf,WAAW;UAAEnwB,OAAO,EAAEA;QAAQ,CAAC;QAC/D,IAAI,IAAI,CAAC8E,WAAW,KAAK,QAAQ,IAAI,IAAI,CAACA,WAAW,KAAK,aAAa,EAAE;UACrErH,QAAQ,CAAC,CAAC,IAAI,CAAC2W,eAAe,CAACpU,OAAO,CAAC,EAAEN,GAAG,CAAC8wB,oBAAoB,CAAC;QACtE;QACA,IAAI,CAAC5R,MAAM,CAACnf,MAAM,CAACgxB,UAAU,EAAE,IAAI,CAACrc,eAAe,CAAC;MACxD;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIvU,QAAQ,CAACxE,SAAS,CAACq1B,mBAAmB,GAAG,YAAY;IACjD,IAAI,IAAI,CAACthB,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,CAACuhB,cAAc,CAAC,IAAI,CAAC;IACxC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI9wB,QAAQ,CAACxE,SAAS,CAACu1B,gBAAgB,GAAG,UAAU9f,IAAI,EAAE;IAClD,IAAI7Q,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACmP,UAAU,EAAE;MACjB,IAAIyhB,SAAS,GAAG;QACZvhB,IAAI,EAAE,cAAc;QACpB0B,MAAM,EAAE,KAAK;QACbhR,OAAO,EAAE,IAAI,CAACoP,UAAU,CAAC0hB,WAAW,CAAC9wB,OAAO;QAC5C0iB,IAAI,EAAE5R,IAAI,CAAC4R,IAAI;QACfqO,aAAa,EAAEjgB,IAAI,CAACigB;MACxB,CAAC;MACD,IAAI,CAAC9f,OAAO,CAACxR,MAAM,CAACuxB,SAAS,EAAEH,SAAS,EAAE,UAAUI,SAAS,EAAE;QAC3D,IAAI,CAACA,SAAS,CAACjgB,MAAM,EAAE;UACnB/Q,KAAK,CAACmP,UAAU,CAAC8hB,mBAAmB,CAAC,cAAc,EAAEpgB,IAAI,CAAC4R,IAAI,CAAC;QACnE;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI7iB,QAAQ,CAACxE,SAAS,CAAC81B,iBAAiB,GAAG,YAAY;IAC/C,IAAIlxB,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACmP,UAAU,EAAE;MACjB,IAAI0B,IAAI,GAAG;QACPxB,IAAI,EAAE,cAAc;QACpB0B,MAAM,EAAE,KAAK;QACb0R,IAAI,EAAE,IAAI,CAACtO,eAAe,CAAC1D,KAAK;QAChC1Q,OAAO,EAAE,IAAI,CAACoP,UAAU,CAAC0hB,WAAW,CAAC9wB;MACzC,CAAC;MACD,IAAI,CAACiR,OAAO,CAACxR,MAAM,CAAC2xB,UAAU,EAAEtgB,IAAI,EAAE,UAAUmgB,SAAS,EAAE;QACvD,IAAI,CAACA,SAAS,CAACjgB,MAAM,EAAE;UACnB/Q,KAAK,CAACmP,UAAU,CAAC0hB,WAAW,CAACO,IAAI,CAAC,CAAC;QACvC;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIxxB,QAAQ,CAACxE,SAAS,CAACi2B,YAAY,GAAG,YAAY;IAC1C,IAAI,IAAI,CAACrL,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAACnQ,KAAK,CAAC,CAAC;IAC7B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIjW,QAAQ,CAACxE,SAAS,CAACk2B,gBAAgB,GAAG,UAAU1P,KAAK,EAAE;IACnD,IAAKzkB,iBAAiB,CAACykB,KAAK,CAAC,IAAIA,KAAK,CAAC/lB,MAAM,KAAK,CAAC,IAAK,CAAC,IAAI,CAACqW,UAAU,EAAE;MACtE,OAAO,EAAE;IACb;IACA,OAAO,IAAI,CAACA,UAAU,CAACof,gBAAgB,CAAC1P,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC;EAC5D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIhiB,QAAQ,CAACxE,SAAS,CAACm2B,YAAY,GAAG,UAAUliB,IAAI,EAAE;IAC9C,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;MAAEA,IAAI,GAAG,SAAS;IAAE;IACzC,IAAI,CAAC,IAAI,CAAC6C,UAAU,EAAE;MAClB,OAAO,EAAE;IACb;IACA,QAAQ7C,IAAI;MACR,KAAK,UAAU;MACf,KAAK,MAAM;QACP,OAAO,IAAI,CAAC6C,UAAU,CAACsf,cAAc,CAAC/lB,SAAS,EAAE,IAAI,CAACyG,UAAU,CAACuf,mBAAmB,CAACpiB,IAAI,CAAC,CAAC;MAC/F,KAAK,SAAS;QACV,OAAO,IAAI,CAAC+c,mBAAmB,CAAC,CAAC;IACzC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIxsB,QAAQ,CAACxE,SAAS,CAACs2B,qBAAqB,GAAG,UAAU5d,UAAU,EAAE;IAC7D,IAAI,IAAI,CAAC1P,YAAY,IAAI,IAAI,CAACpB,aAAa,CAAC4Q,eAAe,EAAE;MACzD,IAAI,CAACxP,YAAY,CAACstB,qBAAqB,CAAC5d,UAAU,CAAC;IACvD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIlU,QAAQ,CAACxE,SAAS,CAACu2B,sBAAsB,GAAG,UAAUhmB,EAAE,EAAEI,IAAI,EAAE;IAC5D,IAAI,IAAI,CAAC3H,YAAY,EAAE;MACnB,OAAO,IAAI,CAACA,YAAY,CAACutB,sBAAsB,CAAChmB,EAAE,EAAEI,IAAI,CAAC;IAC7D;IACA,OAAO,IAAI;EACf,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACInM,QAAQ,CAACxE,SAAS,CAACw2B,WAAW,GAAG,UAAUztB,SAAS,EAAE4H,IAAI,EAAE4E,KAAK,EAAE;IAC/D,IAAI,CAACvM,YAAY,CAACwtB,WAAW,CAACztB,SAAS,EAAE4H,IAAI,EAAE4E,KAAK,CAAC;EACzD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI/Q,QAAQ,CAACxE,SAAS,CAACy2B,cAAc,GAAG,UAAUrI,UAAU,EAAEzd,IAAI,EAAE;IAC5D,IAAI,CAAC3H,YAAY,CAACytB,cAAc,CAACrI,UAAU,EAAEzd,IAAI,CAAC;EACtD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACInM,QAAQ,CAACxE,SAAS,CAACsJ,OAAO,GAAG,YAAY;IACrC,IAAI,IAAI,CAACshB,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAACthB,OAAO,CAAC,CAAC;MAC3B,IAAI,CAACshB,YAAY,GAAG,IAAI;IAC5B;IACA,IAAI,CAACtgB,aAAa,CAAC,CAAC;IACpB,IAAI,CAAC7H,WAAW,CAAC,CAAC;IAClB,IAAI,CAACmlB,YAAY,CAAC,CAAC;IACnB,IAAI,CAACje,mBAAmB,CAAC,CAAC;IAC1B,IAAI,IAAI,CAACrD,SAAS,EAAE;MAChB,IAAI,CAACA,SAAS,CAACgD,OAAO,CAAC,CAAC;MACxB,IAAI,CAAChD,SAAS,GAAG,IAAI;IACzB;IACA,IAAI,IAAI,CAACC,cAAc,EAAE;MACrB,IAAI,CAACA,cAAc,CAAC+C,OAAO,CAAC,CAAC;MAC7B,IAAI,CAAC/C,cAAc,GAAG,IAAI;IAC9B;IACA,IAAI,IAAI,CAACG,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAAC4C,OAAO,CAAC,CAAC;MAC3B,IAAI,CAAC5C,YAAY,GAAG,IAAI;IAC5B;IACA,IAAI,IAAI,CAACD,yBAAyB,EAAE;MAChC,IAAI,CAACA,yBAAyB,CAAC6C,OAAO,CAAC,CAAC;MACxC,IAAI,CAAC7C,yBAAyB,GAAG,IAAI;IACzC;IACA,IAAI,IAAI,CAACP,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAACoD,OAAO,CAAC,CAAC;MAC3B,IAAI,CAACpD,YAAY,GAAG,IAAI;IAC5B;IACA,IAAI,IAAI,CAACkqB,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAAC9mB,OAAO,CAAC,CAAC;IAC9B;IACA,IAAI,IAAI,CAACwN,UAAU,EAAE;MACjB,IAAI,CAACzO,cAAc,CAAC,CAAC;MACrB,IAAI,CAACyO,UAAU,CAAC4f,mBAAmB,CAAC,CAAC;MACrC,IAAI,CAAC5f,UAAU,CAACxN,OAAO,CAAC,CAAC;MACzB,IAAI,CAACwN,UAAU,GAAG,IAAI;IAC1B;IACA,IAAI,IAAI,CAACzM,mBAAmB,EAAE;MAC1B,IAAI,CAACA,mBAAmB,CAACf,OAAO,CAAC,CAAC;MAClC,IAAI,CAACe,mBAAmB,GAAG,IAAI;IACnC;IACA,IAAI,IAAI,CAACuH,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,CAACtI,OAAO,CAAC,CAAC;MACzB,IAAI,CAACsI,UAAU,GAAG,IAAI;IAC1B;IACA,IAAI,IAAI,CAACH,UAAU,EAAE;MACjB,IAAI,CAACA,UAAU,CAACnI,OAAO,CAAC,CAAC;MACzB,IAAI,CAACmI,UAAU,GAAG,IAAI;IAC1B;IACAhN,MAAM,CAACzE,SAAS,CAACsJ,OAAO,CAACzE,IAAI,CAAC,IAAI,CAAC;IACnC,IAAIkT,OAAO,GAAG,CACV,WAAW,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,mBAAmB,EAAE,YAAY,EAAE,cAAc,EAC7G,qBAAqB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,cAAc,EAAE,mBAAmB,EACvG,mBAAmB,EAAE,aAAa,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,UAAU,EAAE,YAAY,EAC9G,iBAAiB,EAAE,WAAW,EAAE,gBAAgB,EAAE,eAAe,EAAE,iBAAiB,EAAE,aAAa,EAAE,eAAe,EACpH,WAAW,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,cAAc,EAAE,aAAa,EAAE,mBAAmB,EACzG,iBAAiB,EAAE,iBAAiB,EAAE,cAAc,CACvD;IACD,KAAK,IAAIjS,EAAE,GAAG,CAAC,EAAE6wB,SAAS,GAAG5e,OAAO,EAAEjS,EAAE,GAAG6wB,SAAS,CAACl2B,MAAM,EAAEqF,EAAE,EAAE,EAAE;MAC/D,IAAIskB,MAAM,GAAGuM,SAAS,CAAC7wB,EAAE,CAAC;MAC1B,IAAI,CAAC,EAAE,GAAGskB,MAAM,CAAC,GAAG,IAAI;IAC5B;IACA9lB,IAAI,CAACsyB,cAAc,CAAC,IAAI,CAACjyB,OAAO,CAAC;IACjC,IAAIM,aAAa,GAAG,CAACZ,GAAG,CAACc,IAAI,EAAEd,GAAG,CAACgB,GAAG,EAAEhB,GAAG,CAACkB,YAAY,EAAElB,GAAG,CAACsB,UAAU,CAAC;IACzE,IAAI,IAAI,CAACC,QAAQ,EAAE;MACfX,aAAa,GAAGA,aAAa,CAAC4xB,MAAM,CAAC,IAAI,CAACjxB,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClE;IACA1D,WAAW,CAAC,CAAC,IAAI,CAACwC,OAAO,CAAC,EAAEM,aAAa,CAAC;EAC9C,CAAC;EACD/E,UAAU,CAAC,CACPe,QAAQ,CAAC,MAAM,CAAC,CACnB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;EACvCE,UAAU,CAAC,CACPe,QAAQ,CAAC,MAAM,CAAC,CACnB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;EACxCE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;EACnDE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;EAC9CE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;EAC9CE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CAAC,CACd,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACPkB,UAAU,CAAC,EAAE,EAAEmD,WAAW,CAAC,CAC9B,EAAEC,QAAQ,CAACxE,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;EAC9CE,UAAU,CAAC,CACPe,QAAQ,CAAC,MAAM,CAAC,CACnB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAC3D,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;EACvCE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI0J,IAAI,CAAC,CAAC,CAAC,CACvB,EAAEnG,QAAQ,CAACxE,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;EAC9CE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI0J,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CACjC,EAAEnG,QAAQ,CAACxE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EACzCE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI0J,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CACnC,EAAEnG,QAAQ,CAACxE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EACzCE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPe,QAAQ,CAAC,WAAW,CAAC,CACxB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;EAC9CE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CAAC,CACd,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;EAChDE,UAAU,CAAC,CACPe,QAAQ,CAAC,UAAU,CAAC,CACvB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC1CE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAC5B,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC1CE,UAAU,CAAC,CACPe,QAAQ,CAAC,EAAE,CAAC,CACf,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPe,QAAQ,CAAC,OAAO,CAAC,CACpB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPe,QAAQ,CAAC,OAAO,CAAC,CACpB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EACzCE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;EACrDE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;EACpDE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;EAClDE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACP+B,OAAO,CAAC,CAAC,CAAC,EAAEqB,SAAS,CAAC,CACzB,EAAEkB,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACP+B,OAAO,CAAC,CAAC,CAAC,EAAEsB,SAAS,CAAC,CACzB,EAAEiB,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC;EAC1DE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;EAClDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;EACpDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;EACnDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;EACpDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;EACnDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;EACrDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;EAC9CE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC1CE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,yBAAyB,EAAE,KAAK,CAAC,CAAC;EACzDE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,wBAAwB,EAAE,KAAK,CAAC,CAAC;EACxDE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,yBAAyB,EAAE,KAAK,CAAC,CAAC;EACzDE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;EAChDE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;EAChDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CAAC,CACd,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;EAClDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;EAChDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;EACtDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;EACtDE,UAAU,CAAC,CACP+B,OAAO,CAAC,CAAC,CAAC,EAAEuB,kBAAkB,CAAC,CAClC,EAAEgB,QAAQ,CAACxE,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;EACpDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CAAC,CACd,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;EACjDE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,qBAAqB,EAAE,KAAK,CAAC,CAAC;EACrDE,UAAU,CAAC,CACPe,QAAQ,CAAC,IAAI,CAAC,CACjB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,4BAA4B,EAAE,KAAK,CAAC,CAAC;EAC5DE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC1CE,UAAU,CAAC,CACP+B,OAAO,CAAC,CAAC,CAAC,EAAE2B,aAAa,CAAC,CAC7B,EAAEY,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACPe,QAAQ,CAACkD,YAAY,CAAC,CACzB,EAAEK,QAAQ,CAACxE,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;EACpDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,wBAAwB,EAAE,KAAK,CAAC,CAAC;EACxDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;EACtDE,UAAU,CAAC,CACP+B,OAAO,CAAC,CAAC,CAAC,EAAE4B,KAAK,CAAC,CACrB,EAAEW,QAAQ,CAACxE,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;EACvCE,UAAU,CAAC,CACPkB,UAAU,CAAC,EAAE,EAAE0C,SAAS,CAAC,CAC5B,EAAEU,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPkB,UAAU,CAAC,EAAE,EAAEqC,UAAU,CAAC,CAC7B,EAAEe,QAAQ,CAACxE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC1CE,UAAU,CAAC,CACPe,QAAQ,CAAC,KAAK,CAAC,CAClB,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;EAChDE,UAAU,CAAC,CACPe,QAAQ,CAAC,CAAC,CACb,EAAEuD,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;EACzCE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;EACjDE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;EACjDE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;EACvCE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;EACxCE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;EAChDE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;EAClDE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;EAC/CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;EACtCE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC1CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;EAC1CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;EACpDE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,CAAC;EACnDE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EAC3CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CE,UAAU,CAAC,CACPgB,KAAK,CAAC,CAAC,CACV,EAAEsD,QAAQ,CAACxE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;EAC7CwE,QAAQ,GAAGtE,UAAU,CAAC,CAClB8B,qBAAqB,CACxB,EAAEwC,QAAQ,CAAC;EACZ,OAAOA,QAAQ;AACnB,CAAC,CAACxD,SAAS,CAAE;AACb,SAASwD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}