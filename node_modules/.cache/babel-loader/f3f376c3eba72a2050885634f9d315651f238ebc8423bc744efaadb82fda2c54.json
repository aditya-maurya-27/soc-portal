{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Portal\\\\soc-portal\\\\src\\\\pages\\\\Shifts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/Shifts.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst shiftTimeMapping = {\n  Night: {\n    start: \"00:00\",\n    end: \"08:00\"\n  },\n  Morning: {\n    start: \"08:00\",\n    end: \"16:00\"\n  },\n  Evening: {\n    start: \"16:00\",\n    end: \"24:00\"\n  }\n};\nconst Shifts = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n  const [shifts, setShifts] = useState([]);\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const [commentsMap, setCommentsMap] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\n  const [newShiftType, setNewShiftType] = useState(\"Night\");\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const [analysts, setAnalysts] = useState([]);\n  const [editShiftType, setEditShiftType] = useState(\"Night\");\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\n  const fetchShifts = () => {\n    fetch(\"http://192.168.29.194:5000/api/shifts\").then(res => res.json()).then(data => setShifts(data)).catch(err => console.error(\"Failed to fetch shifts:\", err));\n  };\n  useEffect(() => {\n    fetchShifts();\n    fetch(\"http://192.168.29.194:5000/api/analysts\").then(res => res.json()).then(data => setAnalysts(data)).catch(err => console.error(\"Failed to fetch analysts:\", err));\n  }, []);\n  const handleEmployeeToggle = username => {\n    setSelectedEmployees(prev => prev.includes(username) ? prev.filter(u => u !== username) : [...prev, username]);\n  };\n  const handleEventClick = info => {\n    const shift = info.event;\n    setSelectedShift(shift);\n    setComment(commentsMap[shift.id] || \"\");\n    if (isAdmin) {\n      const date = shift.start.toISOString().slice(0, 10);\n      let shiftType = \"Morning\";\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\n      const firstEmp = shift.title.split(\" - \")[0];\n      const matchedEmp = analysts.find(emp => emp.username === firstEmp);\n      setEditShiftType(shiftType);\n      setEditShiftDate(date);\n      setEditEmployeeId((matchedEmp === null || matchedEmp === void 0 ? void 0 : matchedEmp.id) || \"\");\n    }\n    setIsModalOpen(true);\n  };\n  const isWithinShift = () => {\n    if (!selectedShift) return false;\n    const now = new Date();\n    const start = new Date(selectedShift.start);\n    const end = new Date(selectedShift.end);\n    return now >= start && now <= end;\n  };\n  const handleSave = () => {\n    if (selectedShift) {\n      setCommentsMap(prev => ({\n        ...prev,\n        [selectedShift.id]: comment\n      }));\n    }\n    setIsModalOpen(false);\n  };\n  const handleAddShift = async () => {\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\n      alert(\"Please fill all fields.\");\n      return;\n    }\n    const {\n      start,\n      end\n    } = shiftTimeMapping[newShiftType];\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\n    if (end === \"00:00\") {\n      endDateTime.setDate(endDateTime.getDate() + 1);\n    }\n    const selectedEmployeeObjects = analysts.filter(emp => selectedEmployees.includes(emp.username));\n    try {\n      for (let emp of selectedEmployeeObjects) {\n        const response = await fetch(\"http://192.168.29.194:5000/api/create_shift\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: newShiftDate,\n            shift_type: newShiftType.toLowerCase(),\n            employee_ids: [emp.id]\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          alert(\"Error: \" + data.error);\n          return;\n        }\n      }\n      fetchShifts();\n      alert(\"Shift(s) created successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to create shift.\");\n    }\n    setIsAddModalOpen(false);\n    setSelectedEmployees([]);\n  };\n  const handleEditShift = async () => {\n    try {\n      var _analysts$find;\n      const shiftId = selectedShift.id;\n      const {\n        start,\n        end\n      } = shiftTimeMapping[editShiftType];\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\n      if (end === \"00:00\") {\n        endDateTime.setDate(endDateTime.getDate() + 1);\n      }\n      const selectedUsername = ((_analysts$find = analysts.find(emp => emp.id === editEmployeeId)) === null || _analysts$find === void 0 ? void 0 : _analysts$find.username) || \"\";\n      const isDuplicate = shifts.some(shift => {\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\n        const sameEmployee = shift.title.includes(selectedUsername);\n        const differentShift = String(shift.id) !== String(shiftId);\n        return differentShift && sameStart && sameEnd && sameEmployee;\n      });\n      if (isDuplicate) {\n        alert(\"Another shift already exists in that slot!\");\n        return;\n      }\n      const response = await fetch(\"http://192.168.29.194:5000/api/edit_shift\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: shiftId,\n          date: editShiftDate,\n          shift_type: editShiftType.toLowerCase(),\n          employee_id: editEmployeeId\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      fetchShifts();\n      setIsModalOpen(false);\n      alert(\"Shift updated successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to edit shift.\");\n    }\n  };\n  const handleDeleteShift = async () => {\n    try {\n      const response = await fetch(\"http://192.168.29.194:5000/api/delete_shift\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          shift_id: selectedShift.id\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        alert(\"Error: \" + result.error);\n        return;\n      }\n      fetchShifts();\n      setIsModalOpen(false);\n      alert(\"Shift deleted successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to delete shift.\");\n    }\n  };\n  const slotLabelContent = arg => {\n    if (arg.date.getHours() === 0) return \"Night\";\n    if (arg.date.getHours() === 8) return \"Morning\";\n    if (arg.date.getHours() === 16) return \"Evening\";\n    return \"\";\n  };\n  const slotLaneContent = arg => {\n    const hour = arg.date.getHours();\n    if (hour !== 0 && hour !== 8 && hour !== 16) {\n      return {\n        display: \"none\"\n      };\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shifts-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shifts-calendar\",\n      children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsAddModalOpen(true),\n        className: \"add-shift-btn\",\n        children: \"Create Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        slotDuration: \"08:00:00\",\n        slotLabelInterval: {\n          hours: 8\n        },\n        allDaySlot: false,\n        slotMinTime: \"00:00:00\",\n        slotMaxTime: \"24:00:00\",\n        events: shifts,\n        eventClick: handleEventClick,\n        slotLabelContent: slotLabelContent,\n        slotLaneContent: slotLaneContent,\n        headerToolbar: {\n          left: \"prev,next,today\",\n          center: \"title\",\n          right: \"timeGridDay,timeGridWeek,dayGridMonth\"\n        },\n        height: \"auto\",\n        eventOverlap: false,\n        displayEventTime: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shift Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), selectedShift && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Shift:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), \" \", selectedShift.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), \" \", new Date(selectedShift.start).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), \" \", new Date(selectedShift.end).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Comments / Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          disabled: !isWithinShift(),\n          placeholder: isWithinShift() ? \"Add or edit your notes here...\" : \"Editing is disabled outside shift time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editShiftDate,\n            onChange: e => setEditShiftDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Shift Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editShiftType,\n            onChange: e => setEditShiftType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Morning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Evening\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Night\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Employee:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editEmployeeId,\n            onChange: e => setEditEmployeeId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), analysts.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: emp.id,\n              children: emp.username\n            }, emp.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !isWithinShift(),\n            className: \"modal-btn save-btn\",\n            children: \"Save Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditShift,\n              className: \"modal-btn edit-btn\",\n              children: \"Update Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteShift,\n              className: \"modal-btn delete-btn\",\n              children: \"Delete Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            className: \"modal-btn cancel-btn\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAddModalOpen,\n      onRequestClose: () => setIsAddModalOpen(false),\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newShiftDate,\n        onChange: e => setNewShiftDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Shift Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newShiftType,\n        onChange: e => setNewShiftType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Morning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Evening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Night\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Employees:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-checkboxes\",\n        children: analysts.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employee-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `emp-${emp.id}`,\n            checked: selectedEmployees.includes(emp.username),\n            onChange: () => handleEmployeeToggle(emp.username)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `emp-${emp.id}`,\n            children: emp.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddShift,\n          className: \"modal-btn save-btn\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddModalOpen(false),\n          className: \"modal-btn cancel-btn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(Shifts, \"hnnxFEGM4L+6RbNruTRyJPsJ3tY=\", false, function () {\n  return [useAuth];\n});\n_c = Shifts;\nexport default Shifts;\nvar _c;\n$RefreshReg$(_c, \"Shifts\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","shiftTimeMapping","Night","start","end","Morning","Evening","Shifts","_s","user","isAdmin","role","shifts","setShifts","selectedShift","setSelectedShift","comment","setComment","commentsMap","setCommentsMap","isModalOpen","setIsModalOpen","isAddModalOpen","setIsAddModalOpen","newShiftDate","setNewShiftDate","newShiftType","setNewShiftType","selectedEmployees","setSelectedEmployees","analysts","setAnalysts","editShiftType","setEditShiftType","editShiftDate","setEditShiftDate","editEmployeeId","setEditEmployeeId","fetchShifts","fetch","then","res","json","data","catch","err","console","error","handleEmployeeToggle","username","prev","includes","filter","u","handleEventClick","info","shift","event","id","date","toISOString","slice","shiftType","title","firstEmp","split","matchedEmp","find","emp","isWithinShift","now","Date","handleSave","handleAddShift","length","alert","startDateTime","endDateTime","setDate","getDate","selectedEmployeeObjects","response","method","headers","body","JSON","stringify","shift_type","toLowerCase","employee_ids","ok","handleEditShift","_analysts$find","shiftId","selectedUsername","isDuplicate","some","sameStart","getTime","sameEnd","sameEmployee","differentShift","String","shift_id","employee_id","result","handleDeleteShift","slotLabelContent","arg","getHours","slotLaneContent","hour","display","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","slotDuration","slotLabelInterval","hours","allDaySlot","slotMinTime","slotMaxTime","events","eventClick","headerToolbar","left","center","right","height","eventOverlap","displayEventTime","isOpen","onRequestClose","overlayClassName","toLocaleString","rows","value","onChange","e","target","disabled","placeholder","type","map","checked","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Portal/soc-portal/src/pages/Shifts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport Modal from \"react-modal\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/Shifts.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst shiftTimeMapping = {\r\n  Night: { start: \"00:00\", end: \"08:00\" },\r\n  Morning: { start: \"08:00\", end: \"16:00\" },\r\n  Evening: { start: \"16:00\", end: \"24:00\" },\r\n};\r\n\r\nconst Shifts = () => {\r\n  const { user } = useAuth();\r\n  const isAdmin = user?.role === \"admin\";\r\n\r\n  const [shifts, setShifts] = useState([]);\r\n  const [selectedShift, setSelectedShift] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [newShiftDate, setNewShiftDate] = useState(\"\");\r\n  const [newShiftType, setNewShiftType] = useState(\"Night\");\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n  const [analysts, setAnalysts] = useState([]);\r\n\r\n  const [editShiftType, setEditShiftType] = useState(\"Night\");\r\n  const [editShiftDate, setEditShiftDate] = useState(\"\");\r\n  const [editEmployeeId, setEditEmployeeId] = useState(\"\");\r\n\r\n  const fetchShifts = () => {\r\n    fetch(\"http://192.168.29.194:5000/api/shifts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setShifts(data))\r\n      .catch((err) => console.error(\"Failed to fetch shifts:\", err));\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchShifts();\r\n    fetch(\"http://192.168.29.194:5000/api/analysts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAnalysts(data))\r\n      .catch((err) => console.error(\"Failed to fetch analysts:\", err));\r\n  }, []);\r\n\r\n  const handleEmployeeToggle = (username) => {\r\n    setSelectedEmployees((prev) =>\r\n      prev.includes(username)\r\n        ? prev.filter((u) => u !== username)\r\n        : [...prev, username]\r\n    );\r\n  };\r\n\r\n  const handleEventClick = (info) => {\r\n    const shift = info.event;\r\n    setSelectedShift(shift);\r\n    setComment(commentsMap[shift.id] || \"\");\r\n\r\n    if (isAdmin) {\r\n      const date = shift.start.toISOString().slice(0, 10);\r\n      let shiftType = \"Morning\";\r\n      if (shift.title.includes(\"Morning\")) shiftType = \"Morning\";\r\n      else if (shift.title.includes(\"Evening\")) shiftType = \"Evening\";\r\n      else if (shift.title.includes(\"Night\")) shiftType = \"Night\";\r\n\r\n      const firstEmp = shift.title.split(\" - \")[0];\r\n      const matchedEmp = analysts.find((emp) => emp.username === firstEmp);\r\n\r\n      setEditShiftType(shiftType);\r\n      setEditShiftDate(date);\r\n      setEditEmployeeId(matchedEmp?.id || \"\");\r\n    }\r\n\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const isWithinShift = () => {\r\n    if (!selectedShift) return false;\r\n    const now = new Date();\r\n    const start = new Date(selectedShift.start);\r\n    const end = new Date(selectedShift.end);\r\n    return now >= start && now <= end;\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedShift) {\r\n      setCommentsMap((prev) => ({\r\n        ...prev,\r\n        [selectedShift.id]: comment,\r\n      }));\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleAddShift = async () => {\r\n    if (selectedEmployees.length === 0 || !newShiftDate || !newShiftType) {\r\n      alert(\"Please fill all fields.\");\r\n      return;\r\n    }\r\n\r\n    const { start, end } = shiftTimeMapping[newShiftType];\r\n    const startDateTime = new Date(`${newShiftDate}T${start}`);\r\n    let endDateTime = new Date(`${newShiftDate}T${end}`);\r\n    if (end === \"00:00\") {\r\n      endDateTime.setDate(endDateTime.getDate() + 1);\r\n    }\r\n\r\n    const selectedEmployeeObjects = analysts.filter((emp) =>\r\n      selectedEmployees.includes(emp.username)\r\n    );\r\n\r\n    try {\r\n      for (let emp of selectedEmployeeObjects) {\r\n        const response = await fetch(\r\n          \"http://192.168.29.194:5000/api/create_shift\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              date: newShiftDate,\r\n              shift_type: newShiftType.toLowerCase(),\r\n              employee_ids: [emp.id],\r\n            }),\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          alert(\"Error: \" + data.error);\r\n          return;\r\n        }\r\n      }\r\n\r\n      fetchShifts();\r\n      alert(\"Shift(s) created successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to create shift.\");\r\n    }\r\n\r\n    setIsAddModalOpen(false);\r\n    setSelectedEmployees([]);\r\n  };\r\n\r\n  const handleEditShift = async () => {\r\n    try {\r\n      const shiftId = selectedShift.id;\r\n\r\n      const { start, end } = shiftTimeMapping[editShiftType];\r\n      const startDateTime = new Date(`${editShiftDate}T${start}`);\r\n      let endDateTime = new Date(`${editShiftDate}T${end}`);\r\n      if (end === \"00:00\") {\r\n        endDateTime.setDate(endDateTime.getDate() + 1);\r\n      }\r\n\r\n      const selectedUsername =\r\n        analysts.find((emp) => emp.id === editEmployeeId)?.username || \"\";\r\n\r\n      const isDuplicate = shifts.some((shift) => {\r\n        const sameStart = new Date(shift.start).getTime() === startDateTime.getTime();\r\n        const sameEnd = new Date(shift.end).getTime() === endDateTime.getTime();\r\n        const sameEmployee = shift.title.includes(selectedUsername);\r\n        const differentShift = String(shift.id) !== String(shiftId);\r\n        return differentShift && sameStart && sameEnd && sameEmployee;\r\n      });\r\n\r\n      if (isDuplicate) {\r\n        alert(\"Another shift already exists in that slot!\");\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(\"http://192.168.29.194:5000/api/edit_shift\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          shift_id: shiftId,\r\n          date: editShiftDate,\r\n          shift_type: editShiftType.toLowerCase(),\r\n          employee_id: editEmployeeId,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n      fetchShifts();\r\n      setIsModalOpen(false);\r\n      alert(\"Shift updated successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to edit shift.\");\r\n    }\r\n  };\r\n  const handleDeleteShift = async () => {\r\n    try {\r\n      const response = await fetch(\"http://192.168.29.194:5000/api/delete_shift\", {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ shift_id: selectedShift.id }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) {\r\n        alert(\"Error: \" + result.error);\r\n        return;\r\n      }\r\n      fetchShifts();\r\n      setIsModalOpen(false);\r\n      alert(\"Shift deleted successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to delete shift.\");\r\n    }\r\n  };\r\n\r\n  const slotLabelContent = (arg) => {\r\n    if (arg.date.getHours() === 0) return \"Night\";\r\n    if (arg.date.getHours() === 8) return \"Morning\";\r\n    if (arg.date.getHours() === 16) return \"Evening\";\r\n    return \"\";\r\n  };\r\n\r\n  const slotLaneContent = (arg) => {\r\n    const hour = arg.date.getHours();\r\n    if (hour !== 0 && hour !== 8 && hour !== 16) {\r\n      return { display: \"none\" };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"shifts-wrapper\">\r\n      <div className=\"shifts-calendar\">\r\n        {isAdmin && (\r\n          <button \r\n            onClick={() => setIsAddModalOpen(true)} \r\n            className=\"add-shift-btn\"\r\n          >\r\n            Create Shift\r\n          </button>\r\n        )}\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          initialView=\"timeGridWeek\"\r\n          slotDuration=\"08:00:00\"\r\n          slotLabelInterval={{ hours: 8 }}\r\n          allDaySlot={false}\r\n          slotMinTime=\"00:00:00\"\r\n          slotMaxTime=\"24:00:00\"\r\n          events={shifts}\r\n          eventClick={handleEventClick}\r\n          slotLabelContent={slotLabelContent}\r\n          slotLaneContent={slotLaneContent}\r\n          headerToolbar={{\r\n            left: \"prev,next,today\",\r\n            center: \"title\",\r\n            right: \"timeGridDay,timeGridWeek,dayGridMonth\",\r\n          }}\r\n          height=\"auto\"\r\n          eventOverlap={false}\r\n          displayEventTime={false}\r\n        />\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Shift Details</h2>\r\n        {selectedShift && (\r\n          <>\r\n            <p>\r\n              <strong>Shift:</strong> {selectedShift.title}\r\n            </p>\r\n            <p>\r\n              <strong>Start:</strong>{\" \"}\r\n              {new Date(selectedShift.start).toLocaleString()}\r\n            </p>\r\n            <p>\r\n              <strong>End:</strong> {new Date(selectedShift.end).toLocaleString()}\r\n            </p>\r\n\r\n            <label>Comments / Notes:</label>\r\n            <textarea\r\n              rows=\"4\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n              disabled={!isWithinShift()}\r\n              placeholder={\r\n                isWithinShift()\r\n                  ? \"Add or edit your notes here...\"\r\n                  : \"Editing is disabled outside shift time.\"\r\n              }\r\n            />\r\n\r\n            {isAdmin && (\r\n              <>\r\n                <h3>Edit Shift</h3>\r\n                <label>Date:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={editShiftDate}\r\n                  onChange={(e) => setEditShiftDate(e.target.value)}\r\n                />\r\n\r\n                <label>Shift Type:</label>\r\n                <select\r\n                  value={editShiftType}\r\n                  onChange={(e) => setEditShiftType(e.target.value)}\r\n                >\r\n                  <option>Morning</option>\r\n                  <option>Evening</option>\r\n                  <option>Night</option>\r\n                </select>\r\n\r\n                <label>Employee:</label>\r\n                <select\r\n                  value={editEmployeeId}\r\n                  onChange={(e) => setEditEmployeeId(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select employee</option>\r\n                  {analysts.map((emp) => (\r\n                    <option key={emp.id} value={emp.id}>\r\n                      {emp.username}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </>\r\n            )}\r\n\r\n            <div className=\"modal-buttons\">\r\n              <button \r\n                onClick={handleSave} \r\n                disabled={!isWithinShift()}\r\n                className=\"modal-btn save-btn\"\r\n              >\r\n                Save Comments\r\n              </button>\r\n              {isAdmin && (\r\n                <>\r\n                  <button \r\n                    onClick={handleEditShift}\r\n                    className=\"modal-btn edit-btn\"\r\n                  >\r\n                    Update Shift\r\n                  </button>\r\n                  <button \r\n                    onClick={handleDeleteShift} \r\n                    className=\"modal-btn delete-btn\"\r\n                  >\r\n                    Delete Shift\r\n                  </button>\r\n                </>\r\n              )}\r\n              <button \r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"modal-btn cancel-btn\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Modal>\r\n\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onRequestClose={() => setIsAddModalOpen(false)}\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Create New Shift</h2>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={newShiftDate}\r\n          onChange={(e) => setNewShiftDate(e.target.value)}\r\n        />\r\n\r\n        <label>Shift Type:</label>\r\n        <select\r\n          value={newShiftType}\r\n          onChange={(e) => setNewShiftType(e.target.value)}\r\n        >\r\n          <option>Morning</option>\r\n          <option>Evening</option>\r\n          <option>Night</option>\r\n        </select>\r\n\r\n        <label>Select Employees:</label>\r\n        <div className=\"employees-checkboxes\">\r\n          {analysts.map((emp) => (\r\n            <div key={emp.id} className=\"employee-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`emp-${emp.id}`}\r\n                checked={selectedEmployees.includes(emp.username)}\r\n                onChange={() => handleEmployeeToggle(emp.username)}\r\n              />\r\n              <label htmlFor={`emp-${emp.id}`}>{emp.username}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"modal-buttons\">\r\n          <button \r\n            onClick={handleAddShift}\r\n            className=\"modal-btn save-btn\"\r\n          >\r\n            Create\r\n          </button>\r\n          <button \r\n            onClick={() => setIsAddModalOpen(false)}\r\n            className=\"modal-btn cancel-btn\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shifts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}